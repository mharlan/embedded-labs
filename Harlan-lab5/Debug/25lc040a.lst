ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   1


PC     Object              I  Line    Source 
                           A     1    ; ZiLOG ZNEO ANSI C Compiler Release 1.11
                           A     2    ; -nolocalcse -optsize -model=S -nomodsect -noregvar
                           A     3    ; -reduceopt -debug -peephole -const=ROM -alias -fastcall
                           A     4    	FILE	"..\25LC040A.C"
                           A     5    .debug "C"
                           A     6    	SEGMENT CODE
                           A     7    ;    1	
                           A     8    ;    2	#include "spi.h"
                           A     9    ;    3	#include "uart.h"
                           A    10    ;    4	#include "delay.h"
                           A    11    ;    5	
                           A    12    ;    6	#include <zneo.h>
                           A    13    ;    7	
                           A    14    ;    8	#define READ  0x03
                           A    15    ;    9	#define WRITE 0x02
                           A    16    ;   10	#define WRDI  0x04
                           A    17    ;   11	#define WREN  0x06
                           A    18    ;   12	#define RDSR  0x05
                           A    19    ;   13	#define WRSR  0x01
                           A    20    ;   14	
                           A    21    ;   15	#define ADDR_MSB 0x0100
                           A    22    ;   16	
                           A    23    ;   17	void init_25lc040a(void)
                           A    24    ;   18	{
00000000                   A    25    _init_25lc040a:
                           A    26    .define "_init_25lc040a"
                           A    27    .value _init_25lc040a
                           A    28    .class 2
                           A    29    .type 65
                           A    30    .type 0
                           A    31    .endef
                           A    32    .begfunc "init_25lc040a",18,"_init_25lc040a"
00000000 0800              A    33    	LINK	#0
                           A    34    ;   19		init_spi();
                           A    35    .line 19
00000002 F1 FFFFFD         A    36    	CALL	_init_spi
                           A    37    ;   20	}
                           A    38    .line 20
00000006 0001              A    39    	UNLINK	
00000008 FFFC              A    40    	RET	
                           A    41    
                           A    42    
                           A    43    ;**************************** _init_25lc040a ***************************
                           A    44    ;Name                         Addr/Register   Size   Type
                           A    45    ;_init_spi                           IMPORT  -----   function
                           A    46    
                           A    47    
                           A    48    ; Aggregate Stack Size: 0 (words)
                           A    49    
                           A    50    
                           A    51    .endfunc "init_25lc040a",20,"_init_25lc040a"
                           A    52    ;   21	
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   2


PC     Object              I  Line    Source 25lc040a.src
                           A    53    ;   22	void _25lc040a_write_bytes_addr(long int addr, int length)
                           A    54    ;   23	{
0000000A                   A    55    __25lc040a_write_bytes_addr:
                           A    56    .define "__25lc040a_write_bytes_addr"
                           A    57    .value __25lc040a_write_bytes_addr
                           A    58    .class 2
                           A    59    .type 65
                           A    60    .type 0
                           A    61    .endef
                           A    62    .begfunc "_25lc040a_write_bytes_addr",23,"__25lc040a_write_bytes_addr"
0000000A 080D              A    63    	LINK	#13
                           A    64    .line 23
0000000C 5BC1              A    65    	LD	-4(R14),R1
                           A    66    .define "addr"
                           A    67    .class 9
                           A    68    .value -4
                           A    69    .type 5
                           A    70    .type 0
                           A    71    .endef
0000000E 5B82              A    72    	LD	-8(R14),R2
                           A    73    .define "length"
                           A    74    .class 9
                           A    75    .value -8
                           A    76    .type 5
                           A    77    .type 0
                           A    78    .endef
                           A    79    .define "ctrl"
                           A    80    .class 1
                           A    81    .value -9
                           A    82    .type 12
                           A    83    .type 0
                           A    84    .endef
                           A    85    .define "i"
                           A    86    .class 1
                           A    87    .value -13
                           A    88    .type 5
                           A    89    .type 0
                           A    90    .endef
00000010 C005              A    91    	JP	_2_L_1
                           A    92    ;   24		unsigned char ctrl;
                           A    93    ;   25		int i;
                           A    94    ;   26		
                           A    95    ;   27		for(i = 0; i < length; ++i) {
00000012                   A    96    _2_L_2:
                           A    97    .line 27
00000012 5F80              A    98    	LD	R0,-8(R14)
00000014 7D0E FFF3         A    99    	CP	-13(R14),R0
00000018 E1 04             A   100    	JP	LT,_2_L_4
0000001A C025              A   101    	JP	_2_L_5
0000001C                   A   102    _2_L_1:
0000001C ADCE BFF3         A   103    	CLR	-13(R14)
00000020 CFF8              A   104    	JP	_2_L_2
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   3


PC     Object              I  Line    Source 25lc040a.src
00000022                   A   105    _2_L_4:
                           A   106    ;   28			spi_enable();
                           A   107    .line 28
00000022 F1 FFFFED         A   108    	CALL	_spi_enable
                           A   109    ;   29			spi_transfer(WREN);
                           A   110    .line 29
00000026 3106              A   111    	LD	R1,#6
00000028 F1 FFFFEA         A   112    	CALL	_spi_transfer
                           A   113    ;   30			spi_disable();
                           A   114    .line 30
0000002C F1 FFFFE8         A   115    	CALL	_spi_disable
                           A   116    ;   31	
                           A   117    ;   32			ctrl = (addr & ADDR_MSB) >> 5;
                           A   118    .line 32
00000030 5FC0              A   119    	LD	R0,-4(R14)
00000032 B850              A   120    	SRA	R0,#5
00000034 AA20 0008         A   121    	AND	R0,#8
00000038 5370              A   122    	LD.B	-9(R14),R0
                           A   123    ;   33			ctrl |= WRITE;
                           A   124    .line 33
0000003A 3002              A   125    	LD	R0,#2
0000003C 7B0E BFF7         A   126    	OR.B	-9(R14),R0
                           A   127    ;   34	
                           A   128    ;   35			spi_enable();
                           A   129    .line 35
00000040 F1 FFFFDE         A   130    	CALL	_spi_enable
                           A   131    ;   36			spi_transfer(ctrl);
                           A   132    .line 36
00000044 6B71              A   133    	LD.SB	R1,-9(R14)
00000046 F1 FFFFDB         A   134    	CALL	_spi_transfer
                           A   135    ;   37			spi_write((unsigned char)addr, (unsigned char)i);
                           A   136    .line 37
0000004A 6B62              A   137    	LD.SB	R2,-10(R14)
0000004C 6BF1              A   138    	LD.SB	R1,-1(R14)
0000004E F1 FFFFD7         A   139    	CALL	_spi_write
                           A   140    ;   38			spi_disable();
                           A   141    .line 38
00000052 F1 FFFFD5         A   142    	CALL	_spi_disable
                           A   143    ;   39	
                           A   144    ;   40			delay_ms(5);
                           A   145    .line 40
00000056 3105              A   146    	LD	R1,#5
00000058 F1 FFFFD2         A   147    	CALL	_delay_ms
                           A   148    ;   41	
                           A   149    ;   42			++addr;
                           A   150    .line 42
0000005C ADEE BFFC         A   151    	INC	-4(R14)
                           A   152    ;   43		}
                           A   153    .line 43
00000060 ADEE BFF3         A   154    	INC	-13(R14)
00000064 CFD6              A   155    	JP	_2_L_2
                           A   156    ;   44	}
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   4


PC     Object              I  Line    Source 25lc040a.src
00000066                   A   157    _2_L_5:
                           A   158    .line 44
00000066 0001              A   159    	UNLINK	
00000068 FFFC              A   160    	RET	
                           A   161    
                           A   162    
                           A   163    ;**************************** __25lc040a_write_bytes_addr ***************************
                           A   164    ;Name                         Addr/Register   Size   Type
                           A   165    ;_delay_ms                           IMPORT  -----   function
                           A   166    ;_spi_write                          IMPORT  -----   function
                           A   167    ;_spi_disable                        IMPORT  -----   function
                           A   168    ;_spi_transfer                       IMPORT  -----   function
                           A   169    ;_spi_enable                         IMPORT  -----   function
                           A   170    ;i                                   R14-13      4   variable
                           A   171    ;ctrl                                 R14-9      1   variable
                           A   172    ;length                               R14-8      4   parameter
                           A   173    ;addr                                 R14-4      4   parameter
                           A   174    
                           A   175    
                           A   176    ; Aggregate Stack Size: -13 (words)
                           A   177    
                           A   178    
                           A   179    .endfunc "_25lc040a_write_bytes_addr",44,"__25lc040a_write_bytes_addr"
                           A   180    	SEGMENT ROM_TEXT
00000000                   A   181    L__5:
00000000 0A                A   182    	DB	10
00000001 252E3458 202D20   A   183    	DB	"%.4X - "
00000008 00                A   184    	DB	0
00000009                   A   185    L__6:
00000009 252E3258 20       A   186    	DB	"%.2X "
0000000E 00                A   187    	DB	0
                           A   188    	SEGMENT CODE
                           A   189    ;   45	
                           A   190    ;   46	void _25lc040a_read_bytes_hex_dump(long int addr, int length)
                           A   191    ;   47	{
0000006A                   A   192    __25lc040a_read_bytes_hex_dump:
                           A   193    .define "__25lc040a_read_bytes_hex_dump"
                           A   194    .value __25lc040a_read_bytes_hex_dump
                           A   195    .class 2
                           A   196    .type 65
                           A   197    .type 0
                           A   198    .endef
                           A   199    .begfunc "_25lc040a_read_bytes_hex_dump",47,"__25lc040a_read_bytes_hex_dump"
0000006A 080E              A   200    	LINK	#14
                           A   201    .line 47
0000006C 5BC1              A   202    	LD	-4(R14),R1
                           A   203    .define "addr"
                           A   204    .class 9
                           A   205    .value -4
                           A   206    .type 5
                           A   207    .type 0
                           A   208    .endef
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   5


PC     Object              I  Line    Source 25lc040a.src
0000006E 5B82              A   209    	LD	-8(R14),R2
                           A   210    .define "length"
                           A   211    .class 9
                           A   212    .value -8
                           A   213    .type 5
                           A   214    .type 0
                           A   215    .endef
                           A   216    .define "ctrl"
                           A   217    .class 1
                           A   218    .value -9
                           A   219    .type 12
                           A   220    .type 0
                           A   221    .endef
                           A   222    .define "data"
                           A   223    .class 1
                           A   224    .value -10
                           A   225    .type 12
                           A   226    .type 0
                           A   227    .endef
                           A   228    .define "i"
                           A   229    .class 1
                           A   230    .value -14
                           A   231    .type 5
                           A   232    .type 0
                           A   233    .endef
00000070 C005              A   234    	JP	_3_L_8
                           A   235    ;   48		unsigned char ctrl;
                           A   236    ;   49		unsigned char data;
                           A   237    ;   50		int i;
                           A   238    ;   51		
                           A   239    ;   52		for(i = 0; i < length; ++i) {
00000072                   A   240    _3_L_9:
                           A   241    .line 52
00000072 5F80              A   242    	LD	R0,-8(R14)
00000074 7D0E FFF2         A   243    	CP	-14(R14),R0
00000078 E1 04             A   244    	JP	LT,_3_L_11
0000007A C02E              A   245    	JP	_3_L_12
0000007C                   A   246    _3_L_8:
0000007C ADCE BFF2         A   247    	CLR	-14(R14)
00000080 CFF8              A   248    	JP	_3_L_9
00000082                   A   249    _3_L_11:
                           A   250    ;   53			if((i % 8) == 0) {
                           A   251    .line 53
00000082 3008              A   252    	LD	R0,#8
00000084 5F21              A   253    	LD	R1,-14(R14)
00000086 AF01              A   254    	SDIV	R1,R0
00000088 9000              A   255    	CP	R0,#0
0000008A EE 07             A   256    	JP	NE,_3_L_7
                           A   257    ;   54				uart_printf("\n%.4X - ", addr);
                           A   258    .line 54
0000008C 5FC0              A   259    	LD	R0,-4(R14)
0000008E 100F              A   260    	PUSH	R0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   6


PC     Object              I  Line    Source 25lc040a.src
00000090 098F 0000         A   261    	PUSH.W	#L__5
00000094 F1 FFFFB4         A   262    	CALL	_uart_printf
00000098 8F06              A   263    	ADD	R15,#6
                           A   264    ;   55			}
0000009A                   A   265    _3_L_7:
                           A   266    .line 55
                           A   267    ;   56	
                           A   268    ;   57			ctrl = (addr & ADDR_MSB) >> 5;
                           A   269    .line 57
0000009A 5FC0              A   270    	LD	R0,-4(R14)
0000009C B850              A   271    	SRA	R0,#5
0000009E AA20 0008         A   272    	AND	R0,#8
000000A2 5370              A   273    	LD.B	-9(R14),R0
                           A   274    ;   58			ctrl |= READ;
                           A   275    .line 58
000000A4 3003              A   276    	LD	R0,#3
000000A6 7B0E BFF7         A   277    	OR.B	-9(R14),R0
                           A   278    ;   59	
                           A   279    ;   60			spi_enable();
                           A   280    .line 60
000000AA F1 FFFFA9         A   281    	CALL	_spi_enable
                           A   282    ;   61			spi_transfer(ctrl);
                           A   283    .line 61
000000AE 6B71              A   284    	LD.SB	R1,-9(R14)
000000B0 F1 FFFFA6         A   285    	CALL	_spi_transfer
                           A   286    ;   62			data = spi_read((unsigned char)addr);
                           A   287    .line 62
000000B4 6BF1              A   288    	LD.SB	R1,-1(R14)
000000B6 F1 FFFFA3         A   289    	CALL	_spi_read
000000BA 5360              A   290    	LD.B	-10(R14),R0
                           A   291    ;   63			spi_disable();
                           A   292    .line 63
000000BC F1 FFFFA0         A   293    	CALL	_spi_disable
                           A   294    ;   64	
                           A   295    ;   65			++addr;
                           A   296    .line 65
000000C0 ADEE BFFC         A   297    	INC	-4(R14)
                           A   298    ;   66	
                           A   299    ;   67			uart_printf("%.2X ", data);
                           A   300    .line 67
000000C4 6360              A   301    	LD.UB	R0,-10(R14)
000000C6 100F              A   302    	PUSH	R0
000000C8 098F 0009         A   303    	PUSH.W	#L__6
000000CC F1 FFFF98         A   304    	CALL	_uart_printf
000000D0 8F06              A   305    	ADD	R15,#6
                           A   306    ;   68		}
                           A   307    .line 68
000000D2 ADEE BFF2         A   308    	INC	-14(R14)
000000D6 CFCD              A   309    	JP	_3_L_9
000000D8                   A   310    _3_L_12:
                           A   311    ;   69	
                           A   312    ;   70		uart_putchar('\n');
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               29-Mar-11     22:45:38     page:   7


PC     Object              I  Line    Source 25lc040a.src
                           A   313    .line 70
000000D8 310A              A   314    	LD	R1,#10
000000DA F1 FFFF91         A   315    	CALL	_uart_putchar
                           A   316    ;   71	}
                           A   317    .line 71
000000DE 0001              A   318    	UNLINK	
000000E0 FFFC              A   319    	RET	
                           A   320    
                           A   321    
                           A   322    ;**************************** __25lc040a_read_bytes_hex_dump ***************************
                           A   323    ;Name                         Addr/Register   Size   Type
                           A   324    ;_uart_putchar                       IMPORT  -----   function
                           A   325    ;_spi_disable                        IMPORT  -----   function
                           A   326    ;_spi_read                           IMPORT  -----   function
                           A   327    ;_spi_transfer                       IMPORT  -----   function
                           A   328    ;_spi_enable                         IMPORT  -----   function
                           A   329    ;_uart_printf                        IMPORT  -----   function
                           A   330    ;i                                   R14-14      4   variable
                           A   331    ;data                                R14-10      1   variable
                           A   332    ;ctrl                                 R14-9      1   variable
                           A   333    ;length                               R14-8      4   parameter
                           A   334    ;addr                                 R14-4      4   parameter
                           A   335    
                           A   336    
                           A   337    ; Aggregate Stack Size: -14 (words)
                           A   338    
                           A   339    
                           A   340    .endfunc "_25lc040a_read_bytes_hex_dump",71,"__25lc040a_read_bytes_hex_dump"
                           A   341    	XREF _delay_ms:EROM
                           A   342    	XREF _uart_printf:EROM
                           A   343    	XREF _uart_putchar:EROM
                           A   344    	XREF _spi_read:EROM
                           A   345    	XREF _spi_write:EROM
                           A   346    	XREF _spi_transfer:EROM
                           A   347    	XREF _spi_disable:EROM
                           A   348    	XREF _spi_enable:EROM
                           A   349    	XREF _init_spi:EROM
                           A   350    	XDEF __25lc040a_read_bytes_hex_dump
                           A   351    	XDEF __25lc040a_write_bytes_addr
                           A   352    	XDEF _init_25lc040a
                           A   353    	END


Errors: 0
Warnings: 0
Lines Assembled: 354
