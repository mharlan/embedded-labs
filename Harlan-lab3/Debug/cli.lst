ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   1


PC     Object              I  Line    Source 
                           A     1    ; ZiLOG ZNEO ANSI C Compiler Release 1.11
                           A     2    ; -nolocalcse -optsize -model=S -nomodsect -noregvar
                           A     3    ; -reduceopt -debug -peephole -const=ROM -alias -fastcall
                           A     4    	FILE	"..\CLI.C"
                           A     5    .debug "C"
                           A     6    	SEGMENT NEAR_BSS
00000000                   A     7    _cli_prompt:
00000000                   A     8    	DS	256
                           A     9    .define "cli_prompt"
                           A    10    .alias "_cli_prompt"
                           A    11    .class 147
                           A    12    .value _cli_prompt
                           A    13    .dim 256
                           A    14    .type 108
                           A    15    .type 0
                           A    16    .endef
                           A    17    	SEGMENT CODE
                           A    18    .begrec "NONAME0",8
                           A    19    .define "quot"
                           A    20    .value 0
                           A    21    .class 8
                           A    22    .type 5
                           A    23    .type 0
                           A    24    .endef
                           A    25    .define "rem"
                           A    26    .value 4
                           A    27    .class 8
                           A    28    .type 5
                           A    29    .type 0
                           A    30    .endef
                           A    31    .endrec "NONAME0"
                           A    32    .begrec "NONAME1",8
                           A    33    .define "quot"
                           A    34    .value 0
                           A    35    .class 8
                           A    36    .type 5
                           A    37    .type 0
                           A    38    .endef
                           A    39    .define "rem"
                           A    40    .value 4
                           A    41    .class 8
                           A    42    .type 5
                           A    43    .type 0
                           A    44    .endef
                           A    45    .endrec "NONAME1"
                           A    46    	SEGMENT ROM_TEXT
00000000                   A    47    L__0:
00000000 3E20              A    48    	DB	"> "
00000002 00                A    49    	DB	0
                           A    50    ;    1	#include "cli.h"
                           A    51    ;    2	#include "LED.h"
                           A    52    ;    3	#include "oscillator.h"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   2


PC     Object              I  Line    Source cli.src
                           A    53    ;    4	#include "uart.h"
                           A    54    ;    5	
                           A    55    ;    6	#include <stdlib.h>
                           A    56    ;    7	#include <string.h>
                           A    57    ;    8	#include <ctype.h>
                           A    58    ;    9	
                           A    59    ;   10	#define CLI_PROMPT      "> "
                           A    60    ;   11	#define CLI_BUFFER_SIZE 256
                           A    61    ;   12	
                           A    62    ;   13	static char cli_prompt[CLI_BUFFER_SIZE];
                           A    63    	SEGMENT CODE
                           A    64    ;   14	
                           A    65    ;   15	static void cli_process_command(const char *command);
                           A    66    ;   16	static void cli_display(char *text);
                           A    67    ;   17	static void cli_question(void);
                           A    68    ;   18	
                           A    69    ;   19	void init_cli(void)
                           A    70    ;   20	{
00000000                   A    71    _init_cli:
                           A    72    .define "_init_cli"
                           A    73    .value _init_cli
                           A    74    .class 2
                           A    75    .type 65
                           A    76    .type 0
                           A    77    .endef
                           A    78    .begfunc "init_cli",20,"_init_cli"
00000000 0800              A    79    	LINK	#0
                           A    80    ;   21		//initialize the hardware
                           A    81    ;   22		init_leds();
                           A    82    .line 22
00000002 F1 FFFFFD         A    83    	CALL	_init_leds
                           A    84    ;   23		init_uart();
                           A    85    .line 23
00000006 F1 FFFFFB         A    86    	CALL	_init_uart
                           A    87    ;   24	
                           A    88    ;   25		strcpy(cli_prompt, CLI_PROMPT);
                           A    89    .line 25
0000000A 4511 0000         A    90    	LD	R1,#_cli_prompt
0000000E 4502 0000         A    91    	LD	R2,#L__0
00000012 F1 FFFFF5         A    92    	CALL	_strcpy
                           A    93    ;   26	}
                           A    94    .line 26
00000016 0001              A    95    	UNLINK	
00000018 FFFC              A    96    	RET	
                           A    97    
                           A    98    
                           A    99    ;**************************** _init_cli ***************************
                           A   100    ;Name                         Addr/Register   Size   Type
                           A   101    ;_cli_prompt                         STATIC    256   variable
                           A   102    ;_strcpy                             IMPORT  -----   function
                           A   103    ;_init_uart                          IMPORT  -----   function
                           A   104    ;_init_leds                          IMPORT  -----   function
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   3


PC     Object              I  Line    Source cli.src
                           A   105    
                           A   106    
                           A   107    ; Aggregate Stack Size: 0 (words)
                           A   108    
                           A   109    
                           A   110    .endfunc "init_cli",26,"_init_cli"
                           A   111    	SEGMENT ROM_TEXT
00000003                   A   112    L__2:
00000003 2573              A   113    	DB	"%s"
00000005 00                A   114    	DB	0
00000006                   A   115    L__5:
00000006 2573              A   116    	DB	"%s"
00000008 00                A   117    	DB	0
00000009                   A   118    L__7:
00000009 0A                A   119    	DB	10
0000000A 2D2D4572          A   120    	DB	"--Error--, command is too long. Command ignored."
0000000E 726F722D 
00000012 2D2C2063 
00000016 6F6D6D61 
0000001A 6E642069 
0000001E 7320746F 
00000022 6F206C6F 
00000026 6E672E20 
0000002A 436F6D6D 
0000002E 616E6420 
00000032 69676E6F 
00000036 7265642E 
0000003A 0A00              A   121    	DB	10,0
0000003C                   A   122    L__8:
0000003C 2573              A   123    	DB	"%s"
0000003E 00                A   124    	DB	0
                           A   125    	SEGMENT CODE
                           A   126    ;   27	
                           A   127    ;   28	void cli_loop(void)
                           A   128    ;   29	{
0000001A                   A   129    _cli_loop:
                           A   130    .define "_cli_loop"
                           A   131    .value _cli_loop
                           A   132    .class 2
                           A   133    .type 65
                           A   134    .type 0
                           A   135    .endef
                           A   136    .begfunc "cli_loop",29,"_cli_loop"
                           A   137    .line 29
                           A   138    .define "c"
                           A   139    .class 1
                           A   140    .value -1
                           A   141    .type 12
                           A   142    .type 0
                           A   143    .endef
                           A   144    .define "buffer_pos"
                           A   145    .class 1
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   4


PC     Object              I  Line    Source cli.src
                           A   146    .value -5
                           A   147    .type 5
                           A   148    .type 0
                           A   149    .endef
                           A   150    .define "buffer"
                           A   151    .class 1
                           A   152    .value -261
                           A   153    .dim 256
                           A   154    .type 108
                           A   155    .type 0
                           A   156    .endef
0000001A 0800              A   157    	LINK	#0
0000001C AA1F 0105         A   158    	SUB	R15,#261
                           A   159    ;   30		char buffer[CLI_BUFFER_SIZE];
                           A   160    ;   31		char c;
                           A   161    ;   32	
                           A   162    ;   33		int buffer_pos;
                           A   163    ;   34	
                           A   164    ;   35		uart_printf("%s", cli_prompt);
                           A   165    .line 35
00000020 098F 0000         A   166    	PUSH.W	#_cli_prompt
00000024 098F 0003         A   167    	PUSH.W	#L__2
00000028 F1 FFFFEA         A   168    	CALL	_uart_printf
0000002C 8F04              A   169    	ADD	R15,#4
                           A   170    ;   36	
                           A   171    ;   37		buffer_pos = 0;
                           A   172    .line 37
0000002E ADCE BFFB         A   173    	CLR	-5(R14)
                           A   174    ;   38		while(1) {
00000032                   A   175    _2_L_9:
                           A   176    .line 38
                           A   177    ;   39			//wait until a character is available
                           A   178    ;   40			while((c = uart_getchar()) == 0) { ; }
00000032                   A   179    _2_L_1:
                           A   180    .line 40
00000032 F1 FFFFE5         A   181    	CALL	_uart_getchar
00000036 53F0              A   182    	LD.B	-1(R14),R0
00000038 ADDE 3FFF         A   183    	CPZ.B	-1(R14)
0000003C E6 FA             A   184    	JP	EQ,_2_L_1
                           A   185    ;   41	
                           A   186    ;   42			//new line means end of the command
                           A   187    ;   43			if(c == '\n') {
                           A   188    .line 43
0000003E 300A              A   189    	LD	R0,#10
00000040 7D0E BFFF         A   190    	CP.B	-1(R14),R0
00000044 EE 12             A   191    	JP	NE,_2_L_5
                           A   192    ;   44				buffer[buffer_pos] = '\0';
                           A   193    .line 44
00000046 6FD0              A   194    	LD.SW	R0,-3(R14)
00000048 48E1 BEFB         A   195    	LEA	R1,-261(R14)
0000004C A010              A   196    	ADD	R0,R1
0000004E AC00              A   197    	CLR.B	(R0)
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   5


PC     Object              I  Line    Source cli.src
                           A   198    ;   45				cli_process_command(buffer);
                           A   199    .line 45
00000050 48E1 BEFB         A   200    	LEA	R1,-261(R14)
00000054 D028              A   201    	CALL	_cli_process_command
                           A   202    ;   46	
                           A   203    ;   47				buffer_pos = 0;
                           A   204    .line 47
00000056 ADCE BFFB         A   205    	CLR	-5(R14)
                           A   206    ;   48				uart_printf("%s", cli_prompt);
                           A   207    .line 48
0000005A 098F 0000         A   208    	PUSH.W	#_cli_prompt
0000005E 098F 0006         A   209    	PUSH.W	#L__5
00000062 F1 FFFFCD         A   210    	CALL	_uart_printf
00000066 8F04              A   211    	ADD	R15,#4
                           A   212    ;   49			}
                           A   213    ;   50			//there is more to come...
                           A   214    ;   51			else {
                           A   215    .line 51
00000068 C008              A   216    	JP	_2_L_8
0000006A                   A   217    _2_L_5:
                           A   218    ;   52				buffer[buffer_pos++] = c;
                           A   219    .line 52
0000006A 5FB0              A   220    	LD	R0,-5(R14)
0000006C 48E1 BEFB         A   221    	LEA	R1,-261(R14)
00000070 A010              A   222    	ADD	R0,R1
00000072 6BF1              A   223    	LD.SB	R1,-1(R14)
00000074 0E10              A   224    	LD.B	(R0),R1
00000076 ADEE BFFB         A   225    	INC	-5(R14)
                           A   226    ;   53			}
0000007A                   A   227    _2_L_8:
                           A   228    .line 53
                           A   229    ;   54	
                           A   230    ;   55			//is the command too long?
                           A   231    ;   56			if(buffer_pos >= CLI_BUFFER_SIZE) {
                           A   232    .line 56
0000007A 4500 0100         A   233    	LD	R0,#256
0000007E 7D0E FFFB         A   234    	CP	-5(R14),R0
00000082 E1 D7             A   235    	JP	LT,_2_L_9
                           A   236    ;   57				uart_printf("\n--Error--, command is too long. Command ignored.\n");
                           A   237    .line 57
00000084 098F 0009         A   238    	PUSH.W	#L__7
00000088 F1 FFFFBA         A   239    	CALL	_uart_printf
0000008C 8F02              A   240    	ADD	R15,#2
                           A   241    ;   58				buffer_pos = 0;
                           A   242    .line 58
0000008E ADCE BFFB         A   243    	CLR	-5(R14)
                           A   244    ;   59	
                           A   245    ;   60				uart_printf("%s", cli_prompt);
                           A   246    .line 60
00000092 098F 0000         A   247    	PUSH.W	#_cli_prompt
00000096 098F 003C         A   248    	PUSH.W	#L__8
0000009A F1 FFFFB1         A   249    	CALL	_uart_printf
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   6


PC     Object              I  Line    Source cli.src
0000009E 8F04              A   250    	ADD	R15,#4
                           A   251    ;   61			}
                           A   252    ;   62		}
                           A   253    .line 62
000000A0 CFC8              A   254    	JP	_2_L_9
                           A   255    ;   63	}
                           A   256    .line 63
000000A2 0001              A   257    	UNLINK	
000000A4 FFFC              A   258    	RET	
                           A   259    
                           A   260    
                           A   261    ;**************************** _cli_loop ***************************
                           A   262    ;Name                         Addr/Register   Size   Type
                           A   263    ;_cli_process_command                STATIC  -----   function
                           A   264    ;_uart_getchar                       IMPORT  -----   function
                           A   265    ;_cli_prompt                         STATIC    256   variable
                           A   266    ;_uart_printf                        IMPORT  -----   function
                           A   267    ;buffer                             R14-261    256   variable
                           A   268    ;buffer_pos                           R14-5      4   variable
                           A   269    ;c                                    R14-1      1   variable
                           A   270    
                           A   271    
                           A   272    ; Aggregate Stack Size: -261 (words)
                           A   273    
                           A   274    
                           A   275    .endfunc "cli_loop",63,"_cli_loop"
                           A   276    	SEGMENT ROM_TEXT
0000003F                   A   277    L__13:
0000003F 696E666F          A   278    	DB	"info"
00000043 00                A   279    	DB	0
00000044                   A   280    L__15:
00000044 3F                A   281    	DB	"?"
00000045 00                A   282    	DB	0
00000046                   A   283    L__17:
00000046 2D2D436F          A   284    	DB	"--Command:%s, not found. Enter \"?\" to see a list of available commands."
0000004A 6D6D616E 
0000004E 643A2573 
00000052 2C206E6F 
00000056 7420666F 
0000005A 756E642E 
0000005E 20456E74 
00000062 65722022 
00000066 3F222074 
0000006A 6F207365 
0000006E 65206120 
00000072 6C697374 
00000076 206F6620 
0000007A 61766169 
0000007E 6C61626C 
00000082 6520636F 
00000086 6D6D616E 64732E 
0000008D 0A00              A   285    	DB	10,0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   7


PC     Object              I  Line    Source cli.src
0000008F                   A   286    L__18:
0000008F 6563686F          A   287    	DB	"echo"
00000093 00                A   288    	DB	0
00000094                   A   289    L__20:
00000094 64697370 6C6179   A   290    	DB	"display"
0000009B 00                A   291    	DB	0
0000009C                   A   292    L__22:
0000009C 736574            A   293    	DB	"set"
0000009F 00                A   294    	DB	0
000000A0                   A   295    L__24:
000000A0 686578            A   296    	DB	"hex"
000000A3 00                A   297    	DB	0
000000A4                   A   298    L__26:
000000A4 736574            A   299    	DB	"set"
000000A7 00                A   300    	DB	0
000000A8                   A   301    L__28:
000000A8 73776974 6368     A   302    	DB	"switch"
000000AE 00                A   303    	DB	0
000000AF                   A   304    L__30:
000000AF 706F7274          A   305    	DB	"port"
000000B3 00                A   306    	DB	0
000000B4                   A   307    L__32:
000000B4 74696D65 72       A   308    	DB	"timer"
000000B9 00                A   309    	DB	0
000000BA                   A   310    L__34:
000000BA 75617274 30       A   311    	DB	"uart0"
000000BF 00                A   312    	DB	0
000000C0                   A   313    L__36:
000000C0 2D2D436F          A   314    	DB	"--Command:%s, not found. Enter \"?\" to see a list of available commands."
000000C4 6D6D616E 
000000C8 643A2573 
000000CC 2C206E6F 
000000D0 7420666F 
000000D4 756E642E 
000000D8 20456E74 
000000DC 65722022 
000000E0 3F222074 
000000E4 6F207365 
000000E8 65206120 
000000EC 6C697374 
000000F0 206F6620 
000000F4 61766169 
000000F8 6C61626C 
000000FC 6520636F 
00000100 6D6D616E 64732E 
00000107 0A00              A   315    	DB	10,0
                           A   316    	SEGMENT CODE
                           A   317    ;   64	
                           A   318    ;   65	static void cli_process_command(char *command)
                           A   319    ;   66	{
000000A6                   A   320    _cli_process_command:
                           A   321    .define "_cli_process_command"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   8


PC     Object              I  Line    Source cli.src
                           A   322    .value _cli_process_command
                           A   323    .class 3
                           A   324    .type 65
                           A   325    .type 0
                           A   326    .endef
                           A   327    .begfunc "cli_process_command",66,"_cli_process_command"
000000A6 0804              A   328    	LINK	#4
                           A   329    .line 66
000000A8 57E1              A   330    	LD.W	-2(R14),R1
                           A   331    .define "command"
                           A   332    .class 9
                           A   333    .value -2
                           A   334    .type 140
                           A   335    .type 0
                           A   336    .endef
                           A   337    .define "token_end"
                           A   338    .class 1
                           A   339    .value -4
                           A   340    .type 140
                           A   341    .type 0
                           A   342    .endef
                           A   343    ;   67		char *token_end;
                           A   344    ;   68	
                           A   345    ;   69		token_end = command;
                           A   346    .line 69
000000AA 6FE0              A   347    	LD.SW	R0,-2(R14)
000000AC 57C0              A   348    	LD.W	-4(R14),R0
                           A   349    ;   70	
                           A   350    ;   71		while(isgraph(*token_end)) {
000000AE                   A   351    _3_L_13:
                           A   352    .line 71
000000AE 6FC0              A   353    	LD.SW	R0,-4(R14)
000000B0 1801              A   354    	LD.UB	R1,(R0)
000000B2 F1 FFFFA5         A   355    	CALL	_isgraph
000000B6 9000              A   356    	CP	R0,#0
000000B8 E6 03             A   357    	JP	EQ,_3_L_40
                           A   358    ;   72			token_end++;
                           A   359    .line 72
000000BA ADEE 7FFC         A   360    	INC.W	-4(R14)
                           A   361    ;   73		}
                           A   362    .line 73
000000BE CFF7              A   363    	JP	_3_L_13
000000C0                   A   364    _3_L_40:
                           A   365    ;   74	
                           A   366    ;   75		if(token_end != command) {
                           A   367    .line 75
000000C0 6FE0              A   368    	LD.SW	R0,-2(R14)
000000C2 7D0E DFFC         A   369    	CP.W	-4(R14),R0
000000C6 E6 64             A   370    	JP	EQ,_3_L_41
                           A   371    ;   76			if(*token_end == '\0') {
                           A   372    .line 76
000000C8 6FC0              A   373    	LD.SW	R0,-4(R14)
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:   9


PC     Object              I  Line    Source cli.src
000000CA AC10              A   374    	CPZ.B	(R0)
000000CC EE 16             A   375    	JP	NE,_3_L_38
                           A   376    ;   77				if(strcmp(command, "info") == 0) {
                           A   377    .line 77
000000CE 6FE1              A   378    	LD.SW	R1,-2(R14)
000000D0 4502 003F         A   379    	LD	R2,#L__13
000000D4 F1 FFFF94         A   380    	CALL	_strcmp
000000D8 9000              A   381    	CP	R0,#0
000000DA E6 5A             A   382    	JP	EQ,_3_L_41
                           A   383    ;   78				
                           A   384    ;   79				}
                           A   385    ;   80				else if(strcmp(command, "?") == 0) {
                           A   386    .line 80
000000DC 6FE1              A   387    	LD.SW	R1,-2(R14)
000000DE 4502 0044         A   388    	LD	R2,#L__15
000000E2 F1 FFFF8D         A   389    	CALL	_strcmp
000000E6 9000              A   390    	CP	R0,#0
000000E8 EE 02             A   391    	JP	NE,_3_L_16
                           A   392    ;   81					cli_question();
                           A   393    .line 81
000000EA D078              A   394    	CALL	_cli_question
                           A   395    ;   82				}
                           A   396    ;   83				else {
                           A   397    .line 83
000000EC C051              A   398    	JP	_3_L_41
000000EE                   A   399    _3_L_16:
                           A   400    ;   84					uart_printf("--Command:%s, not found. Enter \"?\" to see a list of availabl
                           A   401    .line 84
000000EE 098F 0046         A   402    	PUSH.W	#L__17
000000F2 F1 FFFF85         A   403    	CALL	_uart_printf
000000F6 8F02              A   404    	ADD	R15,#2
                           A   405    ;   85				}
                           A   406    ;   86			}
                           A   407    ;   87			else {
                           A   408    .line 87
000000F8 C04B              A   409    	JP	_3_L_41
000000FA                   A   410    _3_L_38:
                           A   411    ;   88				*token_end = '\0';
                           A   412    .line 88
000000FA 6FC0              A   413    	LD.SW	R0,-4(R14)
000000FC AC00              A   414    	CLR.B	(R0)
                           A   415    ;   89	
                           A   416    ;   90				if(strcmp(command, "echo") == 0) {
                           A   417    .line 90
000000FE 6FE1              A   418    	LD.SW	R1,-2(R14)
00000100 4502 008F         A   419    	LD	R2,#L__18
00000104 F1 FFFF7C         A   420    	CALL	_strcmp
00000108 9000              A   421    	CP	R0,#0
0000010A E6 42             A   422    	JP	EQ,_3_L_41
                           A   423    ;   91					
                           A   424    ;   92				}
                           A   425    ;   93				else if(strcmp(command, "display") == 0) {
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  10


PC     Object              I  Line    Source cli.src
                           A   426    .line 93
0000010C 6FE1              A   427    	LD.SW	R1,-2(R14)
0000010E 4502 0094         A   428    	LD	R2,#L__20
00000112 F1 FFFF75         A   429    	CALL	_strcmp
00000116 9000              A   430    	CP	R0,#0
00000118 EE 05             A   431    	JP	NE,_3_L_34
                           A   432    ;   94					cli_display(++token_end);
                           A   433    .line 94
0000011A ADEE 7FFC         A   434    	INC.W	-4(R14)
0000011E 6FC1              A   435    	LD.SW	R1,-4(R14)
00000120 D039              A   436    	CALL	_cli_display
                           A   437    ;   95				}
                           A   438    ;   96				else if(strcmp(command, "set") == 0) {
                           A   439    .line 96
00000122 C036              A   440    	JP	_3_L_41
00000124                   A   441    _3_L_34:
00000124 6FE1              A   442    	LD.SW	R1,-2(R14)
00000126 4502 009C         A   443    	LD	R2,#L__22
0000012A F1 FFFF69         A   444    	CALL	_strcmp
0000012E 9000              A   445    	CP	R0,#0
00000130 E6 2F             A   446    	JP	EQ,_3_L_41
                           A   447    ;   97					
                           A   448    ;   98				}
                           A   449    ;   99				else if(strcmp(command, "hex") == 0) {
                           A   450    .line 99
00000132 6FE1              A   451    	LD.SW	R1,-2(R14)
00000134 4502 00A0         A   452    	LD	R2,#L__24
00000138 F1 FFFF62         A   453    	CALL	_strcmp
0000013C 9000              A   454    	CP	R0,#0
0000013E E6 28             A   455    	JP	EQ,_3_L_41
                           A   456    ;  100					
                           A   457    ;  101				}
                           A   458    ;  102				else if(strcmp(command, "set") == 0) {
                           A   459    .line 102
00000140 6FE1              A   460    	LD.SW	R1,-2(R14)
00000142 4502 00A4         A   461    	LD	R2,#L__26
00000146 F1 FFFF5B         A   462    	CALL	_strcmp
0000014A 9000              A   463    	CP	R0,#0
0000014C E6 21             A   464    	JP	EQ,_3_L_41
                           A   465    ;  103					
                           A   466    ;  104				}
                           A   467    ;  105				else if(strcmp(command, "switch") == 0) {
                           A   468    .line 105
0000014E 6FE1              A   469    	LD.SW	R1,-2(R14)
00000150 4502 00A8         A   470    	LD	R2,#L__28
00000154 F1 FFFF54         A   471    	CALL	_strcmp
00000158 9000              A   472    	CP	R0,#0
0000015A E6 1A             A   473    	JP	EQ,_3_L_41
                           A   474    ;  106					
                           A   475    ;  107				}
                           A   476    ;  108				else if(strcmp(command, "port") == 0) {
                           A   477    .line 108
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  11


PC     Object              I  Line    Source cli.src
0000015C 6FE1              A   478    	LD.SW	R1,-2(R14)
0000015E 4502 00AF         A   479    	LD	R2,#L__30
00000162 F1 FFFF4D         A   480    	CALL	_strcmp
00000166 9000              A   481    	CP	R0,#0
00000168 E6 13             A   482    	JP	EQ,_3_L_41
                           A   483    ;  109					
                           A   484    ;  110				}
                           A   485    ;  111				else if(strcmp(command, "timer") == 0) {
                           A   486    .line 111
0000016A 6FE1              A   487    	LD.SW	R1,-2(R14)
0000016C 4502 00B4         A   488    	LD	R2,#L__32
00000170 F1 FFFF46         A   489    	CALL	_strcmp
00000174 9000              A   490    	CP	R0,#0
00000176 E6 0C             A   491    	JP	EQ,_3_L_41
                           A   492    ;  112					
                           A   493    ;  113				}
                           A   494    ;  114				else if(strcmp(command, "uart0") == 0) {
                           A   495    .line 114
00000178 6FE1              A   496    	LD.SW	R1,-2(R14)
0000017A 4502 00BA         A   497    	LD	R2,#L__34
0000017E F1 FFFF3F         A   498    	CALL	_strcmp
00000182 9000              A   499    	CP	R0,#0
00000184 E6 05             A   500    	JP	EQ,_3_L_41
                           A   501    ;  115					
                           A   502    ;  116				}
                           A   503    ;  117				else {
                           A   504    .line 117
                           A   505    ;  118					uart_printf("--Command:%s, not found. Enter \"?\" to see a list of availabl
                           A   506    .line 118
00000186 098F 00C0         A   507    	PUSH.W	#L__36
0000018A F1 FFFF39         A   508    	CALL	_uart_printf
0000018E 8F02              A   509    	ADD	R15,#2
                           A   510    ;  119				}
                           A   511    ;  120			}
                           A   512    ;  121		}
                           A   513    ;  122	}
00000190                   A   514    _3_L_41:
                           A   515    .line 122
00000190 0001              A   516    	UNLINK	
00000192 FFFC              A   517    	RET	
                           A   518    
                           A   519    
                           A   520    ;**************************** _cli_process_command ***************************
                           A   521    ;Name                         Addr/Register   Size   Type
                           A   522    ;_cli_display                        STATIC  -----   function
                           A   523    ;_uart_printf                        IMPORT  -----   function
                           A   524    ;_cli_question                       STATIC  -----   function
                           A   525    ;_strcmp                             IMPORT  -----   function
                           A   526    ;_isgraph                            IMPORT  -----   function
                           A   527    ;token_end                            R14-4      2   variable
                           A   528    ;command                              R14-2      2   parameter
                           A   529    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  12


PC     Object              I  Line    Source cli.src
                           A   530    
                           A   531    ; Aggregate Stack Size: -4 (words)
                           A   532    
                           A   533    
                           A   534    .endfunc "cli_process_command",122,"_cli_process_command"
                           A   535    	SEGMENT ROM_TEXT
00000109                   A   536    L__39:
00000109 496E636F          A   537    	DB	"Incorrect format, display [\"text\"]"
0000010D 72726563 
00000111 7420666F 
00000115 726D6174 
00000119 2C206469 
0000011D 73706C61 
00000121 79205B22 
00000125 74657874 225D 
0000012B 0A00              A   538    	DB	10,0
0000012D                   A   539    L__41:
0000012D 496E636F          A   540    	DB	"Incorrect format, display [\"text\"]"
00000131 72726563 
00000135 7420666F 
00000139 726D6174 
0000013D 2C206469 
00000141 73706C61 
00000145 79205B22 
00000149 74657874 225D 
0000014F 0A00              A   541    	DB	10,0
                           A   542    	SEGMENT CODE
                           A   543    ;  123	
                           A   544    ;  124	static void cli_display(char *text)
                           A   545    ;  125	{
00000194                   A   546    _cli_display:
                           A   547    .define "_cli_display"
                           A   548    .value _cli_display
                           A   549    .class 3
                           A   550    .type 65
                           A   551    .type 0
                           A   552    .endef
                           A   553    .begfunc "cli_display",125,"_cli_display"
00000194 0804              A   554    	LINK	#4
                           A   555    .line 125
00000196 57E1              A   556    	LD.W	-2(R14),R1
                           A   557    .define "text"
                           A   558    .class 9
                           A   559    .value -2
                           A   560    .type 140
                           A   561    .type 0
                           A   562    .endef
                           A   563    .define "end"
                           A   564    .class 1
                           A   565    .value -4
                           A   566    .type 140
                           A   567    .type 0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  13


PC     Object              I  Line    Source cli.src
                           A   568    .endef
                           A   569    ;  126		char *end;
                           A   570    ;  127	
                           A   571    ;  128		size_t token_len;
                           A   572    ;  129	
                           A   573    ;  130		if(*text != '"') {
                           A   574    .line 130
00000198 6FE0              A   575    	LD.SW	R0,-2(R14)
0000019A 1800              A   576    	LD.UB	R0,(R0)
0000019C 9022              A   577    	CP	R0,#34
0000019E E6 06             A   578    	JP	EQ,_4_L_44
                           A   579    ;  131			uart_printf("Incorrect format, display [\"text\"]\n");
                           A   580    .line 131
000001A0 098F 0109         A   581    	PUSH.W	#L__39
000001A4 F1 FFFF2C         A   582    	CALL	_uart_printf
000001A8 8F02              A   583    	ADD	R15,#2
                           A   584    ;  132			return;
                           A   585    .line 132
000001AA C016              A   586    	JP	_4_L_47
                           A   587    ;  133		}
000001AC                   A   588    _4_L_44:
                           A   589    .line 133
                           A   590    ;  134		text++;
                           A   591    .line 134
000001AC ADEE 7FFE         A   592    	INC.W	-2(R14)
                           A   593    ;  135	
                           A   594    ;  136		end = strchr(text, '"');
                           A   595    .line 136
000001B0 6FE1              A   596    	LD.SW	R1,-2(R14)
000001B2 3222              A   597    	LD	R2,#34
000001B4 F1 FFFF24         A   598    	CALL	_strchr
000001B8 57C0              A   599    	LD.W	-4(R14),R0
                           A   600    ;  137		if(*end != '"') {
                           A   601    .line 137
000001BA 6FC0              A   602    	LD.SW	R0,-4(R14)
000001BC 1800              A   603    	LD.UB	R0,(R0)
000001BE 9022              A   604    	CP	R0,#34
000001C0 E6 06             A   605    	JP	EQ,_4_L_46
                           A   606    ;  138			uart_printf("Incorrect format, display [\"text\"]\n");
                           A   607    .line 138
000001C2 098F 012D         A   608    	PUSH.W	#L__41
000001C6 F1 FFFF1B         A   609    	CALL	_uart_printf
000001CA 8F02              A   610    	ADD	R15,#2
                           A   611    ;  139			return;
                           A   612    .line 139
000001CC C005              A   613    	JP	_4_L_47
                           A   614    ;  140		}
000001CE                   A   615    _4_L_46:
                           A   616    .line 140
                           A   617    ;  141		*end = '\0';
                           A   618    .line 141
000001CE 6FC0              A   619    	LD.SW	R0,-4(R14)
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  14


PC     Object              I  Line    Source cli.src
000001D0 AC00              A   620    	CLR.B	(R0)
                           A   621    ;  142	
                           A   622    ;  143		led_display_text(text);
                           A   623    .line 143
000001D2 6FE1              A   624    	LD.SW	R1,-2(R14)
000001D4 F1 FFFF14         A   625    	CALL	_led_display_text
                           A   626    ;  144	}
000001D8                   A   627    _4_L_47:
                           A   628    .line 144
000001D8 0001              A   629    	UNLINK	
000001DA FFFC              A   630    	RET	
                           A   631    
                           A   632    
                           A   633    ;**************************** _cli_display ***************************
                           A   634    ;Name                         Addr/Register   Size   Type
                           A   635    ;_led_display_text                   IMPORT  -----   function
                           A   636    ;_strchr                             IMPORT  -----   function
                           A   637    ;_uart_printf                        IMPORT  -----   function
                           A   638    ;end                                  R14-4      2   variable
                           A   639    ;text                                 R14-2      2   parameter
                           A   640    
                           A   641    
                           A   642    ; Aggregate Stack Size: -4 (words)
                           A   643    
                           A   644    
                           A   645    .endfunc "cli_display",144,"_cli_display"
                           A   646    	SEGMENT ROM_TEXT
00000151                   A   647    L__43:
00000151 0A                A   648    	DB	10
00000152 41766169          A   649    	DB	"Available Commands:"
00000156 6C61626C 
0000015A 6520436F 
0000015E 6D6D616E 64733A 
00000165 0A0A00            A   650    	DB	10,10,0
00000168                   A   651    L__44:
00000168 6563686F          A   652    	DB	"echo [\"text\"]"
0000016C 205B2274 
00000170 65787422 5D 
00000175 0A00              A   653    	DB	10,0
00000177                   A   654    L__45:
00000177 202D4563          A   655    	DB	" -Echos text back to the serial port."
0000017B 686F7320 
0000017F 74657874 
00000183 20626163 
00000187 6B20746F 
0000018B 20746865 
0000018F 20736572 
00000193 69616C20 
00000197 706F7274 2E 
0000019C 0A00              A   656    	DB	10,0
0000019E                   A   657    L__46:
0000019E 64697370          A   658    	DB	"display [\"text\"]"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  15


PC     Object              I  Line    Source cli.src
000001A2 6C617920 
000001A6 5B227465 
000001AA 7874225D 
000001AE 0A00              A   659    	DB	10,0
000001B0                   A   660    L__47:
000001B0 202D4469          A   661    	DB	" -Display text on the LEDs."
000001B4 73706C61 
000001B8 79207465 
000001BC 7874206F 
000001C0 6E207468 
000001C4 65204C45 44732E 
000001CB 0A00              A   662    	DB	10,0
000001CD                   A   663    L__48:
000001CD 73657420          A   664    	DB	"set prompt [\"text\"]"
000001D1 70726F6D 
000001D5 7074205B 
000001D9 22746578 74225D 
000001E0 0A00              A   665    	DB	10,0
000001E2                   A   666    L__49:
000001E2 202D5365          A   667    	DB	" -Set the CLI prompt to text."
000001E6 74207468 
000001EA 6520434C 
000001EE 49207072 
000001F2 6F6D7074 
000001F6 20746F20 
000001FA 74657874 2E 
000001FF 0A00              A   668    	DB	10,0
00000201                   A   669    L__50:
00000201 68657820          A   670    	DB	"hex [decimal number]"
00000205 5B646563 
00000209 696D616C 
0000020D 206E756D 
00000211 6265725D 
00000215 0A00              A   671    	DB	10,0
00000217                   A   672    L__51:
00000217 202D4469          A   673    	DB	" -Display a decimal number in hex on the LEDs."
0000021B 73706C61 
0000021F 79206120 
00000223 64656369 
00000227 6D616C20 
0000022B 6E756D62 
0000022F 65722069 
00000233 6E206865 
00000237 78206F6E 
0000023B 20746865 
0000023F 204C4544 732E 
00000245 0A00              A   674    	DB	10,0
00000247                   A   675    L__52:
00000247 73776974          A   676    	DB	"switch [0-2] [\"text\"]"
0000024B 6368205B 
0000024F 302D325D 
00000253 205B2274 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  16


PC     Object              I  Line    Source cli.src
00000257 65787422 5D 
0000025C 0A00              A   677    	DB	10,0
0000025E                   A   678    L__53:
0000025E 202D4173          A   679    	DB	" -Assigns the text macro to a button."
00000262 7369676E 
00000266 73207468 
0000026A 65207465 
0000026E 7874206D 
00000272 6163726F 
00000276 20746F20 
0000027A 61206275 
0000027E 74746F6E 2E 
00000283 0A00              A   680    	DB	10,0
00000285                   A   681    L__54:
00000285 706F7274          A   682    	DB	"port [A-K]"
00000289 205B412D 4B5D 
0000028F 0A00              A   683    	DB	10,0
00000291                   A   684    L__55:
00000291 202D4469          A   685    	DB	" -Display the current state of the port."
00000295 73706C61 
00000299 79207468 
0000029D 65206375 
000002A1 7272656E 
000002A5 74207374 
000002A9 61746520 
000002AD 6F662074 
000002B1 68652070 
000002B5 6F72742E 
000002B9 0A00              A   686    	DB	10,0
000002BB                   A   687    L__56:
000002BB 74696D65          A   688    	DB	"timer [0-2]"
000002BF 72205B30 2D325D 
000002C6 0A00              A   689    	DB	10,0
000002C8                   A   690    L__57:
000002C8 202D4469          A   691    	DB	" -Display the current state of the timer."
000002CC 73706C61 
000002D0 79207468 
000002D4 65206375 
000002D8 7272656E 
000002DC 74207374 
000002E0 61746520 
000002E4 6F662074 
000002E8 68652074 
000002EC 696D6572 2E 
000002F1 0A00              A   692    	DB	10,0
000002F3                   A   693    L__58:
000002F3 75617274          A   694    	DB	"uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
000002F7 30205B73 
000002FB 70656564 
000002FF 205B6261 
00000303 75647261 
00000307 74655D5D 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  17


PC     Object              I  Line    Source cli.src
0000030B 205B7061 
0000030F 72697479 
00000313 205B6576 
00000317 656E7C6F 
0000031B 64647C6E 
0000031F 6F6E655D 
00000323 5D205B62 
00000327 69747320 
0000032B 5B377C38 5D5D 
00000331 0A00              A   695    	DB	10,0
00000333                   A   696    L__59:
00000333 202D5365          A   697    	DB	" -Set the uart0 settings."
00000337 74207468 
0000033B 65207561 
0000033F 72743020 
00000343 73657474 
00000347 696E6773 2E 
0000034C 0A00              A   698    	DB	10,0
0000034E                   A   699    L__60:
0000034E 696E666F          A   700    	DB	"info"
00000352 0A00              A   701    	DB	10,0
00000354                   A   702    L__61:
00000354 202D4469          A   703    	DB	" -Displays various system information."
00000358 73706C61 
0000035C 79732076 
00000360 6172696F 
00000364 75732073 
00000368 79737465 
0000036C 6D20696E 
00000370 666F726D 
00000374 6174696F 6E2E 
0000037A 0A00              A   704    	DB	10,0
0000037C                   A   705    L__62:
0000037C 3F                A   706    	DB	"?"
0000037D 0A00              A   707    	DB	10,0
0000037F                   A   708    L__63:
0000037F 202D4469          A   709    	DB	" -Displays a menu of CLI commands."
00000383 73706C61 
00000387 79732061 
0000038B 206D656E 
0000038F 75206F66 
00000393 20434C49 
00000397 20636F6D 
0000039B 6D616E64 732E 
000003A1 0A00              A   710    	DB	10,0
                           A   711    	SEGMENT CODE
                           A   712    ;  145	
                           A   713    ;  146	static void cli_question(void)
                           A   714    ;  147	{
000001DC                   A   715    _cli_question:
                           A   716    .define "_cli_question"
                           A   717    .value _cli_question
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  18


PC     Object              I  Line    Source cli.src
                           A   718    .class 3
                           A   719    .type 65
                           A   720    .type 0
                           A   721    .endef
                           A   722    .begfunc "cli_question",147,"_cli_question"
000001DC 0800              A   723    	LINK	#0
                           A   724    ;  148		uart_printf("\nAvailable Commands:\n\n");
                           A   725    .line 148
000001DE 098F 0151         A   726    	PUSH.W	#L__43
000001E2 F1 FFFF0D         A   727    	CALL	_uart_printf
000001E6 8F02              A   728    	ADD	R15,#2
                           A   729    ;  149	
                           A   730    ;  150		uart_printf("echo [\"text\"]\n");
                           A   731    .line 150
000001E8 098F 0168         A   732    	PUSH.W	#L__44
000001EC F1 FFFF08         A   733    	CALL	_uart_printf
000001F0 8F02              A   734    	ADD	R15,#2
                           A   735    ;  151		uart_printf(" -Echos text back to the serial port.\n");
                           A   736    .line 151
000001F2 098F 0177         A   737    	PUSH.W	#L__45
000001F6 F1 FFFF03         A   738    	CALL	_uart_printf
000001FA 8F02              A   739    	ADD	R15,#2
                           A   740    ;  152	
                           A   741    ;  153		uart_printf("display [\"text\"]\n");
                           A   742    .line 153
000001FC 098F 019E         A   743    	PUSH.W	#L__46
00000200 F1 FFFEFE         A   744    	CALL	_uart_printf
00000204 8F02              A   745    	ADD	R15,#2
                           A   746    ;  154		uart_printf(" -Display text on the LEDs.\n");
                           A   747    .line 154
00000206 098F 01B0         A   748    	PUSH.W	#L__47
0000020A F1 FFFEF9         A   749    	CALL	_uart_printf
0000020E 8F02              A   750    	ADD	R15,#2
                           A   751    ;  155	
                           A   752    ;  156		uart_printf("set prompt [\"text\"]\n");
                           A   753    .line 156
00000210 098F 01CD         A   754    	PUSH.W	#L__48
00000214 F1 FFFEF4         A   755    	CALL	_uart_printf
00000218 8F02              A   756    	ADD	R15,#2
                           A   757    ;  157		uart_printf(" -Set the CLI prompt to text.\n");
                           A   758    .line 157
0000021A 098F 01E2         A   759    	PUSH.W	#L__49
0000021E F1 FFFEEF         A   760    	CALL	_uart_printf
00000222 8F02              A   761    	ADD	R15,#2
                           A   762    ;  158	
                           A   763    ;  159		uart_printf("hex [decimal number]\n");
                           A   764    .line 159
00000224 098F 0201         A   765    	PUSH.W	#L__50
00000228 F1 FFFEEA         A   766    	CALL	_uart_printf
0000022C 8F02              A   767    	ADD	R15,#2
                           A   768    ;  160		uart_printf(" -Display a decimal number in hex on the LEDs.\n");
                           A   769    .line 160
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  19


PC     Object              I  Line    Source cli.src
0000022E 098F 0217         A   770    	PUSH.W	#L__51
00000232 F1 FFFEE5         A   771    	CALL	_uart_printf
00000236 8F02              A   772    	ADD	R15,#2
                           A   773    ;  161	
                           A   774    ;  162		uart_printf("switch [0-2] [\"text\"]\n");
                           A   775    .line 162
00000238 098F 0247         A   776    	PUSH.W	#L__52
0000023C F1 FFFEE0         A   777    	CALL	_uart_printf
00000240 8F02              A   778    	ADD	R15,#2
                           A   779    ;  163		uart_printf(" -Assigns the text macro to a button.\n");
                           A   780    .line 163
00000242 098F 025E         A   781    	PUSH.W	#L__53
00000246 F1 FFFEDB         A   782    	CALL	_uart_printf
0000024A 8F02              A   783    	ADD	R15,#2
                           A   784    ;  164	
                           A   785    ;  165		uart_printf("port [A-K]\n");
                           A   786    .line 165
0000024C 098F 0285         A   787    	PUSH.W	#L__54
00000250 F1 FFFED6         A   788    	CALL	_uart_printf
00000254 8F02              A   789    	ADD	R15,#2
                           A   790    ;  166		uart_printf(" -Display the current state of the port.\n");
                           A   791    .line 166
00000256 098F 0291         A   792    	PUSH.W	#L__55
0000025A F1 FFFED1         A   793    	CALL	_uart_printf
0000025E 8F02              A   794    	ADD	R15,#2
                           A   795    ;  167	
                           A   796    ;  168		uart_printf("timer [0-2]\n");
                           A   797    .line 168
00000260 098F 02BB         A   798    	PUSH.W	#L__56
00000264 F1 FFFECC         A   799    	CALL	_uart_printf
00000268 8F02              A   800    	ADD	R15,#2
                           A   801    ;  169		uart_printf(" -Display the current state of the timer.\n");
                           A   802    .line 169
0000026A 098F 02C8         A   803    	PUSH.W	#L__57
0000026E F1 FFFEC7         A   804    	CALL	_uart_printf
00000272 8F02              A   805    	ADD	R15,#2
                           A   806    ;  170	
                           A   807    ;  171		uart_printf("uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]\n");
                           A   808    .line 171
00000274 098F 02F3         A   809    	PUSH.W	#L__58
00000278 F1 FFFEC2         A   810    	CALL	_uart_printf
0000027C 8F02              A   811    	ADD	R15,#2
                           A   812    ;  172		uart_printf(" -Set the uart0 settings.\n");
                           A   813    .line 172
0000027E 098F 0333         A   814    	PUSH.W	#L__59
00000282 F1 FFFEBD         A   815    	CALL	_uart_printf
00000286 8F02              A   816    	ADD	R15,#2
                           A   817    ;  173	
                           A   818    ;  174		uart_printf("info\n");
                           A   819    .line 174
00000288 098F 034E         A   820    	PUSH.W	#L__60
0000028C F1 FFFEB8         A   821    	CALL	_uart_printf
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               27-Feb-11     00:45:40     page:  20


PC     Object              I  Line    Source cli.src
00000290 8F02              A   822    	ADD	R15,#2
                           A   823    ;  175		uart_printf(" -Displays various system information.\n");
                           A   824    .line 175
00000292 098F 0354         A   825    	PUSH.W	#L__61
00000296 F1 FFFEB3         A   826    	CALL	_uart_printf
0000029A 8F02              A   827    	ADD	R15,#2
                           A   828    ;  176	
                           A   829    ;  177		uart_printf("?\n");
                           A   830    .line 177
0000029C 098F 037C         A   831    	PUSH.W	#L__62
000002A0 F1 FFFEAE         A   832    	CALL	_uart_printf
000002A4 8F02              A   833    	ADD	R15,#2
                           A   834    ;  178		uart_printf(" -Displays a menu of CLI commands.\n");
                           A   835    .line 178
000002A6 098F 037F         A   836    	PUSH.W	#L__63
000002AA F1 FFFEA9         A   837    	CALL	_uart_printf
000002AE 8F02              A   838    	ADD	R15,#2
                           A   839    ;  179	}
                           A   840    .line 179
000002B0 0001              A   841    	UNLINK	
000002B2 FFFC              A   842    	RET	
                           A   843    
                           A   844    
                           A   845    ;**************************** _cli_question ***************************
                           A   846    ;Name                         Addr/Register   Size   Type
                           A   847    ;_uart_printf                        IMPORT  -----   function
                           A   848    
                           A   849    
                           A   850    ; Aggregate Stack Size: 0 (words)
                           A   851    
                           A   852    
                           A   853    .endfunc "cli_question",179,"_cli_question"
                           A   854    	XREF _isgraph:EROM
                           A   855    	XREF _strchr:EROM
                           A   856    	XREF _strcmp:EROM
                           A   857    	XREF _strcpy:EROM
                           A   858    	XREF _uart_printf:EROM
                           A   859    	XREF _uart_getchar:EROM
                           A   860    	XREF _init_uart:EROM
                           A   861    	XREF _led_display_text:EROM
                           A   862    	XREF _init_leds:EROM
                           A   863    	XDEF _cli_loop
                           A   864    	XDEF _init_cli
                           A   865    	END


Errors: 0
Warnings: 0
Lines Assembled: 866
