ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   1


PC     Object              I  Line    Source 
                           A     1    ; ZiLOG ZNEO ANSI C Compiler Release 1.11
                           A     2    ; -nolocalcse -optsize -model=S -nomodsect -noregvar
                           A     3    ; -reduceopt -debug -peephole -const=ROM -alias -fastcall
                           A     4    	FILE	"..\CLI.C"
                           A     5    .debug "C"
                           A     6    	SEGMENT NEAR_BSS
00000000                   A     7    _cli_prompt:
00000000                   A     8    	DS	256
                           A     9    .define "cli_prompt"
                           A    10    .alias "_cli_prompt"
                           A    11    .class 147
                           A    12    .value _cli_prompt
                           A    13    .dim 256
                           A    14    .type 108
                           A    15    .type 0
                           A    16    .endef
                           A    17    	SEGMENT CODE
                           A    18    .begrec "NONAME0",8
                           A    19    .define "quot"
                           A    20    .value 0
                           A    21    .class 8
                           A    22    .type 5
                           A    23    .type 0
                           A    24    .endef
                           A    25    .define "rem"
                           A    26    .value 4
                           A    27    .class 8
                           A    28    .type 5
                           A    29    .type 0
                           A    30    .endef
                           A    31    .endrec "NONAME0"
                           A    32    .begrec "NONAME1",8
                           A    33    .define "quot"
                           A    34    .value 0
                           A    35    .class 8
                           A    36    .type 5
                           A    37    .type 0
                           A    38    .endef
                           A    39    .define "rem"
                           A    40    .value 4
                           A    41    .class 8
                           A    42    .type 5
                           A    43    .type 0
                           A    44    .endef
                           A    45    .endrec "NONAME1"
                           A    46    	SEGMENT ROM_TEXT
00000000                   A    47    L__0:
00000000 3E20              A    48    	DB	"> "
00000002 00                A    49    	DB	0
                           A    50    ;    1	#include "cli.h"
                           A    51    ;    2	#include "LED.h"
                           A    52    ;    3	#include "uart.h"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   2


PC     Object              I  Line    Source cli.src
                           A    53    ;    4	#include "info.h"
                           A    54    ;    5	#include "macro.h"
                           A    55    ;    6	
                           A    56    ;    7	#include <stdlib.h>
                           A    57    ;    8	#include <string.h>
                           A    58    ;    9	#include <ctype.h>
                           A    59    ;   10	
                           A    60    ;   11	#define CLI_PROMPT      "> "
                           A    61    ;   12	#define CLI_BUFFER_SIZE 256
                           A    62    ;   13	
                           A    63    ;   14	#define ASCII_DEL 0x7F
                           A    64    ;   15	
                           A    65    ;   16	static char cli_prompt[CLI_BUFFER_SIZE];
                           A    66    	SEGMENT CODE
                           A    67    ;   17	
                           A    68    ;   18	static void cli_process_command(const char *command);
                           A    69    ;   19	
                           A    70    ;   20	/*
                           A    71    ;   21		Zero arguement CLI functions.
                           A    72    ;   22	 */
                           A    73    ;   23	static void cli_command_info(void);
                           A    74    ;   24	static void cli_command_question(void);
                           A    75    ;   25	
                           A    76    ;   26	/*
                           A    77    ;   27		Variable arguement CLI functions.
                           A    78    ;   28	
                           A    79    ;   29		Multiple arguements encoded as strings, separated by
                           A    80    ;   30		whitespace and quotes.
                           A    81    ;   31	 */
                           A    82    ;   32	static void cli_command_echo(char *args);
                           A    83    ;   33	static void cli_command_display(char *args);
                           A    84    ;   34	static void cli_command_hex(char *args);
                           A    85    ;   35	static void cli_command_set(char *args);
                           A    86    ;   36	static void cli_command_switch(char *args);
                           A    87    ;   37	static void cli_command_port(char *args);
                           A    88    ;   38	static void cli_command_timer(char *args);
                           A    89    ;   39	static void cli_command_uart0(char *args);
                           A    90    ;   40	
                           A    91    ;   41	void init_cli(void)
                           A    92    ;   42	{
00000000                   A    93    _init_cli:
                           A    94    .define "_init_cli"
                           A    95    .value _init_cli
                           A    96    .class 2
                           A    97    .type 65
                           A    98    .type 0
                           A    99    .endef
                           A   100    .begfunc "init_cli",42,"_init_cli"
00000000 0800              A   101    	LINK	#0
                           A   102    ;   43		//initialize the hardware
                           A   103    ;   44		init_leds();
                           A   104    .line 44
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   3


PC     Object              I  Line    Source cli.src
00000002 F1 FFFFFD         A   105    	CALL	_init_leds
                           A   106    ;   45		init_uart();
                           A   107    .line 45
00000006 F1 FFFFFB         A   108    	CALL	_init_uart
                           A   109    ;   46		init_info();
                           A   110    .line 46
0000000A F1 FFFFF9         A   111    	CALL	_init_info
                           A   112    ;   47	
                           A   113    ;   48		strcpy(cli_prompt, CLI_PROMPT);
                           A   114    .line 48
0000000E 4511 0000         A   115    	LD	R1,#_cli_prompt
00000012 4502 0000         A   116    	LD	R2,#L__0
00000016 F1 FFFFF3         A   117    	CALL	_strcpy
                           A   118    ;   49	}
                           A   119    .line 49
0000001A 0001              A   120    	UNLINK	
0000001C FFFC              A   121    	RET	
                           A   122    
                           A   123    
                           A   124    ;**************************** _init_cli ***************************
                           A   125    ;Name                         Addr/Register   Size   Type
                           A   126    ;_cli_prompt                         STATIC    256   variable
                           A   127    ;_strcpy                             IMPORT  -----   function
                           A   128    ;_init_info                          IMPORT  -----   function
                           A   129    ;_init_uart                          IMPORT  -----   function
                           A   130    ;_init_leds                          IMPORT  -----   function
                           A   131    
                           A   132    
                           A   133    ; Aggregate Stack Size: 0 (words)
                           A   134    
                           A   135    
                           A   136    .endfunc "init_cli",49,"_init_cli"
                           A   137    	SEGMENT ROM_TEXT
00000003                   A   138    L__2:
00000003 2573              A   139    	DB	"%s"
00000005 00                A   140    	DB	0
00000006                   A   141    L__6:
00000006 2573              A   142    	DB	"%s"
00000008 00                A   143    	DB	0
00000009                   A   144    L__12:
00000009 0A                A   145    	DB	10
0000000A 2D2D4572          A   146    	DB	"--Error--, command is too long. Command ignored."
0000000E 726F722D 
00000012 2D2C2063 
00000016 6F6D6D61 
0000001A 6E642069 
0000001E 7320746F 
00000022 6F206C6F 
00000026 6E672E20 
0000002A 436F6D6D 
0000002E 616E6420 
00000032 69676E6F 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   4


PC     Object              I  Line    Source cli.src
00000036 7265642E 
0000003A 0A00              A   147    	DB	10,0
0000003C                   A   148    L__13:
0000003C 2573              A   149    	DB	"%s"
0000003E 00                A   150    	DB	0
                           A   151    	SEGMENT CODE
                           A   152    ;   50	
                           A   153    ;   51	void cli_loop(void)
                           A   154    ;   52	{
0000001E                   A   155    _cli_loop:
                           A   156    .define "_cli_loop"
                           A   157    .value _cli_loop
                           A   158    .class 2
                           A   159    .type 65
                           A   160    .type 0
                           A   161    .endef
                           A   162    .begfunc "cli_loop",52,"_cli_loop"
                           A   163    .line 52
                           A   164    .define "c"
                           A   165    .class 1
                           A   166    .value -1
                           A   167    .type 12
                           A   168    .type 0
                           A   169    .endef
                           A   170    .define "buffer_pos"
                           A   171    .class 1
                           A   172    .value -5
                           A   173    .type 5
                           A   174    .type 0
                           A   175    .endef
                           A   176    .define "buffer"
                           A   177    .class 1
                           A   178    .value -261
                           A   179    .dim 256
                           A   180    .type 108
                           A   181    .type 0
                           A   182    .endef
0000001E 0800              A   183    	LINK	#0
00000020 AA1F 0105         A   184    	SUB	R15,#261
                           A   185    ;   53		char buffer[CLI_BUFFER_SIZE];
                           A   186    ;   54		char c;
                           A   187    ;   55	
                           A   188    ;   56		int buffer_pos;
                           A   189    ;   57	
                           A   190    ;   58		uart_printf("%s", cli_prompt);
                           A   191    .line 58
00000024 098F 0000         A   192    	PUSH.W	#_cli_prompt
00000028 098F 0003         A   193    	PUSH.W	#L__2
0000002C F1 FFFFE8         A   194    	CALL	_uart_printf
00000030 8F04              A   195    	ADD	R15,#4
                           A   196    ;   59	
                           A   197    ;   60		buffer_pos = 0;
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   5


PC     Object              I  Line    Source cli.src
                           A   198    .line 60
00000032 ADCE BFFB         A   199    	CLR	-5(R14)
                           A   200    ;   61	
                           A   201    ;   62		while(1) {
00000036                   A   202    _2_L_18:
                           A   203    .line 62
                           A   204    ;   63			//wait until a character is available
                           A   205    ;   64			while((c = uart_getchar()) == 0) { ; }
00000036                   A   206    _2_L_1:
                           A   207    .line 64
00000036 F1 FFFFE3         A   208    	CALL	_uart_getchar
0000003A 53F0              A   209    	LD.B	-1(R14),R0
0000003C ADDE 3FFF         A   210    	CPZ.B	-1(R14)
00000040 E6 FA             A   211    	JP	EQ,_2_L_1
                           A   212    ;   65	
                           A   213    ;   66			//new line means end of the command
                           A   214    ;   67			if(c == '\n') {
                           A   215    .line 67
00000042 300A              A   216    	LD	R0,#10
00000044 7D0E BFFF         A   217    	CP.B	-1(R14),R0
00000048 EE 1C             A   218    	JP	NE,_2_L_14
                           A   219    ;   68				//only process a command if something was entered
                           A   220    ;   69				if(buffer_pos) {
                           A   221    .line 69
0000004A ADDE BFFB         A   222    	CPZ	-5(R14)
0000004E E6 08             A   223    	JP	EQ,_2_L_4
                           A   224    ;   70					buffer[buffer_pos] = '\0';
                           A   225    .line 70
00000050 6FD0              A   226    	LD.SW	R0,-3(R14)
00000052 48E1 BEFB         A   227    	LEA	R1,-261(R14)
00000056 A010              A   228    	ADD	R0,R1
00000058 AC00              A   229    	CLR.B	(R0)
                           A   230    ;   71					cli_process_command(buffer);
                           A   231    .line 71
0000005A 48E1 BEFB         A   232    	LEA	R1,-261(R14)
0000005E D0D4              A   233    	CALL	_cli_process_command
                           A   234    ;   72				}
00000060                   A   235    _2_L_4:
                           A   236    .line 72
                           A   237    ;   73	
                           A   238    ;   74				buffer_pos = 0;
                           A   239    .line 74
00000060 ADCE BFFB         A   240    	CLR	-5(R14)
                           A   241    ;   75				memset(buffer, 0, CLI_BUFFER_SIZE);
                           A   242    .line 75
00000064 48E1 BEFB         A   243    	LEA	R1,-261(R14)
00000068 3200              A   244    	LD	R2,#0
0000006A 4503 0100         A   245    	LD	R3,#256
0000006E F1 FFFFC7         A   246    	CALL	_memset
                           A   247    ;   76	
                           A   248    ;   77				uart_printf("%s", cli_prompt);
                           A   249    .line 77
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   6


PC     Object              I  Line    Source cli.src
00000072 098F 0000         A   250    	PUSH.W	#_cli_prompt
00000076 098F 0006         A   251    	PUSH.W	#L__6
0000007A F1 FFFFC1         A   252    	CALL	_uart_printf
0000007E 8F04              A   253    	ADD	R15,#4
                           A   254    ;   78			}
                           A   255    ;   79			//there is more to come...
                           A   256    ;   80			else if(isgraph(c) || isspace(c)) {
                           A   257    .line 80
00000080 C021              A   258    	JP	_2_L_17
00000082                   A   259    _2_L_14:
00000082 63F1              A   260    	LD.UB	R1,-1(R14)
00000084 F1 FFFFBC         A   261    	CALL	_isgraph
00000088 9000              A   262    	CP	R0,#0
0000008A EE 05             A   263    	JP	NE,_2_L_11
0000008C 63F1              A   264    	LD.UB	R1,-1(R14)
0000008E F1 FFFFB7         A   265    	CALL	_isspace
00000092 9000              A   266    	CP	R0,#0
00000094 E6 09             A   267    	JP	EQ,_2_L_12
00000096                   A   268    _2_L_11:
                           A   269    ;   81				buffer[buffer_pos++] = c;
                           A   270    .line 81
00000096 5FB0              A   271    	LD	R0,-5(R14)
00000098 48E1 BEFB         A   272    	LEA	R1,-261(R14)
0000009C A010              A   273    	ADD	R0,R1
0000009E 6BF1              A   274    	LD.SB	R1,-1(R14)
000000A0 0E10              A   275    	LD.B	(R0),R1
000000A2 ADEE BFFB         A   276    	INC	-5(R14)
                           A   277    ;   82			}
                           A   278    ;   83			//
                           A   279    ;   84			else if(c == ASCII_DEL) {
                           A   280    .line 84
000000A6 C00E              A   281    	JP	_2_L_17
000000A8                   A   282    _2_L_12:
000000A8 307F              A   283    	LD	R0,#127
000000AA 7D0E BFFF         A   284    	CP.B	-1(R14),R0
000000AE EE C3             A   285    	JP	NE,_2_L_18
                           A   286    ;   85				if(buffer_pos) {
                           A   287    .line 85
000000B0 ADDE BFFB         A   288    	CPZ	-5(R14)
000000B4 E6 07             A   289    	JP	EQ,_2_L_17
                           A   290    ;   86					buffer_pos--;
                           A   291    .line 86
000000B6 ADFE BFFB         A   292    	DEC	-5(R14)
                           A   293    ;   87					buffer[buffer_pos] = '\0';
                           A   294    .line 87
000000BA 6FD0              A   295    	LD.SW	R0,-3(R14)
000000BC 48E1 BEFB         A   296    	LEA	R1,-261(R14)
000000C0 A010              A   297    	ADD	R0,R1
000000C2 AC00              A   298    	CLR.B	(R0)
                           A   299    ;   88				}
                           A   300    ;   89			}
                           A   301    ;   90			//ignore for now
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   7


PC     Object              I  Line    Source cli.src
                           A   302    ;   91			else {
                           A   303    .line 91
                           A   304    ;   92				continue;
                           A   305    ;   93			}
000000C4                   A   306    _2_L_17:
                           A   307    .line 93
                           A   308    ;   94	
                           A   309    ;   95			//is the command too long?
                           A   310    ;   96			if(buffer_pos >= CLI_BUFFER_SIZE) {
                           A   311    .line 96
000000C4 4500 0100         A   312    	LD	R0,#256
000000C8 7D0E FFFB         A   313    	CP	-5(R14),R0
000000CC E1 B4             A   314    	JP	LT,_2_L_18
                           A   315    ;   97				uart_printf("\n--Error--, command is too long. Command ignored.\n");
                           A   316    .line 97
000000CE 098F 0009         A   317    	PUSH.W	#L__12
000000D2 F1 FFFF95         A   318    	CALL	_uart_printf
000000D6 8F02              A   319    	ADD	R15,#2
                           A   320    ;   98				
                           A   321    ;   99				buffer_pos = 0;
                           A   322    .line 99
000000D8 ADCE BFFB         A   323    	CLR	-5(R14)
                           A   324    ;  100				memset(buffer, 0, CLI_BUFFER_SIZE);
                           A   325    .line 100
000000DC 48E1 BEFB         A   326    	LEA	R1,-261(R14)
000000E0 3200              A   327    	LD	R2,#0
000000E2 4503 0100         A   328    	LD	R3,#256
000000E6 F1 FFFF8B         A   329    	CALL	_memset
                           A   330    ;  101	
                           A   331    ;  102				uart_printf("%s", cli_prompt);
                           A   332    .line 102
000000EA 098F 0000         A   333    	PUSH.W	#_cli_prompt
000000EE 098F 003C         A   334    	PUSH.W	#L__13
000000F2 F1 FFFF85         A   335    	CALL	_uart_printf
000000F6 8F04              A   336    	ADD	R15,#4
                           A   337    ;  103			}
                           A   338    ;  104		}
                           A   339    .line 104
000000F8 CF9E              A   340    	JP	_2_L_18
                           A   341    ;  105	}
                           A   342    .line 105
000000FA 0001              A   343    	UNLINK	
000000FC FFFC              A   344    	RET	
                           A   345    
                           A   346    
                           A   347    ;**************************** _cli_loop ***************************
                           A   348    ;Name                         Addr/Register   Size   Type
                           A   349    ;_isspace                            IMPORT  -----   function
                           A   350    ;_isgraph                            IMPORT  -----   function
                           A   351    ;_memset                             IMPORT  -----   function
                           A   352    ;_cli_process_command                STATIC  -----   function
                           A   353    ;_uart_getchar                       IMPORT  -----   function
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   8


PC     Object              I  Line    Source cli.src
                           A   354    ;_cli_prompt                         STATIC    256   variable
                           A   355    ;_uart_printf                        IMPORT  -----   function
                           A   356    ;buffer                             R14-261    256   variable
                           A   357    ;buffer_pos                           R14-5      4   variable
                           A   358    ;c                                    R14-1      1   variable
                           A   359    
                           A   360    
                           A   361    ; Aggregate Stack Size: -261 (words)
                           A   362    
                           A   363    
                           A   364    .endfunc "cli_loop",105,"_cli_loop"
                           A   365    ;  106	
                           A   366    ;  107	int cli_strip_quotes(char **args)
                           A   367    ;  108	{
000000FE                   A   368    _cli_strip_quotes:
                           A   369    .define "_cli_strip_quotes"
                           A   370    .value _cli_strip_quotes
                           A   371    .class 2
                           A   372    .type 69
                           A   373    .type 0
                           A   374    .endef
                           A   375    .begfunc "cli_strip_quotes",108,"_cli_strip_quotes"
000000FE 0804              A   376    	LINK	#4
                           A   377    .line 108
00000100 57E1              A   378    	LD.W	-2(R14),R1
                           A   379    .define "args"
                           A   380    .class 9
                           A   381    .value -2
                           A   382    .type 1164
                           A   383    .type 0
                           A   384    .endef
                           A   385    .define "c"
                           A   386    .class 1
                           A   387    .value -4
                           A   388    .type 140
                           A   389    .type 0
                           A   390    .endef
                           A   391    ;  109		char *c;
                           A   392    ;  110	
                           A   393    ;  111		c = *args;
                           A   394    .line 111
00000102 6FE0              A   395    	LD.SW	R0,-2(R14)
00000104 1E00              A   396    	LD.SW	R0,(R0)
00000106 57C0              A   397    	LD.W	-4(R14),R0
                           A   398    ;  112		if(*c != '"') {
                           A   399    .line 112
00000108 6FC0              A   400    	LD.SW	R0,-4(R14)
0000010A 1800              A   401    	LD.UB	R0,(R0)
0000010C 9022              A   402    	CP	R0,#34
0000010E E6 02             A   403    	JP	EQ,_3_L_22
                           A   404    ;  113			return 1;
                           A   405    .line 113
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:   9


PC     Object              I  Line    Source cli.src
00000110 3001              A   406    	LD	R0,#1
00000112 C012              A   407    	JP	_3_L_25
                           A   408    ;  114		}
00000114                   A   409    _3_L_22:
                           A   410    .line 114
                           A   411    ;  115		++c;
                           A   412    .line 115
00000114 ADEE 7FFC         A   413    	INC.W	-4(R14)
                           A   414    ;  116	
                           A   415    ;  117		c = strchr(c, '"');
                           A   416    .line 117
00000118 6FC1              A   417    	LD.SW	R1,-4(R14)
0000011A 3222              A   418    	LD	R2,#34
0000011C F1 FFFF70         A   419    	CALL	_strchr
00000120 57C0              A   420    	LD.W	-4(R14),R0
                           A   421    ;  118		if(c == NULL) {
                           A   422    .line 118
00000122 ADDE 7FFC         A   423    	CPZ.W	-4(R14)
00000126 EE 02             A   424    	JP	NE,_3_L_24
                           A   425    ;  119			return 1;
                           A   426    .line 119
00000128 3001              A   427    	LD	R0,#1
0000012A C006              A   428    	JP	_3_L_25
                           A   429    ;  120		}
0000012C                   A   430    _3_L_24:
                           A   431    .line 120
                           A   432    ;  121		*c = '\0';
                           A   433    .line 121
0000012C 6FC0              A   434    	LD.SW	R0,-4(R14)
0000012E AC00              A   435    	CLR.B	(R0)
                           A   436    ;  122	
                           A   437    ;  123		*args = c;
                           A   438    .line 123
00000130 6FE0              A   439    	LD.SW	R0,-2(R14)
00000132 6FC1              A   440    	LD.SW	R1,-4(R14)
00000134 0F10              A   441    	LD.W	(R0),R1
                           A   442    ;  124	
                           A   443    ;  125		return 0;
                           A   444    .line 125
00000136 3000              A   445    	LD	R0,#0
                           A   446    ;  126	}
00000138                   A   447    _3_L_25:
                           A   448    .line 126
00000138 0001              A   449    	UNLINK	
0000013A FFFC              A   450    	RET	
                           A   451    
                           A   452    
                           A   453    ;**************************** _cli_strip_quotes ***************************
                           A   454    ;Name                         Addr/Register   Size   Type
                           A   455    ;_strchr                             IMPORT  -----   function
                           A   456    ;c                                    R14-4      2   variable
                           A   457    ;args                                 R14-2      2   parameter
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  10


PC     Object              I  Line    Source cli.src
                           A   458    
                           A   459    
                           A   460    ; Aggregate Stack Size: -4 (words)
                           A   461    
                           A   462    
                           A   463    .endfunc "cli_strip_quotes",126,"_cli_strip_quotes"
                           A   464    ;  127	
                           A   465    ;  128	int cli_strip_word(char **args) 
                           A   466    ;  129	{
0000013C                   A   467    _cli_strip_word:
                           A   468    .define "_cli_strip_word"
                           A   469    .value _cli_strip_word
                           A   470    .class 2
                           A   471    .type 69
                           A   472    .type 0
                           A   473    .endef
                           A   474    .begfunc "cli_strip_word",129,"_cli_strip_word"
0000013C 0804              A   475    	LINK	#4
                           A   476    .line 129
0000013E 57E1              A   477    	LD.W	-2(R14),R1
                           A   478    .define "args"
                           A   479    .class 9
                           A   480    .value -2
                           A   481    .type 1164
                           A   482    .type 0
                           A   483    .endef
                           A   484    .define "c"
                           A   485    .class 1
                           A   486    .value -4
                           A   487    .type 140
                           A   488    .type 0
                           A   489    .endef
                           A   490    ;  130		char *c;
                           A   491    ;  131	
                           A   492    ;  132		c = *args;
                           A   493    .line 132
00000140 6FE0              A   494    	LD.SW	R0,-2(R14)
00000142 1E00              A   495    	LD.SW	R0,(R0)
00000144 57C0              A   496    	LD.W	-4(R14),R0
                           A   497    ;  133		while(isalpha(*c)) {
00000146                   A   498    _4_L_26:
                           A   499    .line 133
00000146 6FC0              A   500    	LD.SW	R0,-4(R14)
00000148 1801              A   501    	LD.UB	R1,(R0)
0000014A F1 FFFF59         A   502    	CALL	_isalpha
0000014E 9000              A   503    	CP	R0,#0
00000150 E6 03             A   504    	JP	EQ,_4_L_29
                           A   505    ;  134			++c;
                           A   506    .line 134
00000152 ADEE 7FFC         A   507    	INC.W	-4(R14)
                           A   508    ;  135		}
                           A   509    .line 135
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  11


PC     Object              I  Line    Source cli.src
00000156 CFF7              A   510    	JP	_4_L_26
00000158                   A   511    _4_L_29:
                           A   512    ;  136	
                           A   513    ;  137		if(*c == '\0') {
                           A   514    .line 137
00000158 6FC0              A   515    	LD.SW	R0,-4(R14)
0000015A AC10              A   516    	CPZ.B	(R0)
0000015C EE 02             A   517    	JP	NE,_4_L_30
                           A   518    ;  138			return 1;
                           A   519    .line 138
0000015E 3001              A   520    	LD	R0,#1
00000160 C006              A   521    	JP	_4_L_31
                           A   522    ;  139		}
00000162                   A   523    _4_L_30:
                           A   524    .line 139
                           A   525    ;  140		*c = '\0';
                           A   526    .line 140
00000162 6FC0              A   527    	LD.SW	R0,-4(R14)
00000164 AC00              A   528    	CLR.B	(R0)
                           A   529    ;  141	
                           A   530    ;  142		*args = c;
                           A   531    .line 142
00000166 6FE0              A   532    	LD.SW	R0,-2(R14)
00000168 6FC1              A   533    	LD.SW	R1,-4(R14)
0000016A 0F10              A   534    	LD.W	(R0),R1
                           A   535    ;  143	
                           A   536    ;  144		return 0;
                           A   537    .line 144
0000016C 3000              A   538    	LD	R0,#0
                           A   539    ;  145	}
0000016E                   A   540    _4_L_31:
                           A   541    .line 145
0000016E 0001              A   542    	UNLINK	
00000170 FFFC              A   543    	RET	
                           A   544    
                           A   545    
                           A   546    ;**************************** _cli_strip_word ***************************
                           A   547    ;Name                         Addr/Register   Size   Type
                           A   548    ;_isalpha                            IMPORT  -----   function
                           A   549    ;c                                    R14-4      2   variable
                           A   550    ;args                                 R14-2      2   parameter
                           A   551    
                           A   552    
                           A   553    ; Aggregate Stack Size: -4 (words)
                           A   554    
                           A   555    
                           A   556    .endfunc "cli_strip_word",145,"_cli_strip_word"
                           A   557    ;  146	
                           A   558    ;  147	int cli_strip_decimal_number(char **args)
                           A   559    ;  148	{
00000172                   A   560    _cli_strip_decimal_number:
                           A   561    .define "_cli_strip_decimal_number"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  12


PC     Object              I  Line    Source cli.src
                           A   562    .value _cli_strip_decimal_number
                           A   563    .class 2
                           A   564    .type 69
                           A   565    .type 0
                           A   566    .endef
                           A   567    .begfunc "cli_strip_decimal_number",148,"_cli_strip_decimal_number"
00000172 0804              A   568    	LINK	#4
                           A   569    .line 148
00000174 57E1              A   570    	LD.W	-2(R14),R1
                           A   571    .define "args"
                           A   572    .class 9
                           A   573    .value -2
                           A   574    .type 1164
                           A   575    .type 0
                           A   576    .endef
                           A   577    .define "c"
                           A   578    .class 1
                           A   579    .value -4
                           A   580    .type 140
                           A   581    .type 0
                           A   582    .endef
                           A   583    ;  149		char *c;
                           A   584    ;  150	
                           A   585    ;  151		c = *args;
                           A   586    .line 151
00000176 6FE0              A   587    	LD.SW	R0,-2(R14)
00000178 1E00              A   588    	LD.SW	R0,(R0)
0000017A 57C0              A   589    	LD.W	-4(R14),R0
                           A   590    ;  152		while(isdigit(*c)) {
0000017C                   A   591    _5_L_32:
                           A   592    .line 152
0000017C 6FC0              A   593    	LD.SW	R0,-4(R14)
0000017E 1801              A   594    	LD.UB	R1,(R0)
00000180 F1 FFFF3E         A   595    	CALL	_isdigit
00000184 9000              A   596    	CP	R0,#0
00000186 E6 03             A   597    	JP	EQ,_5_L_34
                           A   598    ;  153			++c;
                           A   599    .line 153
00000188 ADEE 7FFC         A   600    	INC.W	-4(R14)
                           A   601    ;  154		}
                           A   602    .line 154
0000018C CFF7              A   603    	JP	_5_L_32
0000018E                   A   604    _5_L_34:
                           A   605    ;  155		*c = '\0';
                           A   606    .line 155
0000018E 6FC0              A   607    	LD.SW	R0,-4(R14)
00000190 AC00              A   608    	CLR.B	(R0)
                           A   609    ;  156	
                           A   610    ;  157		//is there a number at all
                           A   611    ;  158		if(*args == c) {
                           A   612    .line 158
00000192 6FE0              A   613    	LD.SW	R0,-2(R14)
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  13


PC     Object              I  Line    Source cli.src
00000194 6FC1              A   614    	LD.SW	R1,-4(R14)
00000196 7D10 C000         A   615    	CP.W	(R0),R1
0000019A EE 02             A   616    	JP	NE,_5_L_36
                           A   617    ;  159			return 1;
                           A   618    .line 159
0000019C 3001              A   619    	LD	R0,#1
0000019E C004              A   620    	JP	_5_L_37
                           A   621    ;  160		}
000001A0                   A   622    _5_L_36:
                           A   623    .line 160
                           A   624    ;  161		*args = c;
                           A   625    .line 161
000001A0 6FE0              A   626    	LD.SW	R0,-2(R14)
000001A2 6FC1              A   627    	LD.SW	R1,-4(R14)
000001A4 0F10              A   628    	LD.W	(R0),R1
                           A   629    ;  162	
                           A   630    ;  163		return 0;
                           A   631    .line 163
000001A6 3000              A   632    	LD	R0,#0
                           A   633    ;  164	}
000001A8                   A   634    _5_L_37:
                           A   635    .line 164
000001A8 0001              A   636    	UNLINK	
000001AA FFFC              A   637    	RET	
                           A   638    
                           A   639    
                           A   640    ;**************************** _cli_strip_decimal_number ***************************
                           A   641    ;Name                         Addr/Register   Size   Type
                           A   642    ;_isdigit                            IMPORT  -----   function
                           A   643    ;c                                    R14-4      2   variable
                           A   644    ;args                                 R14-2      2   parameter
                           A   645    
                           A   646    
                           A   647    ; Aggregate Stack Size: -4 (words)
                           A   648    
                           A   649    
                           A   650    .endfunc "cli_strip_decimal_number",164,"_cli_strip_decimal_number"
                           A   651    ;  165	
                           A   652    ;  166	void cli_strip_spaces(char **args)
                           A   653    ;  167	{
000001AC                   A   654    _cli_strip_spaces:
                           A   655    .define "_cli_strip_spaces"
                           A   656    .value _cli_strip_spaces
                           A   657    .class 2
                           A   658    .type 65
                           A   659    .type 0
                           A   660    .endef
                           A   661    .begfunc "cli_strip_spaces",167,"_cli_strip_spaces"
000001AC 0804              A   662    	LINK	#4
                           A   663    .line 167
000001AE 57E1              A   664    	LD.W	-2(R14),R1
                           A   665    .define "args"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  14


PC     Object              I  Line    Source cli.src
                           A   666    .class 9
                           A   667    .value -2
                           A   668    .type 1164
                           A   669    .type 0
                           A   670    .endef
                           A   671    .define "c"
                           A   672    .class 1
                           A   673    .value -4
                           A   674    .type 140
                           A   675    .type 0
                           A   676    .endef
                           A   677    ;  168		char *c;
                           A   678    ;  169	
                           A   679    ;  170		c = *args;
                           A   680    .line 170
000001B0 6FE0              A   681    	LD.SW	R0,-2(R14)
000001B2 1E00              A   682    	LD.SW	R0,(R0)
000001B4 57C0              A   683    	LD.W	-4(R14),R0
                           A   684    ;  171		while(isspace(*c)) {
000001B6                   A   685    _6_L_38:
                           A   686    .line 171
000001B6 6FC0              A   687    	LD.SW	R0,-4(R14)
000001B8 1801              A   688    	LD.UB	R1,(R0)
000001BA F1 FFFF21         A   689    	CALL	_isspace
000001BE 9000              A   690    	CP	R0,#0
000001C0 E6 03             A   691    	JP	EQ,_6_L_40
                           A   692    ;  172			++c;
                           A   693    .line 172
000001C2 ADEE 7FFC         A   694    	INC.W	-4(R14)
                           A   695    ;  173		}
                           A   696    .line 173
000001C6 CFF7              A   697    	JP	_6_L_38
000001C8                   A   698    _6_L_40:
                           A   699    ;  174	
                           A   700    ;  175		*args = c;
                           A   701    .line 175
000001C8 6FE0              A   702    	LD.SW	R0,-2(R14)
000001CA 6FC1              A   703    	LD.SW	R1,-4(R14)
000001CC 0F10              A   704    	LD.W	(R0),R1
                           A   705    ;  176	}
                           A   706    .line 176
000001CE 0001              A   707    	UNLINK	
000001D0 FFFC              A   708    	RET	
                           A   709    
                           A   710    
                           A   711    ;**************************** _cli_strip_spaces ***************************
                           A   712    ;Name                         Addr/Register   Size   Type
                           A   713    ;_isspace                            IMPORT  -----   function
                           A   714    ;c                                    R14-4      2   variable
                           A   715    ;args                                 R14-2      2   parameter
                           A   716    
                           A   717    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  15


PC     Object              I  Line    Source cli.src
                           A   718    ; Aggregate Stack Size: -4 (words)
                           A   719    
                           A   720    
                           A   721    .endfunc "cli_strip_spaces",176,"_cli_strip_spaces"
                           A   722    ;  177	
                           A   723    ;  178	void cli_set_prompt(const char *text)
                           A   724    ;  179	{
000001D2                   A   725    _cli_set_prompt:
                           A   726    .define "_cli_set_prompt"
                           A   727    .value _cli_set_prompt
                           A   728    .class 2
                           A   729    .type 65
                           A   730    .type 0
                           A   731    .endef
                           A   732    .begfunc "cli_set_prompt",179,"_cli_set_prompt"
000001D2 0806              A   733    	LINK	#6
                           A   734    .line 179
000001D4 57E1              A   735    	LD.W	-2(R14),R1
                           A   736    .define "text"
                           A   737    .class 9
                           A   738    .value -2
                           A   739    .type 140
                           A   740    .type 0
                           A   741    .endef
                           A   742    .define "prompt_len"
                           A   743    .class 1
                           A   744    .value -6
                           A   745    .type 15
                           A   746    .type 0
                           A   747    .endef
                           A   748    ;  180		size_t prompt_len;
                           A   749    ;  181	
                           A   750    ;  182		prompt_len = strlen(text) + 1;
                           A   751    .line 182
000001D6 6FE1              A   752    	LD.SW	R1,-2(R14)
000001D8 F1 FFFF12         A   753    	CALL	_strlen
000001DC 8001              A   754    	ADD	R0,#1
000001DE 5BA0              A   755    	LD	-6(R14),R0
                           A   756    ;  183		if(prompt_len >= CLI_BUFFER_SIZE) {
                           A   757    .line 183
000001E0 4500 0100         A   758    	LD	R0,#256
000001E4 7D0E FFFA         A   759    	CP	-6(R14),R0
000001E8 E7 01             A   760    	JP	C,_7_L_43
                           A   761    ;  184			prompt_len = CLI_BUFFER_SIZE;
                           A   762    .line 184
000001EA 5BA0              A   763    	LD	-6(R14),R0
                           A   764    ;  185		}
000001EC                   A   765    _7_L_43:
                           A   766    .line 185
                           A   767    ;  186	
                           A   768    ;  187		memcpy(cli_prompt, text, prompt_len);
                           A   769    .line 187
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  16


PC     Object              I  Line    Source cli.src
000001EC 4511 0000         A   770    	LD	R1,#_cli_prompt
000001F0 6FE2              A   771    	LD.SW	R2,-2(R14)
000001F2 5FA3              A   772    	LD	R3,-6(R14)
000001F4 F1 FFFF04         A   773    	CALL	_memcpy
                           A   774    ;  188		cli_prompt[prompt_len-1] = '\0';
                           A   775    .line 188
000001F8 5FA0              A   776    	LD	R0,-6(R14)
000001FA 80FF              A   777    	ADD	R0,#-1
000001FC 4511 0000         A   778    	LD	R1,#_cli_prompt
00000200 A010              A   779    	ADD	R0,R1
00000202 AC00              A   780    	CLR.B	(R0)
                           A   781    ;  189	}
                           A   782    .line 189
00000204 0001              A   783    	UNLINK	
00000206 FFFC              A   784    	RET	
                           A   785    
                           A   786    
                           A   787    ;**************************** _cli_set_prompt ***************************
                           A   788    ;Name                         Addr/Register   Size   Type
                           A   789    ;_cli_prompt                         STATIC    256   variable
                           A   790    ;_memcpy                             IMPORT  -----   function
                           A   791    ;_strlen                             IMPORT  -----   function
                           A   792    ;prompt_len                           R14-6      4   variable
                           A   793    ;text                                 R14-2      2   parameter
                           A   794    
                           A   795    
                           A   796    ; Aggregate Stack Size: -6 (words)
                           A   797    
                           A   798    
                           A   799    .endfunc "cli_set_prompt",189,"_cli_set_prompt"
                           A   800    	SEGMENT ROM_TEXT
0000003F                   A   801    L__31:
0000003F 696E666F          A   802    	DB	"info"
00000043 00                A   803    	DB	0
00000044                   A   804    L__33:
00000044 3F                A   805    	DB	"?"
00000045 00                A   806    	DB	0
00000046                   A   807    L__35:
00000046 6563686F          A   808    	DB	"echo"
0000004A 00                A   809    	DB	0
0000004B                   A   810    L__37:
0000004B 64697370 6C6179   A   811    	DB	"display"
00000052 00                A   812    	DB	0
00000053                   A   813    L__39:
00000053 736574            A   814    	DB	"set"
00000056 00                A   815    	DB	0
00000057                   A   816    L__41:
00000057 686578            A   817    	DB	"hex"
0000005A 00                A   818    	DB	0
0000005B                   A   819    L__43:
0000005B 73776974 6368     A   820    	DB	"switch"
00000061 00                A   821    	DB	0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  17


PC     Object              I  Line    Source cli.src
00000062                   A   822    L__45:
00000062 706F7274          A   823    	DB	"port"
00000066 00                A   824    	DB	0
00000067                   A   825    L__47:
00000067 74696D65 72       A   826    	DB	"timer"
0000006C 00                A   827    	DB	0
0000006D                   A   828    L__49:
0000006D 75617274 30       A   829    	DB	"uart0"
00000072 00                A   830    	DB	0
00000073                   A   831    L__51:
00000073 2D2D436F          A   832    	DB	"--Command:%s, not found. Enter \"?\" to see a list of available commands."
00000077 6D6D616E 
0000007B 643A2573 
0000007F 2C206E6F 
00000083 7420666F 
00000087 756E642E 
0000008B 20456E74 
0000008F 65722022 
00000093 3F222074 
00000097 6F207365 
0000009B 65206120 
0000009F 6C697374 
000000A3 206F6620 
000000A7 61766169 
000000AB 6C61626C 
000000AF 6520636F 
000000B3 6D6D616E 64732E 
000000BA 0A00              A   833    	DB	10,0
                           A   834    	SEGMENT CODE
                           A   835    ;  190	
                           A   836    ;  191	static void cli_process_command(char *command)
                           A   837    ;  192	{
00000208                   A   838    _cli_process_command:
                           A   839    .define "_cli_process_command"
                           A   840    .value _cli_process_command
                           A   841    .class 3
                           A   842    .type 65
                           A   843    .type 0
                           A   844    .endef
                           A   845    .begfunc "cli_process_command",192,"_cli_process_command"
00000208 0804              A   846    	LINK	#4
                           A   847    .line 192
0000020A 57E1              A   848    	LD.W	-2(R14),R1
                           A   849    .define "command"
                           A   850    .class 9
                           A   851    .value -2
                           A   852    .type 140
                           A   853    .type 0
                           A   854    .endef
                           A   855    .define "args"
                           A   856    .class 1
                           A   857    .value -4
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  18


PC     Object              I  Line    Source cli.src
                           A   858    .type 140
                           A   859    .type 0
                           A   860    .endef
                           A   861    ;  193		char *args;
                           A   862    ;  194	
                           A   863    ;  195		//strip spaces and tabs
                           A   864    ;  196		cli_strip_spaces(&command);
                           A   865    .line 196
0000020C 4FE1              A   866    	LEA	R1,-2(R14)
0000020E DFCE              A   867    	CALL	_cli_strip_spaces
                           A   868    ;  197	
                           A   869    ;  198		args = command;
                           A   870    .line 198
00000210 6FE0              A   871    	LD.SW	R0,-2(R14)
00000212 57C0              A   872    	LD.W	-4(R14),R0
                           A   873    ;  199		while(isgraph(*args) && *args != '\t') {	//bug with isgraph, returns true on \t and 
00000214                   A   874    _8_L_46:
                           A   875    .line 199
00000214 6FC0              A   876    	LD.SW	R0,-4(R14)
00000216 1801              A   877    	LD.UB	R1,(R0)
00000218 F1 FFFEF2         A   878    	CALL	_isgraph
0000021C 9000              A   879    	CP	R0,#0
0000021E E6 07             A   880    	JP	EQ,_8_L_69
00000220 6FC0              A   881    	LD.SW	R0,-4(R14)
00000222 1800              A   882    	LD.UB	R0,(R0)
00000224 9009              A   883    	CP	R0,#9
00000226 E6 03             A   884    	JP	EQ,_8_L_69
                           A   885    ;  200			++args;
                           A   886    .line 200
00000228 ADEE 7FFC         A   887    	INC.W	-4(R14)
                           A   888    ;  201		}
                           A   889    .line 201
0000022C CFF3              A   890    	JP	_8_L_46
0000022E                   A   891    _8_L_69:
                           A   892    ;  202	
                           A   893    ;  203		if(args != command) {
                           A   894    .line 203
0000022E 6FE0              A   895    	LD.SW	R0,-2(R14)
00000230 7D0E DFFC         A   896    	CP.W	-4(R14),R0
00000234 E6 6D             A   897    	JP	EQ,_8_L_70
                           A   898    ;  204			*args = '\0';
                           A   899    .line 204
00000236 6FC0              A   900    	LD.SW	R0,-4(R14)
00000238 AC00              A   901    	CLR.B	(R0)
                           A   902    ;  205	
                           A   903    ;  206			++args;
                           A   904    .line 206
0000023A ADEE 7FFC         A   905    	INC.W	-4(R14)
                           A   906    ;  207			if(strcmp(command, "info") == 0) {
                           A   907    .line 207
0000023E 6FE1              A   908    	LD.SW	R1,-2(R14)
00000240 4502 003F         A   909    	LD	R2,#L__31
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  19


PC     Object              I  Line    Source cli.src
00000244 F1 FFFEDC         A   910    	CALL	_strcmp
00000248 9000              A   911    	CP	R0,#0
0000024A EE 02             A   912    	JP	NE,_8_L_67
                           A   913    ;  208				cli_command_info();
                           A   914    .line 208
0000024C D0CF              A   915    	CALL	_cli_command_info
                           A   916    ;  209			}
                           A   917    ;  210			else if(strcmp(command, "?") == 0) {
                           A   918    .line 210
0000024E C060              A   919    	JP	_8_L_70
00000250                   A   920    _8_L_67:
00000250 6FE1              A   921    	LD.SW	R1,-2(R14)
00000252 4502 0044         A   922    	LD	R2,#L__33
00000256 F1 FFFED3         A   923    	CALL	_strcmp
0000025A 9000              A   924    	CP	R0,#0
0000025C EE 02             A   925    	JP	NE,_8_L_65
                           A   926    ;  211				cli_command_question();
                           A   927    .line 211
0000025E D05A              A   928    	CALL	_cli_command_question
                           A   929    ;  212			}
                           A   930    ;  213			else if(strcmp(command, "echo") == 0) {
                           A   931    .line 213
00000260 C057              A   932    	JP	_8_L_70
00000262                   A   933    _8_L_65:
00000262 6FE1              A   934    	LD.SW	R1,-2(R14)
00000264 4502 0046         A   935    	LD	R2,#L__35
00000268 F1 FFFECA         A   936    	CALL	_strcmp
0000026C 9000              A   937    	CP	R0,#0
0000026E EE 03             A   938    	JP	NE,_8_L_63
                           A   939    ;  214				cli_command_echo(args);
                           A   940    .line 214
00000270 6FC1              A   941    	LD.SW	R1,-4(R14)
00000272 D0C1              A   942    	CALL	_cli_command_echo
                           A   943    ;  215			}
                           A   944    ;  216			else if(strcmp(command, "display") == 0) {
                           A   945    .line 216
00000274 C04D              A   946    	JP	_8_L_70
00000276                   A   947    _8_L_63:
00000276 6FE1              A   948    	LD.SW	R1,-2(R14)
00000278 4502 004B         A   949    	LD	R2,#L__37
0000027C F1 FFFEC0         A   950    	CALL	_strcmp
00000280 9000              A   951    	CP	R0,#0
00000282 EE 03             A   952    	JP	NE,_8_L_61
                           A   953    ;  217				cli_command_display(args);
                           A   954    .line 217
00000284 6FC1              A   955    	LD.SW	R1,-4(R14)
00000286 D0D2              A   956    	CALL	_cli_command_display
                           A   957    ;  218			}
                           A   958    ;  219			else if(strcmp(command, "set") == 0) {
                           A   959    .line 219
00000288 C043              A   960    	JP	_8_L_70
0000028A                   A   961    _8_L_61:
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  20


PC     Object              I  Line    Source cli.src
0000028A 6FE1              A   962    	LD.SW	R1,-2(R14)
0000028C 4502 0053         A   963    	LD	R2,#L__39
00000290 F1 FFFEB6         A   964    	CALL	_strcmp
00000294 9000              A   965    	CP	R0,#0
00000296 EE 03             A   966    	JP	NE,_8_L_59
                           A   967    ;  220				cli_command_set(args);
                           A   968    .line 220
00000298 6FC1              A   969    	LD.SW	R1,-4(R14)
0000029A D0F8              A   970    	CALL	_cli_command_set
                           A   971    ;  221			}
                           A   972    ;  222			else if(strcmp(command, "hex") == 0) {
                           A   973    .line 222
0000029C C039              A   974    	JP	_8_L_70
0000029E                   A   975    _8_L_59:
0000029E 6FE1              A   976    	LD.SW	R1,-2(R14)
000002A0 4502 0057         A   977    	LD	R2,#L__41
000002A4 F1 FFFEAC         A   978    	CALL	_strcmp
000002A8 9000              A   979    	CP	R0,#0
000002AA EE 03             A   980    	JP	NE,_8_L_57
                           A   981    ;  223				cli_command_hex(args);
                           A   982    .line 223
000002AC 6FC1              A   983    	LD.SW	R1,-4(R14)
000002AE D0D5              A   984    	CALL	_cli_command_hex
                           A   985    ;  224			}
                           A   986    ;  225			else if(strcmp(command, "switch") == 0) {
                           A   987    .line 225
000002B0 C02F              A   988    	JP	_8_L_70
000002B2                   A   989    _8_L_57:
000002B2 6FE1              A   990    	LD.SW	R1,-2(R14)
000002B4 4502 005B         A   991    	LD	R2,#L__43
000002B8 F1 FFFEA2         A   992    	CALL	_strcmp
000002BC 9000              A   993    	CP	R0,#0
000002BE EE 03             A   994    	JP	NE,_8_L_55
                           A   995    ;  226				cli_command_switch(args);
                           A   996    .line 226
000002C0 6FC1              A   997    	LD.SW	R1,-4(R14)
000002C2 D117              A   998    	CALL	_cli_command_switch
                           A   999    ;  227			}
                           A  1000    ;  228			else if(strcmp(command, "port") == 0) {
                           A  1001    .line 228
000002C4 C025              A  1002    	JP	_8_L_70
000002C6                   A  1003    _8_L_55:
000002C6 6FE1              A  1004    	LD.SW	R1,-2(R14)
000002C8 4502 0062         A  1005    	LD	R2,#L__45
000002CC F1 FFFE98         A  1006    	CALL	_strcmp
000002D0 9000              A  1007    	CP	R0,#0
000002D2 EE 03             A  1008    	JP	NE,_8_L_53
                           A  1009    ;  229				cli_command_port(args);
                           A  1010    .line 229
000002D4 6FC1              A  1011    	LD.SW	R1,-4(R14)
000002D6 D146              A  1012    	CALL	_cli_command_port
                           A  1013    ;  230			}
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  21


PC     Object              I  Line    Source cli.src
                           A  1014    ;  231			else if(strcmp(command, "timer") == 0) {
                           A  1015    .line 231
000002D8 C01B              A  1016    	JP	_8_L_70
000002DA                   A  1017    _8_L_53:
000002DA 6FE1              A  1018    	LD.SW	R1,-2(R14)
000002DC 4502 0067         A  1019    	LD	R2,#L__47
000002E0 F1 FFFE8E         A  1020    	CALL	_strcmp
000002E4 9000              A  1021    	CP	R0,#0
000002E6 EE 03             A  1022    	JP	NE,_8_L_51
                           A  1023    ;  232				cli_command_timer(args);
                           A  1024    .line 232
000002E8 6FC1              A  1025    	LD.SW	R1,-4(R14)
000002EA D13F              A  1026    	CALL	_cli_command_timer
                           A  1027    ;  233			}
                           A  1028    ;  234			else if(strcmp(command, "uart0") == 0) {
                           A  1029    .line 234
000002EC C011              A  1030    	JP	_8_L_70
000002EE                   A  1031    _8_L_51:
000002EE 6FE1              A  1032    	LD.SW	R1,-2(R14)
000002F0 4502 006D         A  1033    	LD	R2,#L__49
000002F4 F1 FFFE84         A  1034    	CALL	_strcmp
000002F8 9000              A  1035    	CP	R0,#0
000002FA EE 03             A  1036    	JP	NE,_8_L_49
                           A  1037    ;  235				cli_command_uart0(args);
                           A  1038    .line 235
000002FC 6FC1              A  1039    	LD.SW	R1,-4(R14)
000002FE D138              A  1040    	CALL	_cli_command_uart0
                           A  1041    ;  236			}
                           A  1042    ;  237			else {
                           A  1043    .line 237
00000300 C007              A  1044    	JP	_8_L_70
00000302                   A  1045    _8_L_49:
                           A  1046    ;  238				uart_printf("--Command:%s, not found. Enter \"?\" to see a list of available co
                           A  1047    .line 238
00000302 6FE0              A  1048    	LD.SW	R0,-2(R14)
00000304 160F              A  1049    	PUSH.W	R0
00000306 098F 0073         A  1050    	PUSH.W	#L__51
0000030A F1 FFFE79         A  1051    	CALL	_uart_printf
0000030E 8F04              A  1052    	ADD	R15,#4
                           A  1053    ;  239			}
                           A  1054    ;  240		}
                           A  1055    ;  241	}
00000310                   A  1056    _8_L_70:
                           A  1057    .line 241
00000310 0001              A  1058    	UNLINK	
00000312 FFFC              A  1059    	RET	
                           A  1060    
                           A  1061    
                           A  1062    ;**************************** _cli_process_command ***************************
                           A  1063    ;Name                         Addr/Register   Size   Type
                           A  1064    ;_uart_printf                        IMPORT  -----   function
                           A  1065    ;_cli_command_uart0                  STATIC  -----   function
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  22


PC     Object              I  Line    Source cli.src
                           A  1066    ;_cli_command_timer                  STATIC  -----   function
                           A  1067    ;_cli_command_port                   STATIC  -----   function
                           A  1068    ;_cli_command_switch                 STATIC  -----   function
                           A  1069    ;_cli_command_hex                    STATIC  -----   function
                           A  1070    ;_cli_command_set                    STATIC  -----   function
                           A  1071    ;_cli_command_display                STATIC  -----   function
                           A  1072    ;_cli_command_echo                   STATIC  -----   function
                           A  1073    ;_cli_command_question               STATIC  -----   function
                           A  1074    ;_cli_command_info                   STATIC  -----   function
                           A  1075    ;_strcmp                             IMPORT  -----   function
                           A  1076    ;_isgraph                            IMPORT  -----   function
                           A  1077    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1078    ;args                                 R14-4      2   variable
                           A  1079    ;command                              R14-2      2   parameter
                           A  1080    
                           A  1081    
                           A  1082    ; Aggregate Stack Size: -4 (words)
                           A  1083    
                           A  1084    
                           A  1085    .endfunc "cli_process_command",241,"_cli_process_command"
                           A  1086    	SEGMENT ROM_TEXT
000000BC                   A  1087    L__53:
000000BC 0A                A  1088    	DB	10
000000BD 41766169          A  1089    	DB	"Available Commands:"
000000C1 6C61626C 
000000C5 6520436F 
000000C9 6D6D616E 64733A 
000000D0 0A0A00            A  1090    	DB	10,10,0
000000D3                   A  1091    L__54:
000000D3 6563686F          A  1092    	DB	"echo [\"text\"]"
000000D7 205B2274 
000000DB 65787422 5D 
000000E0 0A00              A  1093    	DB	10,0
000000E2                   A  1094    L__55:
000000E2 202D4563          A  1095    	DB	" -Echos text back to the serial port."
000000E6 686F7320 
000000EA 74657874 
000000EE 20626163 
000000F2 6B20746F 
000000F6 20746865 
000000FA 20736572 
000000FE 69616C20 
00000102 706F7274 2E 
00000107 0A00              A  1096    	DB	10,0
00000109                   A  1097    L__56:
00000109 64697370          A  1098    	DB	"display [\"text\"]"
0000010D 6C617920 
00000111 5B227465 
00000115 7874225D 
00000119 0A00              A  1099    	DB	10,0
0000011B                   A  1100    L__57:
0000011B 202D4469          A  1101    	DB	" -Display text on the LEDs."
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  23


PC     Object              I  Line    Source cli.src
0000011F 73706C61 
00000123 79207465 
00000127 7874206F 
0000012B 6E207468 
0000012F 65204C45 44732E 
00000136 0A00              A  1102    	DB	10,0
00000138                   A  1103    L__58:
00000138 73657420          A  1104    	DB	"set prompt [\"text\"]"
0000013C 70726F6D 
00000140 7074205B 
00000144 22746578 74225D 
0000014B 0A00              A  1105    	DB	10,0
0000014D                   A  1106    L__59:
0000014D 202D5365          A  1107    	DB	" -Set the CLI prompt to text."
00000151 74207468 
00000155 6520434C 
00000159 49207072 
0000015D 6F6D7074 
00000161 20746F20 
00000165 74657874 2E 
0000016A 0A00              A  1108    	DB	10,0
0000016C                   A  1109    L__60:
0000016C 68657820          A  1110    	DB	"hex [decimal number]"
00000170 5B646563 
00000174 696D616C 
00000178 206E756D 
0000017C 6265725D 
00000180 0A00              A  1111    	DB	10,0
00000182                   A  1112    L__61:
00000182 202D4469          A  1113    	DB	" -Display a decimal number in hex on the LEDs."
00000186 73706C61 
0000018A 79206120 
0000018E 64656369 
00000192 6D616C20 
00000196 6E756D62 
0000019A 65722069 
0000019E 6E206865 
000001A2 78206F6E 
000001A6 20746865 
000001AA 204C4544 732E 
000001B0 0A00              A  1114    	DB	10,0
000001B2                   A  1115    L__62:
000001B2 73776974          A  1116    	DB	"switch [0-2] [\"text\"]"
000001B6 6368205B 
000001BA 302D325D 
000001BE 205B2274 
000001C2 65787422 5D 
000001C7 0A00              A  1117    	DB	10,0
000001C9                   A  1118    L__63:
000001C9 202D4173          A  1119    	DB	" -Assigns the text macro to a button."
000001CD 7369676E 
000001D1 73207468 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  24


PC     Object              I  Line    Source cli.src
000001D5 65207465 
000001D9 7874206D 
000001DD 6163726F 
000001E1 20746F20 
000001E5 61206275 
000001E9 74746F6E 2E 
000001EE 0A00              A  1120    	DB	10,0
000001F0                   A  1121    L__64:
000001F0 706F7274          A  1122    	DB	"port [A-K]"
000001F4 205B412D 4B5D 
000001FA 0A00              A  1123    	DB	10,0
000001FC                   A  1124    L__65:
000001FC 202D4469          A  1125    	DB	" -Display the current state of the port."
00000200 73706C61 
00000204 79207468 
00000208 65206375 
0000020C 7272656E 
00000210 74207374 
00000214 61746520 
00000218 6F662074 
0000021C 68652070 
00000220 6F72742E 
00000224 0A00              A  1126    	DB	10,0
00000226                   A  1127    L__66:
00000226 74696D65          A  1128    	DB	"timer [0-2]"
0000022A 72205B30 2D325D 
00000231 0A00              A  1129    	DB	10,0
00000233                   A  1130    L__67:
00000233 202D4469          A  1131    	DB	" -Display the current state of the timer."
00000237 73706C61 
0000023B 79207468 
0000023F 65206375 
00000243 7272656E 
00000247 74207374 
0000024B 61746520 
0000024F 6F662074 
00000253 68652074 
00000257 696D6572 2E 
0000025C 0A00              A  1132    	DB	10,0
0000025E                   A  1133    L__68:
0000025E 75617274          A  1134    	DB	"uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
00000262 30205B73 
00000266 70656564 
0000026A 205B6261 
0000026E 75647261 
00000272 74655D5D 
00000276 205B7061 
0000027A 72697479 
0000027E 205B6576 
00000282 656E7C6F 
00000286 64647C6E 
0000028A 6F6E655D 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  25


PC     Object              I  Line    Source cli.src
0000028E 5D205B62 
00000292 69747320 
00000296 5B377C38 5D5D 
0000029C 0A00              A  1135    	DB	10,0
0000029E                   A  1136    L__69:
0000029E 202D5365          A  1137    	DB	" -Set the uart0 settings."
000002A2 74207468 
000002A6 65207561 
000002AA 72743020 
000002AE 73657474 
000002B2 696E6773 2E 
000002B7 0A00              A  1138    	DB	10,0
000002B9                   A  1139    L__70:
000002B9 696E666F          A  1140    	DB	"info"
000002BD 0A00              A  1141    	DB	10,0
000002BF                   A  1142    L__71:
000002BF 202D4469          A  1143    	DB	" -Displays various system information."
000002C3 73706C61 
000002C7 79732076 
000002CB 6172696F 
000002CF 75732073 
000002D3 79737465 
000002D7 6D20696E 
000002DB 666F726D 
000002DF 6174696F 6E2E 
000002E5 0A00              A  1144    	DB	10,0
000002E7                   A  1145    L__72:
000002E7 3F                A  1146    	DB	"?"
000002E8 0A00              A  1147    	DB	10,0
000002EA                   A  1148    L__73:
000002EA 202D4469          A  1149    	DB	" -Displays a menu of CLI commands."
000002EE 73706C61 
000002F2 79732061 
000002F6 206D656E 
000002FA 75206F66 
000002FE 20434C49 
00000302 20636F6D 
00000306 6D616E64 732E 
0000030C 0A00              A  1150    	DB	10,0
                           A  1151    	SEGMENT CODE
                           A  1152    ;  242	
                           A  1153    ;  243	static void cli_command_question(void)
                           A  1154    ;  244	{
00000314                   A  1155    _cli_command_question:
                           A  1156    .define "_cli_command_question"
                           A  1157    .value _cli_command_question
                           A  1158    .class 3
                           A  1159    .type 65
                           A  1160    .type 0
                           A  1161    .endef
                           A  1162    .begfunc "cli_command_question",244,"_cli_command_question"
00000314 0800              A  1163    	LINK	#0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  26


PC     Object              I  Line    Source cli.src
                           A  1164    ;  245		uart_printf("\nAvailable Commands:\n\n");
                           A  1165    .line 245
00000316 098F 00BC         A  1166    	PUSH.W	#L__53
0000031A F1 FFFE71         A  1167    	CALL	_uart_printf
0000031E 8F02              A  1168    	ADD	R15,#2
                           A  1169    ;  246	
                           A  1170    ;  247		uart_printf("echo [\"text\"]\n");
                           A  1171    .line 247
00000320 098F 00D3         A  1172    	PUSH.W	#L__54
00000324 F1 FFFE6C         A  1173    	CALL	_uart_printf
00000328 8F02              A  1174    	ADD	R15,#2
                           A  1175    ;  248		uart_printf(" -Echos text back to the serial port.\n");
                           A  1176    .line 248
0000032A 098F 00E2         A  1177    	PUSH.W	#L__55
0000032E F1 FFFE67         A  1178    	CALL	_uart_printf
00000332 8F02              A  1179    	ADD	R15,#2
                           A  1180    ;  249	
                           A  1181    ;  250		uart_printf("display [\"text\"]\n");
                           A  1182    .line 250
00000334 098F 0109         A  1183    	PUSH.W	#L__56
00000338 F1 FFFE62         A  1184    	CALL	_uart_printf
0000033C 8F02              A  1185    	ADD	R15,#2
                           A  1186    ;  251		uart_printf(" -Display text on the LEDs.\n");
                           A  1187    .line 251
0000033E 098F 011B         A  1188    	PUSH.W	#L__57
00000342 F1 FFFE5D         A  1189    	CALL	_uart_printf
00000346 8F02              A  1190    	ADD	R15,#2
                           A  1191    ;  252	
                           A  1192    ;  253		uart_printf("set prompt [\"text\"]\n");
                           A  1193    .line 253
00000348 098F 0138         A  1194    	PUSH.W	#L__58
0000034C F1 FFFE58         A  1195    	CALL	_uart_printf
00000350 8F02              A  1196    	ADD	R15,#2
                           A  1197    ;  254		uart_printf(" -Set the CLI prompt to text.\n");
                           A  1198    .line 254
00000352 098F 014D         A  1199    	PUSH.W	#L__59
00000356 F1 FFFE53         A  1200    	CALL	_uart_printf
0000035A 8F02              A  1201    	ADD	R15,#2
                           A  1202    ;  255	
                           A  1203    ;  256		uart_printf("hex [decimal number]\n");
                           A  1204    .line 256
0000035C 098F 016C         A  1205    	PUSH.W	#L__60
00000360 F1 FFFE4E         A  1206    	CALL	_uart_printf
00000364 8F02              A  1207    	ADD	R15,#2
                           A  1208    ;  257		uart_printf(" -Display a decimal number in hex on the LEDs.\n");
                           A  1209    .line 257
00000366 098F 0182         A  1210    	PUSH.W	#L__61
0000036A F1 FFFE49         A  1211    	CALL	_uart_printf
0000036E 8F02              A  1212    	ADD	R15,#2
                           A  1213    ;  258	
                           A  1214    ;  259		uart_printf("switch [0-2] [\"text\"]\n");
                           A  1215    .line 259
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  27


PC     Object              I  Line    Source cli.src
00000370 098F 01B2         A  1216    	PUSH.W	#L__62
00000374 F1 FFFE44         A  1217    	CALL	_uart_printf
00000378 8F02              A  1218    	ADD	R15,#2
                           A  1219    ;  260		uart_printf(" -Assigns the text macro to a button.\n");
                           A  1220    .line 260
0000037A 098F 01C9         A  1221    	PUSH.W	#L__63
0000037E F1 FFFE3F         A  1222    	CALL	_uart_printf
00000382 8F02              A  1223    	ADD	R15,#2
                           A  1224    ;  261	
                           A  1225    ;  262		uart_printf("port [A-K]\n");
                           A  1226    .line 262
00000384 098F 01F0         A  1227    	PUSH.W	#L__64
00000388 F1 FFFE3A         A  1228    	CALL	_uart_printf
0000038C 8F02              A  1229    	ADD	R15,#2
                           A  1230    ;  263		uart_printf(" -Display the current state of the port.\n");
                           A  1231    .line 263
0000038E 098F 01FC         A  1232    	PUSH.W	#L__65
00000392 F1 FFFE35         A  1233    	CALL	_uart_printf
00000396 8F02              A  1234    	ADD	R15,#2
                           A  1235    ;  264	
                           A  1236    ;  265		uart_printf("timer [0-2]\n");
                           A  1237    .line 265
00000398 098F 0226         A  1238    	PUSH.W	#L__66
0000039C F1 FFFE30         A  1239    	CALL	_uart_printf
000003A0 8F02              A  1240    	ADD	R15,#2
                           A  1241    ;  266		uart_printf(" -Display the current state of the timer.\n");
                           A  1242    .line 266
000003A2 098F 0233         A  1243    	PUSH.W	#L__67
000003A6 F1 FFFE2B         A  1244    	CALL	_uart_printf
000003AA 8F02              A  1245    	ADD	R15,#2
                           A  1246    ;  267	
                           A  1247    ;  268		uart_printf("uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]\n");
                           A  1248    .line 268
000003AC 098F 025E         A  1249    	PUSH.W	#L__68
000003B0 F1 FFFE26         A  1250    	CALL	_uart_printf
000003B4 8F02              A  1251    	ADD	R15,#2
                           A  1252    ;  269		uart_printf(" -Set the uart0 settings.\n");
                           A  1253    .line 269
000003B6 098F 029E         A  1254    	PUSH.W	#L__69
000003BA F1 FFFE21         A  1255    	CALL	_uart_printf
000003BE 8F02              A  1256    	ADD	R15,#2
                           A  1257    ;  270	
                           A  1258    ;  271		uart_printf("info\n");
                           A  1259    .line 271
000003C0 098F 02B9         A  1260    	PUSH.W	#L__70
000003C4 F1 FFFE1C         A  1261    	CALL	_uart_printf
000003C8 8F02              A  1262    	ADD	R15,#2
                           A  1263    ;  272		uart_printf(" -Displays various system information.\n");
                           A  1264    .line 272
000003CA 098F 02BF         A  1265    	PUSH.W	#L__71
000003CE F1 FFFE17         A  1266    	CALL	_uart_printf
000003D2 8F02              A  1267    	ADD	R15,#2
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  28


PC     Object              I  Line    Source cli.src
                           A  1268    ;  273	
                           A  1269    ;  274		uart_printf("?\n");
                           A  1270    .line 274
000003D4 098F 02E7         A  1271    	PUSH.W	#L__72
000003D8 F1 FFFE12         A  1272    	CALL	_uart_printf
000003DC 8F02              A  1273    	ADD	R15,#2
                           A  1274    ;  275		uart_printf(" -Displays a menu of CLI commands.\n");
                           A  1275    .line 275
000003DE 098F 02EA         A  1276    	PUSH.W	#L__73
000003E2 F1 FFFE0D         A  1277    	CALL	_uart_printf
000003E6 8F02              A  1278    	ADD	R15,#2
                           A  1279    ;  276	}
                           A  1280    .line 276
000003E8 0001              A  1281    	UNLINK	
000003EA FFFC              A  1282    	RET	
                           A  1283    
                           A  1284    
                           A  1285    ;**************************** _cli_command_question ***************************
                           A  1286    ;Name                         Addr/Register   Size   Type
                           A  1287    ;_uart_printf                        IMPORT  -----   function
                           A  1288    
                           A  1289    
                           A  1290    ; Aggregate Stack Size: 0 (words)
                           A  1291    
                           A  1292    
                           A  1293    .endfunc "cli_command_question",276,"_cli_command_question"
                           A  1294    ;  277	
                           A  1295    ;  278	static void cli_command_info(void)
                           A  1296    ;  279	{
000003EC                   A  1297    _cli_command_info:
                           A  1298    .define "_cli_command_info"
                           A  1299    .value _cli_command_info
                           A  1300    .class 3
                           A  1301    .type 65
                           A  1302    .type 0
                           A  1303    .endef
                           A  1304    .begfunc "cli_command_info",279,"_cli_command_info"
000003EC 0800              A  1305    	LINK	#0
                           A  1306    ;  280		info_display();
                           A  1307    .line 280
000003EE F1 FFFE07         A  1308    	CALL	_info_display
                           A  1309    ;  281	}
                           A  1310    .line 281
000003F2 0001              A  1311    	UNLINK	
000003F4 FFFC              A  1312    	RET	
                           A  1313    
                           A  1314    
                           A  1315    ;**************************** _cli_command_info ***************************
                           A  1316    ;Name                         Addr/Register   Size   Type
                           A  1317    ;_info_display                       IMPORT  -----   function
                           A  1318    
                           A  1319    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  29


PC     Object              I  Line    Source cli.src
                           A  1320    ; Aggregate Stack Size: 0 (words)
                           A  1321    
                           A  1322    
                           A  1323    .endfunc "cli_command_info",281,"_cli_command_info"
                           A  1324    	SEGMENT ROM_TEXT
0000030E                   A  1325    L__77:
0000030E 496E636F          A  1326    	DB	"Incorrect format, echo [\"text\"]"
00000312 72726563 
00000316 7420666F 
0000031A 726D6174 
0000031E 2C206563 
00000322 686F205B 
00000326 22746578 74225D 
0000032D 0A00              A  1327    	DB	10,0
0000032F                   A  1328    L__78:
0000032F 2573              A  1329    	DB	"%s"
00000331 0A00              A  1330    	DB	10,0
                           A  1331    	SEGMENT CODE
                           A  1332    ;  282	
                           A  1333    ;  283	static void cli_command_echo(char *args)
                           A  1334    ;  284	{
000003F6                   A  1335    _cli_command_echo:
                           A  1336    .define "_cli_command_echo"
                           A  1337    .value _cli_command_echo
                           A  1338    .class 3
                           A  1339    .type 65
                           A  1340    .type 0
                           A  1341    .endef
                           A  1342    .begfunc "cli_command_echo",284,"_cli_command_echo"
000003F6 0804              A  1343    	LINK	#4
                           A  1344    .line 284
000003F8 57E1              A  1345    	LD.W	-2(R14),R1
                           A  1346    .define "args"
                           A  1347    .class 9
                           A  1348    .value -2
                           A  1349    .type 140
                           A  1350    .type 0
                           A  1351    .endef
                           A  1352    .define "token"
                           A  1353    .class 1
                           A  1354    .value -4
                           A  1355    .type 140
                           A  1356    .type 0
                           A  1357    .endef
                           A  1358    ;  285		char *token;
                           A  1359    ;  286	
                           A  1360    ;  287		cli_strip_spaces(&args);
                           A  1361    .line 287
000003FA 4FE1              A  1362    	LEA	R1,-2(R14)
000003FC DED7              A  1363    	CALL	_cli_strip_spaces
                           A  1364    ;  288	
                           A  1365    ;  289		token = args;
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  30


PC     Object              I  Line    Source cli.src
                           A  1366    .line 289
000003FE 6FE0              A  1367    	LD.SW	R0,-2(R14)
00000400 57C0              A  1368    	LD.W	-4(R14),R0
                           A  1369    ;  290		if(cli_strip_quotes(&args)) {
                           A  1370    .line 290
00000402 4FE1              A  1371    	LEA	R1,-2(R14)
00000404 DE7C              A  1372    	CALL	_cli_strip_quotes
00000406 9000              A  1373    	CP	R0,#0
00000408 E6 06             A  1374    	JP	EQ,_11_L_74
                           A  1375    ;  291			uart_printf("Incorrect format, echo [\"text\"]\n");
                           A  1376    .line 291
0000040A 098F 030E         A  1377    	PUSH.W	#L__77
0000040E F1 FFFDF7         A  1378    	CALL	_uart_printf
00000412 8F02              A  1379    	ADD	R15,#2
                           A  1380    ;  292			return;
                           A  1381    .line 292
00000414 C009              A  1382    	JP	_11_L_75
                           A  1383    ;  293		}
00000416                   A  1384    _11_L_74:
                           A  1385    .line 293
                           A  1386    ;  294	
                           A  1387    ;  295		uart_printf("%s\n", ++token);
                           A  1388    .line 295
00000416 ADEE 7FFC         A  1389    	INC.W	-4(R14)
0000041A 6FC0              A  1390    	LD.SW	R0,-4(R14)
0000041C 160F              A  1391    	PUSH.W	R0
0000041E 098F 032F         A  1392    	PUSH.W	#L__78
00000422 F1 FFFDED         A  1393    	CALL	_uart_printf
00000426 8F04              A  1394    	ADD	R15,#4
                           A  1395    ;  296	}
00000428                   A  1396    _11_L_75:
                           A  1397    .line 296
00000428 0001              A  1398    	UNLINK	
0000042A FFFC              A  1399    	RET	
                           A  1400    
                           A  1401    
                           A  1402    ;**************************** _cli_command_echo ***************************
                           A  1403    ;Name                         Addr/Register   Size   Type
                           A  1404    ;_uart_printf                        IMPORT  -----   function
                           A  1405    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1406    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1407    ;token                                R14-4      2   variable
                           A  1408    ;args                                 R14-2      2   parameter
                           A  1409    
                           A  1410    
                           A  1411    ; Aggregate Stack Size: -4 (words)
                           A  1412    
                           A  1413    
                           A  1414    .endfunc "cli_command_echo",296,"_cli_command_echo"
                           A  1415    	SEGMENT ROM_TEXT
00000333                   A  1416    L__81:
00000333 496E636F          A  1417    	DB	"Incorrect format, display [\"text\"]"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  31


PC     Object              I  Line    Source cli.src
00000337 72726563 
0000033B 7420666F 
0000033F 726D6174 
00000343 2C206469 
00000347 73706C61 
0000034B 79205B22 
0000034F 74657874 225D 
00000355 0A00              A  1418    	DB	10,0
                           A  1419    	SEGMENT CODE
                           A  1420    ;  297	
                           A  1421    ;  298	static void cli_command_display(char *args)
                           A  1422    ;  299	{
0000042C                   A  1423    _cli_command_display:
                           A  1424    .define "_cli_command_display"
                           A  1425    .value _cli_command_display
                           A  1426    .class 3
                           A  1427    .type 65
                           A  1428    .type 0
                           A  1429    .endef
                           A  1430    .begfunc "cli_command_display",299,"_cli_command_display"
0000042C 0804              A  1431    	LINK	#4
                           A  1432    .line 299
0000042E 57E1              A  1433    	LD.W	-2(R14),R1
                           A  1434    .define "args"
                           A  1435    .class 9
                           A  1436    .value -2
                           A  1437    .type 140
                           A  1438    .type 0
                           A  1439    .endef
                           A  1440    .define "token"
                           A  1441    .class 1
                           A  1442    .value -4
                           A  1443    .type 140
                           A  1444    .type 0
                           A  1445    .endef
                           A  1446    ;  300		char *token;
                           A  1447    ;  301	
                           A  1448    ;  302		cli_strip_spaces(&args);
                           A  1449    .line 302
00000430 4FE1              A  1450    	LEA	R1,-2(R14)
00000432 DEBC              A  1451    	CALL	_cli_strip_spaces
                           A  1452    ;  303	
                           A  1453    ;  304		token = args;
                           A  1454    .line 304
00000434 6FE0              A  1455    	LD.SW	R0,-2(R14)
00000436 57C0              A  1456    	LD.W	-4(R14),R0
                           A  1457    ;  305		if(cli_strip_quotes(&args)) {
                           A  1458    .line 305
00000438 4FE1              A  1459    	LEA	R1,-2(R14)
0000043A DE61              A  1460    	CALL	_cli_strip_quotes
0000043C 9000              A  1461    	CP	R0,#0
0000043E E6 06             A  1462    	JP	EQ,_12_L_77
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  32


PC     Object              I  Line    Source cli.src
                           A  1463    ;  306			uart_printf("Incorrect format, display [\"text\"]\n");
                           A  1464    .line 306
00000440 098F 0333         A  1465    	PUSH.W	#L__81
00000444 F1 FFFDDC         A  1466    	CALL	_uart_printf
00000448 8F02              A  1467    	ADD	R15,#2
                           A  1468    ;  307			return;
                           A  1469    .line 307
0000044A C005              A  1470    	JP	_12_L_78
                           A  1471    ;  308		}
0000044C                   A  1472    _12_L_77:
                           A  1473    .line 308
                           A  1474    ;  309	
                           A  1475    ;  310		led_display_text(++token);
                           A  1476    .line 310
0000044C ADEE 7FFC         A  1477    	INC.W	-4(R14)
00000450 6FC1              A  1478    	LD.SW	R1,-4(R14)
00000452 F1 FFFDD5         A  1479    	CALL	_led_display_text
                           A  1480    ;  311	}
00000456                   A  1481    _12_L_78:
                           A  1482    .line 311
00000456 0001              A  1483    	UNLINK	
00000458 FFFC              A  1484    	RET	
                           A  1485    
                           A  1486    
                           A  1487    ;**************************** _cli_command_display ***************************
                           A  1488    ;Name                         Addr/Register   Size   Type
                           A  1489    ;_led_display_text                   IMPORT  -----   function
                           A  1490    ;_uart_printf                        IMPORT  -----   function
                           A  1491    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1492    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1493    ;token                                R14-4      2   variable
                           A  1494    ;args                                 R14-2      2   parameter
                           A  1495    
                           A  1496    
                           A  1497    ; Aggregate Stack Size: -4 (words)
                           A  1498    
                           A  1499    
                           A  1500    .endfunc "cli_command_display",311,"_cli_command_display"
                           A  1501    	SEGMENT ROM_TEXT
00000357                   A  1502    L__84:
00000357 3120496E          A  1503    	DB	"1 Incorrect format, hex [decimal number]"
0000035B 636F7272 
0000035F 65637420 
00000363 666F726D 
00000367 61742C20 
0000036B 68657820 
0000036F 5B646563 
00000373 696D616C 
00000377 206E756D 
0000037B 6265725D 
0000037F 0A00              A  1504    	DB	10,0
                           A  1505    	SEGMENT CODE
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  33


PC     Object              I  Line    Source cli.src
                           A  1506    ;  312	
                           A  1507    ;  313	static void cli_command_hex(char *args)
                           A  1508    ;  314	{
0000045A                   A  1509    _cli_command_hex:
                           A  1510    .define "_cli_command_hex"
                           A  1511    .value _cli_command_hex
                           A  1512    .class 3
                           A  1513    .type 65
                           A  1514    .type 0
                           A  1515    .endef
                           A  1516    .begfunc "cli_command_hex",314,"_cli_command_hex"
0000045A 0808              A  1517    	LINK	#8
                           A  1518    .line 314
0000045C 57E1              A  1519    	LD.W	-2(R14),R1
                           A  1520    .define "args"
                           A  1521    .class 9
                           A  1522    .value -2
                           A  1523    .type 140
                           A  1524    .type 0
                           A  1525    .endef
                           A  1526    .define "token"
                           A  1527    .class 1
                           A  1528    .value -4
                           A  1529    .type 140
                           A  1530    .type 0
                           A  1531    .endef
                           A  1532    .define "value"
                           A  1533    .class 1
                           A  1534    .value -8
                           A  1535    .type 5
                           A  1536    .type 0
                           A  1537    .endef
                           A  1538    ;  315		char *token;
                           A  1539    ;  316		int value;
                           A  1540    ;  317	
                           A  1541    ;  318		cli_strip_spaces(&args);
                           A  1542    .line 318
0000045E 4FE1              A  1543    	LEA	R1,-2(R14)
00000460 DEA5              A  1544    	CALL	_cli_strip_spaces
                           A  1545    ;  319	
                           A  1546    ;  320		token = args;
                           A  1547    .line 320
00000462 6FE0              A  1548    	LD.SW	R0,-2(R14)
00000464 57C0              A  1549    	LD.W	-4(R14),R0
                           A  1550    ;  321		if(cli_strip_decimal_number(&args)) {
                           A  1551    .line 321
00000466 4FE1              A  1552    	LEA	R1,-2(R14)
00000468 DE84              A  1553    	CALL	_cli_strip_decimal_number
0000046A 9000              A  1554    	CP	R0,#0
0000046C E6 06             A  1555    	JP	EQ,_13_L_80
                           A  1556    ;  322			uart_printf("1 Incorrect format, hex [decimal number]\n");
                           A  1557    .line 322
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  34


PC     Object              I  Line    Source cli.src
0000046E 098F 0357         A  1558    	PUSH.W	#L__84
00000472 F1 FFFDC5         A  1559    	CALL	_uart_printf
00000476 8F02              A  1560    	ADD	R15,#2
                           A  1561    ;  323			return;
                           A  1562    .line 323
00000478 C007              A  1563    	JP	_13_L_81
                           A  1564    ;  324		}
0000047A                   A  1565    _13_L_80:
                           A  1566    .line 324
                           A  1567    ;  325	
                           A  1568    ;  326		value = atoi(token);
                           A  1569    .line 326
0000047A 6FC1              A  1570    	LD.SW	R1,-4(R14)
0000047C F1 FFFDC0         A  1571    	CALL	_atoi
00000480 5B80              A  1572    	LD	-8(R14),R0
                           A  1573    ;  327		led_display_int_hex(value);
                           A  1574    .line 327
00000482 5F81              A  1575    	LD	R1,-8(R14)
00000484 F1 FFFDBC         A  1576    	CALL	_led_display_int_hex
                           A  1577    ;  328	}
00000488                   A  1578    _13_L_81:
                           A  1579    .line 328
00000488 0001              A  1580    	UNLINK	
0000048A FFFC              A  1581    	RET	
                           A  1582    
                           A  1583    
                           A  1584    ;**************************** _cli_command_hex ***************************
                           A  1585    ;Name                         Addr/Register   Size   Type
                           A  1586    ;_led_display_int_hex                IMPORT  -----   function
                           A  1587    ;_atoi                               IMPORT  -----   function
                           A  1588    ;_uart_printf                        IMPORT  -----   function
                           A  1589    ;_cli_strip_decimal_number           IMPORT  -----   function
                           A  1590    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1591    ;value                                R14-8      4   variable
                           A  1592    ;token                                R14-4      2   variable
                           A  1593    ;args                                 R14-2      2   parameter
                           A  1594    
                           A  1595    
                           A  1596    ; Aggregate Stack Size: -8 (words)
                           A  1597    
                           A  1598    
                           A  1599    .endfunc "cli_command_hex",328,"_cli_command_hex"
                           A  1600    	SEGMENT ROM_TEXT
00000381                   A  1601    L__87:
00000381 3120496E          A  1602    	DB	"1 Incorrect format, set prompt [\"text\"]"
00000385 636F7272 
00000389 65637420 
0000038D 666F726D 
00000391 61742C20 
00000395 73657420 
00000399 70726F6D 
0000039D 7074205B 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  35


PC     Object              I  Line    Source cli.src
000003A1 22746578 74225D 
000003A8 0A00              A  1603    	DB	10,0
000003AA                   A  1604    L__88:
000003AA 70726F6D 7074     A  1605    	DB	"prompt"
000003B0 00                A  1606    	DB	0
000003B1                   A  1607    L__91:
000003B1 3220496E          A  1608    	DB	"2 Incorrect format, set prompt [\"text\"]"
000003B5 636F7272 
000003B9 65637420 
000003BD 666F726D 
000003C1 61742C20 
000003C5 73657420 
000003C9 70726F6D 
000003CD 7074205B 
000003D1 22746578 74225D 
000003D8 0A00              A  1609    	DB	10,0
000003DA                   A  1610    L__92:
000003DA 3320496E          A  1611    	DB	"3 Incorrect format, set prompt [\"text\"]"
000003DE 636F7272 
000003E2 65637420 
000003E6 666F726D 
000003EA 61742C20 
000003EE 73657420 
000003F2 70726F6D 
000003F6 7074205B 
000003FA 22746578 74225D 
00000401 0A00              A  1612    	DB	10,0
                           A  1613    	SEGMENT CODE
                           A  1614    ;  329	
                           A  1615    ;  330	static void cli_command_set(char *args)
                           A  1616    ;  331	{
0000048C                   A  1617    _cli_command_set:
                           A  1618    .define "_cli_command_set"
                           A  1619    .value _cli_command_set
                           A  1620    .class 3
                           A  1621    .type 65
                           A  1622    .type 0
                           A  1623    .endef
                           A  1624    .begfunc "cli_command_set",331,"_cli_command_set"
0000048C 0804              A  1625    	LINK	#4
                           A  1626    .line 331
0000048E 57E1              A  1627    	LD.W	-2(R14),R1
                           A  1628    .define "args"
                           A  1629    .class 9
                           A  1630    .value -2
                           A  1631    .type 140
                           A  1632    .type 0
                           A  1633    .endef
                           A  1634    .define "token"
                           A  1635    .class 1
                           A  1636    .value -4
                           A  1637    .type 140
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  36


PC     Object              I  Line    Source cli.src
                           A  1638    .type 0
                           A  1639    .endef
                           A  1640    ;  332		char *token;
                           A  1641    ;  333	
                           A  1642    ;  334		cli_strip_spaces(&args);
                           A  1643    .line 334
00000490 4FE1              A  1644    	LEA	R1,-2(R14)
00000492 DE8C              A  1645    	CALL	_cli_strip_spaces
                           A  1646    ;  335	
                           A  1647    ;  336		token = args;
                           A  1648    .line 336
00000494 6FE0              A  1649    	LD.SW	R0,-2(R14)
00000496 57C0              A  1650    	LD.W	-4(R14),R0
                           A  1651    ;  337		if(cli_strip_word(&args)) {
                           A  1652    .line 337
00000498 4FE1              A  1653    	LEA	R1,-2(R14)
0000049A DE50              A  1654    	CALL	_cli_strip_word
0000049C 9000              A  1655    	CP	R0,#0
0000049E E6 06             A  1656    	JP	EQ,_14_L_87
                           A  1657    ;  338			uart_printf("1 Incorrect format, set prompt [\"text\"]\n");
                           A  1658    .line 338
000004A0 098F 0381         A  1659    	PUSH.W	#L__87
000004A4 F1 FFFDAC         A  1660    	CALL	_uart_printf
000004A8 8F02              A  1661    	ADD	R15,#2
                           A  1662    ;  339			return;
                           A  1663    .line 339
000004AA C021              A  1664    	JP	_14_L_88
                           A  1665    ;  340		}
000004AC                   A  1666    _14_L_87:
                           A  1667    .line 340
                           A  1668    ;  341	
                           A  1669    ;  342		if(strcmp(token, "prompt") == 0) {
                           A  1670    .line 342
000004AC 6FC1              A  1671    	LD.SW	R1,-4(R14)
000004AE 4502 03AA         A  1672    	LD	R2,#L__88
000004B2 F1 FFFDA5         A  1673    	CALL	_strcmp
000004B6 9000              A  1674    	CP	R0,#0
000004B8 EE 15             A  1675    	JP	NE,_14_L_86
                           A  1676    ;  343			++args;
                           A  1677    .line 343
000004BA ADEE 7FFE         A  1678    	INC.W	-2(R14)
                           A  1679    ;  344			cli_strip_spaces(&args);
                           A  1680    .line 344
000004BE 4FE1              A  1681    	LEA	R1,-2(R14)
000004C0 DE75              A  1682    	CALL	_cli_strip_spaces
                           A  1683    ;  345	
                           A  1684    ;  346			token = args;
                           A  1685    .line 346
000004C2 6FE0              A  1686    	LD.SW	R0,-2(R14)
000004C4 57C0              A  1687    	LD.W	-4(R14),R0
                           A  1688    ;  347			if(cli_strip_quotes(&args)) {
                           A  1689    .line 347
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  37


PC     Object              I  Line    Source cli.src
000004C6 4FE1              A  1690    	LEA	R1,-2(R14)
000004C8 DE1A              A  1691    	CALL	_cli_strip_quotes
000004CA 9000              A  1692    	CP	R0,#0
000004CC E6 06             A  1693    	JP	EQ,_14_L_84
                           A  1694    ;  348				uart_printf("2 Incorrect format, set prompt [\"text\"]\n");
                           A  1695    .line 348
000004CE 098F 03B1         A  1696    	PUSH.W	#L__91
000004D2 F1 FFFD95         A  1697    	CALL	_uart_printf
000004D6 8F02              A  1698    	ADD	R15,#2
                           A  1699    ;  349				return;
                           A  1700    .line 349
000004D8 C00A              A  1701    	JP	_14_L_88
                           A  1702    ;  350			}
000004DA                   A  1703    _14_L_84:
                           A  1704    .line 350
                           A  1705    ;  351	
                           A  1706    ;  352			cli_set_prompt(++token);
                           A  1707    .line 352
000004DA ADEE 7FFC         A  1708    	INC.W	-4(R14)
000004DE 6FC1              A  1709    	LD.SW	R1,-4(R14)
000004E0 DE78              A  1710    	CALL	_cli_set_prompt
                           A  1711    ;  353		}
                           A  1712    ;  354		else {
                           A  1713    .line 354
000004E2 C005              A  1714    	JP	_14_L_88
000004E4                   A  1715    _14_L_86:
                           A  1716    ;  355			uart_printf("3 Incorrect format, set prompt [\"text\"]\n");
                           A  1717    .line 355
000004E4 098F 03DA         A  1718    	PUSH.W	#L__92
000004E8 F1 FFFD8A         A  1719    	CALL	_uart_printf
000004EC 8F02              A  1720    	ADD	R15,#2
                           A  1721    ;  356			return;
                           A  1722    ;  357		}
                           A  1723    ;  358	}
000004EE                   A  1724    _14_L_88:
                           A  1725    .line 358
000004EE 0001              A  1726    	UNLINK	
000004F0 FFFC              A  1727    	RET	
                           A  1728    
                           A  1729    
                           A  1730    ;**************************** _cli_command_set ***************************
                           A  1731    ;Name                         Addr/Register   Size   Type
                           A  1732    ;_cli_set_prompt                     IMPORT  -----   function
                           A  1733    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1734    ;_strcmp                             IMPORT  -----   function
                           A  1735    ;_uart_printf                        IMPORT  -----   function
                           A  1736    ;_cli_strip_word                     IMPORT  -----   function
                           A  1737    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1738    ;token                                R14-4      2   variable
                           A  1739    ;args                                 R14-2      2   parameter
                           A  1740    
                           A  1741    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  38


PC     Object              I  Line    Source cli.src
                           A  1742    ; Aggregate Stack Size: -4 (words)
                           A  1743    
                           A  1744    
                           A  1745    .endfunc "cli_command_set",358,"_cli_command_set"
                           A  1746    	SEGMENT ROM_TEXT
00000403                   A  1747    L__95:
00000403 3120496E          A  1748    	DB	"1 Incorrect format, switch [n] [\"text\"]"
00000407 636F7272 
0000040B 65637420 
0000040F 666F726D 
00000413 61742C20 
00000417 73776974 
0000041B 6368205B 
0000041F 6E5D205B 
00000423 22746578 74225D 
0000042A 0A00              A  1749    	DB	10,0
0000042C                   A  1750    L__98:
0000042C 3220496E          A  1751    	DB	"2 Incorrect format, switch [n] [\"text\"]"
00000430 636F7272 
00000434 65637420 
00000438 666F726D 
0000043C 61742C20 
00000440 73776974 
00000444 6368205B 
00000448 6E5D205B 
0000044C 22746578 74225D 
00000453 0A00              A  1752    	DB	10,0
00000455                   A  1753    L__100:
00000455 3320496E          A  1754    	DB	"3 Incorrect format, switch [n] [\"text\"]"
00000459 636F7272 
0000045D 65637420 
00000461 666F726D 
00000465 61742C20 
00000469 73776974 
0000046D 6368205B 
00000471 6E5D205B 
00000475 22746578 74225D 
0000047C 0A00              A  1755    	DB	10,0
                           A  1756    	SEGMENT CODE
                           A  1757    ;  359	
                           A  1758    ;  360	static void cli_command_switch(char *args)
                           A  1759    ;  361	{
000004F2                   A  1760    _cli_command_switch:
                           A  1761    .define "_cli_command_switch"
                           A  1762    .value _cli_command_switch
                           A  1763    .class 3
                           A  1764    .type 65
                           A  1765    .type 0
                           A  1766    .endef
                           A  1767    .begfunc "cli_command_switch",361,"_cli_command_switch"
000004F2 0808              A  1768    	LINK	#8
                           A  1769    .line 361
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  39


PC     Object              I  Line    Source cli.src
000004F4 57E1              A  1770    	LD.W	-2(R14),R1
                           A  1771    .define "args"
                           A  1772    .class 9
                           A  1773    .value -2
                           A  1774    .type 140
                           A  1775    .type 0
                           A  1776    .endef
                           A  1777    .define "token"
                           A  1778    .class 1
                           A  1779    .value -4
                           A  1780    .type 140
                           A  1781    .type 0
                           A  1782    .endef
                           A  1783    .define "value"
                           A  1784    .class 1
                           A  1785    .value -8
                           A  1786    .type 5
                           A  1787    .type 0
                           A  1788    .endef
                           A  1789    ;  362		char *token;
                           A  1790    ;  363		int value;
                           A  1791    ;  364	
                           A  1792    ;  365		cli_strip_spaces(&args);
                           A  1793    .line 365
000004F6 4FE1              A  1794    	LEA	R1,-2(R14)
000004F8 DE59              A  1795    	CALL	_cli_strip_spaces
                           A  1796    ;  366	
                           A  1797    ;  367		token = args;
                           A  1798    .line 367
000004FA 6FE0              A  1799    	LD.SW	R0,-2(R14)
000004FC 57C0              A  1800    	LD.W	-4(R14),R0
                           A  1801    ;  368		if(cli_strip_decimal_number(&args)) {
                           A  1802    .line 368
000004FE 4FE1              A  1803    	LEA	R1,-2(R14)
00000500 DE38              A  1804    	CALL	_cli_strip_decimal_number
00000502 9000              A  1805    	CP	R0,#0
00000504 E6 06             A  1806    	JP	EQ,_15_L_90
                           A  1807    ;  369			uart_printf("1 Incorrect format, switch [n] [\"text\"]\n");
                           A  1808    .line 369
00000506 098F 0403         A  1809    	PUSH.W	#L__95
0000050A F1 FFFD79         A  1810    	CALL	_uart_printf
0000050E 8F02              A  1811    	ADD	R15,#2
                           A  1812    ;  370			return;
                           A  1813    .line 370
00000510 C027              A  1814    	JP	_15_L_96
                           A  1815    ;  371		}
00000512                   A  1816    _15_L_90:
                           A  1817    .line 371
                           A  1818    ;  372		value = atoi(token);
                           A  1819    .line 372
00000512 6FC1              A  1820    	LD.SW	R1,-4(R14)
00000514 F1 FFFD74         A  1821    	CALL	_atoi
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  40


PC     Object              I  Line    Source cli.src
00000518 5B80              A  1822    	LD	-8(R14),R0
                           A  1823    ;  373	
                           A  1824    ;  374		if(value < 0 || value >= MACRO_MAX) {
                           A  1825    .line 374
0000051A ADDE BFF8         A  1826    	CPZ	-8(R14)
0000051E E1 04             A  1827    	JP	LT,_15_L_92
00000520 3003              A  1828    	LD	R0,#3
00000522 7D0E FFF8         A  1829    	CP	-8(R14),R0
00000526 E1 06             A  1830    	JP	LT,_15_L_93
00000528                   A  1831    _15_L_92:
                           A  1832    ;  375			uart_printf("2 Incorrect format, switch [n] [\"text\"]\n");
                           A  1833    .line 375
00000528 098F 042C         A  1834    	PUSH.W	#L__98
0000052C F1 FFFD68         A  1835    	CALL	_uart_printf
00000530 8F02              A  1836    	ADD	R15,#2
                           A  1837    ;  376			return;
                           A  1838    .line 376
00000532 C016              A  1839    	JP	_15_L_96
                           A  1840    ;  377		}
00000534                   A  1841    _15_L_93:
                           A  1842    .line 377
                           A  1843    ;  378	
                           A  1844    ;  379		++args;
                           A  1845    .line 379
00000534 ADEE 7FFE         A  1846    	INC.W	-2(R14)
                           A  1847    ;  380		cli_strip_spaces(&args);
                           A  1848    .line 380
00000538 4FE1              A  1849    	LEA	R1,-2(R14)
0000053A DE38              A  1850    	CALL	_cli_strip_spaces
                           A  1851    ;  381	
                           A  1852    ;  382		token = args;
                           A  1853    .line 382
0000053C 6FE0              A  1854    	LD.SW	R0,-2(R14)
0000053E 57C0              A  1855    	LD.W	-4(R14),R0
                           A  1856    ;  383		if(cli_strip_quotes(&args)) {
                           A  1857    .line 383
00000540 4FE1              A  1858    	LEA	R1,-2(R14)
00000542 DDDD              A  1859    	CALL	_cli_strip_quotes
00000544 9000              A  1860    	CP	R0,#0
00000546 E6 06             A  1861    	JP	EQ,_15_L_95
                           A  1862    ;  384			uart_printf("3 Incorrect format, switch [n] [\"text\"]\n");
                           A  1863    .line 384
00000548 098F 0455         A  1864    	PUSH.W	#L__100
0000054C F1 FFFD58         A  1865    	CALL	_uart_printf
00000550 8F02              A  1866    	ADD	R15,#2
                           A  1867    ;  385			return;
                           A  1868    .line 385
00000552 C006              A  1869    	JP	_15_L_96
                           A  1870    ;  386		}
00000554                   A  1871    _15_L_95:
                           A  1872    .line 386
                           A  1873    ;  387	
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  41


PC     Object              I  Line    Source cli.src
                           A  1874    ;  388		macro_set(value, ++token);
                           A  1875    .line 388
00000554 ADEE 7FFC         A  1876    	INC.W	-4(R14)
00000558 5F81              A  1877    	LD	R1,-8(R14)
0000055A 6FC2              A  1878    	LD.SW	R2,-4(R14)
0000055C F1 FFFD50         A  1879    	CALL	_macro_set
                           A  1880    ;  389	}
00000560                   A  1881    _15_L_96:
                           A  1882    .line 389
00000560 0001              A  1883    	UNLINK	
00000562 FFFC              A  1884    	RET	
                           A  1885    
                           A  1886    
                           A  1887    ;**************************** _cli_command_switch ***************************
                           A  1888    ;Name                         Addr/Register   Size   Type
                           A  1889    ;_macro_set                          IMPORT  -----   function
                           A  1890    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1891    ;_atoi                               IMPORT  -----   function
                           A  1892    ;_uart_printf                        IMPORT  -----   function
                           A  1893    ;_cli_strip_decimal_number           IMPORT  -----   function
                           A  1894    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1895    ;value                                R14-8      4   variable
                           A  1896    ;token                                R14-4      2   variable
                           A  1897    ;args                                 R14-2      2   parameter
                           A  1898    
                           A  1899    
                           A  1900    ; Aggregate Stack Size: -8 (words)
                           A  1901    
                           A  1902    
                           A  1903    .endfunc "cli_command_switch",389,"_cli_command_switch"
                           A  1904    ;  390	
                           A  1905    ;  391	static void cli_command_port(char *args)
                           A  1906    ;  392	{
00000564                   A  1907    _cli_command_port:
                           A  1908    .define "_cli_command_port"
                           A  1909    .value _cli_command_port
                           A  1910    .class 3
                           A  1911    .type 65
                           A  1912    .type 0
                           A  1913    .endef
                           A  1914    .begfunc "cli_command_port",392,"_cli_command_port"
                           A  1915    .line 392
                           A  1916    .define "args"
                           A  1917    .class 17
                           A  1918    .reg 2
                           A  1919    .type 140
                           A  1920    .type 0
                           A  1921    .endef
00000564 0800              A  1922    	LINK	#0
                           A  1923    ;  393		
                           A  1924    ;  394	}
                           A  1925    .line 394
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  42


PC     Object              I  Line    Source cli.src
00000566 0001              A  1926    	UNLINK	
00000568 FFFC              A  1927    	RET	
                           A  1928    
                           A  1929    
                           A  1930    ;**************************** _cli_command_port ***************************
                           A  1931    ;Name                         Addr/Register   Size   Type
                           A  1932    ;args                                    R1      2   parameter
                           A  1933    
                           A  1934    
                           A  1935    ; Aggregate Stack Size: 0 (words)
                           A  1936    
                           A  1937    
                           A  1938    .endfunc "cli_command_port",394,"_cli_command_port"
                           A  1939    ;  395	
                           A  1940    ;  396	static void cli_command_timer(char *args)
                           A  1941    ;  397	{
0000056A                   A  1942    _cli_command_timer:
                           A  1943    .define "_cli_command_timer"
                           A  1944    .value _cli_command_timer
                           A  1945    .class 3
                           A  1946    .type 65
                           A  1947    .type 0
                           A  1948    .endef
                           A  1949    .begfunc "cli_command_timer",397,"_cli_command_timer"
                           A  1950    .line 397
                           A  1951    .define "args"
                           A  1952    .class 17
                           A  1953    .reg 2
                           A  1954    .type 140
                           A  1955    .type 0
                           A  1956    .endef
0000056A 0800              A  1957    	LINK	#0
                           A  1958    ;  398		
                           A  1959    ;  399	}
                           A  1960    .line 399
0000056C 0001              A  1961    	UNLINK	
0000056E FFFC              A  1962    	RET	
                           A  1963    
                           A  1964    
                           A  1965    ;**************************** _cli_command_timer ***************************
                           A  1966    ;Name                         Addr/Register   Size   Type
                           A  1967    ;args                                    R1      2   parameter
                           A  1968    
                           A  1969    
                           A  1970    ; Aggregate Stack Size: 0 (words)
                           A  1971    
                           A  1972    
                           A  1973    .endfunc "cli_command_timer",399,"_cli_command_timer"
                           A  1974    ;  400	
                           A  1975    ;  401	static void cli_command_uart0(char *args)
                           A  1976    ;  402	{
00000570                   A  1977    _cli_command_uart0:
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  43


PC     Object              I  Line    Source cli.src
                           A  1978    .define "_cli_command_uart0"
                           A  1979    .value _cli_command_uart0
                           A  1980    .class 3
                           A  1981    .type 65
                           A  1982    .type 0
                           A  1983    .endef
                           A  1984    .begfunc "cli_command_uart0",402,"_cli_command_uart0"
                           A  1985    .line 402
                           A  1986    .define "args"
                           A  1987    .class 17
                           A  1988    .reg 2
                           A  1989    .type 140
                           A  1990    .type 0
                           A  1991    .endef
00000570 0800              A  1992    	LINK	#0
                           A  1993    ;  403		
                           A  1994    .line 404
00000572 0001              A  1995    	UNLINK	
00000574 FFFC              A  1996    	RET	
                           A  1997    
                           A  1998    
                           A  1999    ;**************************** _cli_command_uart0 ***************************
                           A  2000    ;Name                         Addr/Register   Size   Type
                           A  2001    ;args                                    R1      2   parameter
                           A  2002    
                           A  2003    
                           A  2004    ; Aggregate Stack Size: 0 (words)
                           A  2005    
                           A  2006    
                           A  2007    .endfunc "cli_command_uart0",404,"_cli_command_uart0"
                           A  2008    	XREF _isspace:EROM
                           A  2009    	XREF _isgraph:EROM
                           A  2010    	XREF _isdigit:EROM
                           A  2011    	XREF _isalpha:EROM
                           A  2012    	XREF _memset:EROM
                           A  2013    	XREF _memcpy:EROM
                           A  2014    	XREF _strlen:EROM
                           A  2015    	XREF _strchr:EROM
                           A  2016    	XREF _strcmp:EROM
                           A  2017    	XREF _strcpy:EROM
                           A  2018    	XREF _atoi:EROM
                           A  2019    	XREF _macro_set:EROM
                           A  2020    	XREF _info_display:EROM
                           A  2021    	XREF _init_info:EROM
                           A  2022    	XREF _uart_printf:EROM
                           A  2023    	XREF _uart_getchar:EROM
                           A  2024    	XREF _init_uart:EROM
                           A  2025    	XREF _led_display_int_hex:EROM
                           A  2026    	XREF _led_display_text:EROM
                           A  2027    	XREF _init_leds:EROM
                           A  2028    	XDEF _cli_set_prompt
                           A  2029    	XDEF _cli_strip_spaces
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     04:58:46     page:  44


PC     Object              I  Line    Source cli.src
                           A  2030    	XDEF _cli_strip_decimal_number
                           A  2031    	XDEF _cli_strip_word
                           A  2032    	XDEF _cli_strip_quotes
                           A  2033    	XDEF _cli_loop
                           A  2034    	XDEF _init_cli
                           A  2035    	END


Errors: 0
Warnings: 0
Lines Assembled: 2036
