ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   1


PC     Object              I  Line    Source 
                           A     1    ; ZiLOG ZNEO ANSI C Compiler Release 1.11
                           A     2    ; -nolocalcse -optsize -model=S -nomodsect -noregvar
                           A     3    ; -reduceopt -debug -peephole -const=ROM -alias -fastcall
                           A     4    	FILE	"..\CLI.C"
                           A     5    .debug "C"
                           A     6    	SEGMENT NEAR_BSS
00000000                   A     7    _cli_prompt:
00000000                   A     8    	DS	256
                           A     9    .define "cli_prompt"
                           A    10    .alias "_cli_prompt"
                           A    11    .class 147
                           A    12    .value _cli_prompt
                           A    13    .dim 256
                           A    14    .type 108
                           A    15    .type 0
                           A    16    .endef
                           A    17    	SEGMENT CODE
                           A    18    .begrec "NONAME0",8
                           A    19    .define "quot"
                           A    20    .value 0
                           A    21    .class 8
                           A    22    .type 5
                           A    23    .type 0
                           A    24    .endef
                           A    25    .define "rem"
                           A    26    .value 4
                           A    27    .class 8
                           A    28    .type 5
                           A    29    .type 0
                           A    30    .endef
                           A    31    .endrec "NONAME0"
                           A    32    .begrec "NONAME1",8
                           A    33    .define "quot"
                           A    34    .value 0
                           A    35    .class 8
                           A    36    .type 5
                           A    37    .type 0
                           A    38    .endef
                           A    39    .define "rem"
                           A    40    .value 4
                           A    41    .class 8
                           A    42    .type 5
                           A    43    .type 0
                           A    44    .endef
                           A    45    .endrec "NONAME1"
                           A    46    	SEGMENT ROM_TEXT
00000000                   A    47    L__0:
00000000 3E20              A    48    	DB	"> "
00000002 00                A    49    	DB	0
                           A    50    ;    1	#include "cli.h"
                           A    51    ;    2	#include "LED.h"
                           A    52    ;    3	#include "uart.h"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   2


PC     Object              I  Line    Source cli.src
                           A    53    ;    4	#include "info.h"
                           A    54    ;    5	#include "macro.h"
                           A    55    ;    6	#include "ports.h"
                           A    56    ;    7	#include "timer.h"
                           A    57    ;    8	
                           A    58    ;    9	#include <stdlib.h>
                           A    59    ;   10	#include <string.h>
                           A    60    ;   11	#include <ctype.h>
                           A    61    ;   12	
                           A    62    ;   13	#define CLI_PROMPT      "> "
                           A    63    ;   14	#define CLI_BUFFER_SIZE 256
                           A    64    ;   15	
                           A    65    ;   16	#define ASCII_DEL 0x7F
                           A    66    ;   17	
                           A    67    ;   18	static char cli_prompt[CLI_BUFFER_SIZE];
                           A    68    	SEGMENT CODE
                           A    69    ;   19	
                           A    70    ;   20	static void cli_process_command(const char *command);
                           A    71    ;   21	
                           A    72    ;   22	/*
                           A    73    ;   23		Zero arguement CLI functions.
                           A    74    ;   24	 */
                           A    75    ;   25	static void cli_command_info(void);
                           A    76    ;   26	static void cli_command_question(void);
                           A    77    ;   27	
                           A    78    ;   28	/*
                           A    79    ;   29		Variable arguement CLI functions.
                           A    80    ;   30	
                           A    81    ;   31		Multiple arguements encoded as strings, separated by
                           A    82    ;   32		whitespace and quotes.
                           A    83    ;   33	 */
                           A    84    ;   34	static void cli_command_echo(char *args);
                           A    85    ;   35	static void cli_command_display(char *args);
                           A    86    ;   36	static void cli_command_hex(char *args);
                           A    87    ;   37	static void cli_command_set(char *args);
                           A    88    ;   38	static void cli_command_switch(char *args);
                           A    89    ;   39	static void cli_command_port(char *args);
                           A    90    ;   40	static void cli_command_timer(char *args);
                           A    91    ;   41	static void cli_command_uart0(char *args);
                           A    92    ;   42	
                           A    93    ;   43	void init_cli(void)
                           A    94    ;   44	{
00000000                   A    95    _init_cli:
                           A    96    .define "_init_cli"
                           A    97    .value _init_cli
                           A    98    .class 2
                           A    99    .type 65
                           A   100    .type 0
                           A   101    .endef
                           A   102    .begfunc "init_cli",44,"_init_cli"
00000000 0800              A   103    	LINK	#0
                           A   104    ;   45		//initialize the hardware
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   3


PC     Object              I  Line    Source cli.src
                           A   105    ;   46		init_leds();
                           A   106    .line 46
00000002 F1 FFFFFD         A   107    	CALL	_init_leds
                           A   108    ;   47		init_uart();
                           A   109    .line 47
00000006 F1 FFFFFB         A   110    	CALL	_init_uart
                           A   111    ;   48		init_info();
                           A   112    .line 48
0000000A F1 FFFFF9         A   113    	CALL	_init_info
                           A   114    ;   49	
                           A   115    ;   50		cli_set_prompt(CLI_PROMPT);
                           A   116    .line 50
0000000E 4501 0000         A   117    	LD	R1,#L__0
00000012 D0DC              A   118    	CALL	_cli_set_prompt
                           A   119    ;   51	}
                           A   120    .line 51
00000014 0001              A   121    	UNLINK	
00000016 FFFC              A   122    	RET	
                           A   123    
                           A   124    
                           A   125    ;**************************** _init_cli ***************************
                           A   126    ;Name                         Addr/Register   Size   Type
                           A   127    ;_cli_set_prompt                     IMPORT  -----   function
                           A   128    ;_init_info                          IMPORT  -----   function
                           A   129    ;_init_uart                          IMPORT  -----   function
                           A   130    ;_init_leds                          IMPORT  -----   function
                           A   131    
                           A   132    
                           A   133    ; Aggregate Stack Size: 0 (words)
                           A   134    
                           A   135    
                           A   136    .endfunc "init_cli",51,"_init_cli"
                           A   137    	SEGMENT ROM_TEXT
00000003                   A   138    L__2:
00000003 2573              A   139    	DB	"%s"
00000005 00                A   140    	DB	0
00000006                   A   141    L__6:
00000006 2573              A   142    	DB	"%s"
00000008 00                A   143    	DB	0
00000009                   A   144    L__12:
00000009 0A                A   145    	DB	10
0000000A 2D2D4572          A   146    	DB	"--Error--, command is too long. Command ignored."
0000000E 726F722D 
00000012 2D2C2063 
00000016 6F6D6D61 
0000001A 6E642069 
0000001E 7320746F 
00000022 6F206C6F 
00000026 6E672E20 
0000002A 436F6D6D 
0000002E 616E6420 
00000032 69676E6F 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   4


PC     Object              I  Line    Source cli.src
00000036 7265642E 
0000003A 0A00              A   147    	DB	10,0
0000003C                   A   148    L__13:
0000003C 2573              A   149    	DB	"%s"
0000003E 00                A   150    	DB	0
                           A   151    	SEGMENT CODE
                           A   152    ;   52	
                           A   153    ;   53	void cli_loop(void)
                           A   154    ;   54	{
00000018                   A   155    _cli_loop:
                           A   156    .define "_cli_loop"
                           A   157    .value _cli_loop
                           A   158    .class 2
                           A   159    .type 65
                           A   160    .type 0
                           A   161    .endef
                           A   162    .begfunc "cli_loop",54,"_cli_loop"
                           A   163    .line 54
                           A   164    .define "c"
                           A   165    .class 1
                           A   166    .value -1
                           A   167    .type 12
                           A   168    .type 0
                           A   169    .endef
                           A   170    .define "buffer_pos"
                           A   171    .class 1
                           A   172    .value -5
                           A   173    .type 5
                           A   174    .type 0
                           A   175    .endef
                           A   176    .define "buffer"
                           A   177    .class 1
                           A   178    .value -261
                           A   179    .dim 256
                           A   180    .type 108
                           A   181    .type 0
                           A   182    .endef
00000018 0800              A   183    	LINK	#0
0000001A AA1F 0105         A   184    	SUB	R15,#261
                           A   185    ;   55		char buffer[CLI_BUFFER_SIZE];
                           A   186    ;   56		char c;
                           A   187    ;   57	
                           A   188    ;   58		int buffer_pos;
                           A   189    ;   59	
                           A   190    ;   60		uart_printf("%s", cli_prompt);
                           A   191    .line 60
0000001E 098F 0000         A   192    	PUSH.W	#_cli_prompt
00000022 098F 0003         A   193    	PUSH.W	#L__2
00000026 F1 FFFFEB         A   194    	CALL	_uart_printf
0000002A 8F04              A   195    	ADD	R15,#4
                           A   196    ;   61	
                           A   197    ;   62		buffer_pos = 0;
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   5


PC     Object              I  Line    Source cli.src
                           A   198    .line 62
0000002C ADCE BFFB         A   199    	CLR	-5(R14)
                           A   200    ;   63	
                           A   201    ;   64		while(1) {
00000030                   A   202    _2_L_18:
                           A   203    .line 64
                           A   204    ;   65			//wait until a character is available
                           A   205    ;   66			while((c = uart_getchar()) == 0) { ; }
00000030                   A   206    _2_L_1:
                           A   207    .line 66
00000030 F1 FFFFE6         A   208    	CALL	_uart_getchar
00000034 53F0              A   209    	LD.B	-1(R14),R0
00000036 ADDE 3FFF         A   210    	CPZ.B	-1(R14)
0000003A E6 FA             A   211    	JP	EQ,_2_L_1
                           A   212    ;   67	
                           A   213    ;   68			//new line means end of the command
                           A   214    ;   69			if(c == '\n') {
                           A   215    .line 69
0000003C 300A              A   216    	LD	R0,#10
0000003E 7D0E BFFF         A   217    	CP.B	-1(R14),R0
00000042 EE 1C             A   218    	JP	NE,_2_L_14
                           A   219    ;   70				//only process a command if something was entered
                           A   220    ;   71				if(buffer_pos) {
                           A   221    .line 71
00000044 ADDE BFFB         A   222    	CPZ	-5(R14)
00000048 E6 08             A   223    	JP	EQ,_2_L_4
                           A   224    ;   72					buffer[buffer_pos] = '\0';
                           A   225    .line 72
0000004A 6FD0              A   226    	LD.SW	R0,-3(R14)
0000004C 48E1 BEFB         A   227    	LEA	R1,-261(R14)
00000050 A010              A   228    	ADD	R0,R1
00000052 AC00              A   229    	CLR.B	(R0)
                           A   230    ;   73					cli_process_command(buffer);
                           A   231    .line 73
00000054 48E1 BEFB         A   232    	LEA	R1,-261(R14)
00000058 D0D4              A   233    	CALL	_cli_process_command
                           A   234    ;   74				}
0000005A                   A   235    _2_L_4:
                           A   236    .line 74
                           A   237    ;   75	
                           A   238    ;   76				buffer_pos = 0;
                           A   239    .line 76
0000005A ADCE BFFB         A   240    	CLR	-5(R14)
                           A   241    ;   77				memset(buffer, 0, CLI_BUFFER_SIZE);
                           A   242    .line 77
0000005E 48E1 BEFB         A   243    	LEA	R1,-261(R14)
00000062 3200              A   244    	LD	R2,#0
00000064 4503 0100         A   245    	LD	R3,#256
00000068 F1 FFFFCA         A   246    	CALL	_memset
                           A   247    ;   78	
                           A   248    ;   79				uart_printf("%s", cli_prompt);
                           A   249    .line 79
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   6


PC     Object              I  Line    Source cli.src
0000006C 098F 0000         A   250    	PUSH.W	#_cli_prompt
00000070 098F 0006         A   251    	PUSH.W	#L__6
00000074 F1 FFFFC4         A   252    	CALL	_uart_printf
00000078 8F04              A   253    	ADD	R15,#4
                           A   254    ;   80			}
                           A   255    ;   81			//there is more to come...
                           A   256    ;   82			else if(isgraph(c) || isspace(c)) {
                           A   257    .line 82
0000007A C021              A   258    	JP	_2_L_17
0000007C                   A   259    _2_L_14:
0000007C 63F1              A   260    	LD.UB	R1,-1(R14)
0000007E F1 FFFFBF         A   261    	CALL	_isgraph
00000082 9000              A   262    	CP	R0,#0
00000084 EE 05             A   263    	JP	NE,_2_L_11
00000086 63F1              A   264    	LD.UB	R1,-1(R14)
00000088 F1 FFFFBA         A   265    	CALL	_isspace
0000008C 9000              A   266    	CP	R0,#0
0000008E E6 09             A   267    	JP	EQ,_2_L_12
00000090                   A   268    _2_L_11:
                           A   269    ;   83				buffer[buffer_pos++] = c;
                           A   270    .line 83
00000090 5FB0              A   271    	LD	R0,-5(R14)
00000092 48E1 BEFB         A   272    	LEA	R1,-261(R14)
00000096 A010              A   273    	ADD	R0,R1
00000098 6BF1              A   274    	LD.SB	R1,-1(R14)
0000009A 0E10              A   275    	LD.B	(R0),R1
0000009C ADEE BFFB         A   276    	INC	-5(R14)
                           A   277    ;   84			}
                           A   278    ;   85			//
                           A   279    ;   86			else if(c == ASCII_DEL) {
                           A   280    .line 86
000000A0 C00E              A   281    	JP	_2_L_17
000000A2                   A   282    _2_L_12:
000000A2 307F              A   283    	LD	R0,#127
000000A4 7D0E BFFF         A   284    	CP.B	-1(R14),R0
000000A8 EE C3             A   285    	JP	NE,_2_L_18
                           A   286    ;   87				if(buffer_pos) {
                           A   287    .line 87
000000AA ADDE BFFB         A   288    	CPZ	-5(R14)
000000AE E6 07             A   289    	JP	EQ,_2_L_17
                           A   290    ;   88					buffer_pos--;
                           A   291    .line 88
000000B0 ADFE BFFB         A   292    	DEC	-5(R14)
                           A   293    ;   89					buffer[buffer_pos] = '\0';
                           A   294    .line 89
000000B4 6FD0              A   295    	LD.SW	R0,-3(R14)
000000B6 48E1 BEFB         A   296    	LEA	R1,-261(R14)
000000BA A010              A   297    	ADD	R0,R1
000000BC AC00              A   298    	CLR.B	(R0)
                           A   299    ;   90				}
                           A   300    ;   91			}
                           A   301    ;   92			//ignore for now
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   7


PC     Object              I  Line    Source cli.src
                           A   302    ;   93			else {
                           A   303    .line 93
                           A   304    ;   94				continue;
                           A   305    ;   95			}
000000BE                   A   306    _2_L_17:
                           A   307    .line 95
                           A   308    ;   96	
                           A   309    ;   97			//is the command too long?
                           A   310    ;   98			if(buffer_pos >= CLI_BUFFER_SIZE) {
                           A   311    .line 98
000000BE 4500 0100         A   312    	LD	R0,#256
000000C2 7D0E FFFB         A   313    	CP	-5(R14),R0
000000C6 E1 B4             A   314    	JP	LT,_2_L_18
                           A   315    ;   99				uart_printf("\n--Error--, command is too long. Command ignored.\n");
                           A   316    .line 99
000000C8 098F 0009         A   317    	PUSH.W	#L__12
000000CC F1 FFFF98         A   318    	CALL	_uart_printf
000000D0 8F02              A   319    	ADD	R15,#2
                           A   320    ;  100				
                           A   321    ;  101				buffer_pos = 0;
                           A   322    .line 101
000000D2 ADCE BFFB         A   323    	CLR	-5(R14)
                           A   324    ;  102				memset(buffer, 0, CLI_BUFFER_SIZE);
                           A   325    .line 102
000000D6 48E1 BEFB         A   326    	LEA	R1,-261(R14)
000000DA 3200              A   327    	LD	R2,#0
000000DC 4503 0100         A   328    	LD	R3,#256
000000E0 F1 FFFF8E         A   329    	CALL	_memset
                           A   330    ;  103	
                           A   331    ;  104				uart_printf("%s", cli_prompt);
                           A   332    .line 104
000000E4 098F 0000         A   333    	PUSH.W	#_cli_prompt
000000E8 098F 003C         A   334    	PUSH.W	#L__13
000000EC F1 FFFF88         A   335    	CALL	_uart_printf
000000F0 8F04              A   336    	ADD	R15,#4
                           A   337    ;  105			}
                           A   338    ;  106		}
                           A   339    .line 106
000000F2 CF9E              A   340    	JP	_2_L_18
                           A   341    ;  107	}
                           A   342    .line 107
000000F4 0001              A   343    	UNLINK	
000000F6 FFFC              A   344    	RET	
                           A   345    
                           A   346    
                           A   347    ;**************************** _cli_loop ***************************
                           A   348    ;Name                         Addr/Register   Size   Type
                           A   349    ;_isspace                            IMPORT  -----   function
                           A   350    ;_isgraph                            IMPORT  -----   function
                           A   351    ;_memset                             IMPORT  -----   function
                           A   352    ;_cli_process_command                STATIC  -----   function
                           A   353    ;_uart_getchar                       IMPORT  -----   function
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   8


PC     Object              I  Line    Source cli.src
                           A   354    ;_cli_prompt                         STATIC    256   variable
                           A   355    ;_uart_printf                        IMPORT  -----   function
                           A   356    ;buffer                             R14-261    256   variable
                           A   357    ;buffer_pos                           R14-5      4   variable
                           A   358    ;c                                    R14-1      1   variable
                           A   359    
                           A   360    
                           A   361    ; Aggregate Stack Size: -261 (words)
                           A   362    
                           A   363    
                           A   364    .endfunc "cli_loop",107,"_cli_loop"
                           A   365    ;  108	
                           A   366    ;  109	int cli_strip_quotes(char **args)
                           A   367    ;  110	{
000000F8                   A   368    _cli_strip_quotes:
                           A   369    .define "_cli_strip_quotes"
                           A   370    .value _cli_strip_quotes
                           A   371    .class 2
                           A   372    .type 69
                           A   373    .type 0
                           A   374    .endef
                           A   375    .begfunc "cli_strip_quotes",110,"_cli_strip_quotes"
000000F8 0804              A   376    	LINK	#4
                           A   377    .line 110
000000FA 57E1              A   378    	LD.W	-2(R14),R1
                           A   379    .define "args"
                           A   380    .class 9
                           A   381    .value -2
                           A   382    .type 1164
                           A   383    .type 0
                           A   384    .endef
                           A   385    .define "c"
                           A   386    .class 1
                           A   387    .value -4
                           A   388    .type 140
                           A   389    .type 0
                           A   390    .endef
                           A   391    ;  111		char *c;
                           A   392    ;  112	
                           A   393    ;  113		c = *args;
                           A   394    .line 113
000000FC 6FE0              A   395    	LD.SW	R0,-2(R14)
000000FE 1E00              A   396    	LD.SW	R0,(R0)
00000100 57C0              A   397    	LD.W	-4(R14),R0
                           A   398    ;  114		if(*c != '"') {
                           A   399    .line 114
00000102 6FC0              A   400    	LD.SW	R0,-4(R14)
00000104 1800              A   401    	LD.UB	R0,(R0)
00000106 9022              A   402    	CP	R0,#34
00000108 E6 02             A   403    	JP	EQ,_3_L_22
                           A   404    ;  115			return 1;
                           A   405    .line 115
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:   9


PC     Object              I  Line    Source cli.src
0000010A 3001              A   406    	LD	R0,#1
0000010C C012              A   407    	JP	_3_L_25
                           A   408    ;  116		}
0000010E                   A   409    _3_L_22:
                           A   410    .line 116
                           A   411    ;  117		++c;
                           A   412    .line 117
0000010E ADEE 7FFC         A   413    	INC.W	-4(R14)
                           A   414    ;  118	
                           A   415    ;  119		c = strchr(c, '"');
                           A   416    .line 119
00000112 6FC1              A   417    	LD.SW	R1,-4(R14)
00000114 3222              A   418    	LD	R2,#34
00000116 F1 FFFF73         A   419    	CALL	_strchr
0000011A 57C0              A   420    	LD.W	-4(R14),R0
                           A   421    ;  120		if(c == NULL) {
                           A   422    .line 120
0000011C ADDE 7FFC         A   423    	CPZ.W	-4(R14)
00000120 EE 02             A   424    	JP	NE,_3_L_24
                           A   425    ;  121			return 1;
                           A   426    .line 121
00000122 3001              A   427    	LD	R0,#1
00000124 C006              A   428    	JP	_3_L_25
                           A   429    ;  122		}
00000126                   A   430    _3_L_24:
                           A   431    .line 122
                           A   432    ;  123		*c = '\0';
                           A   433    .line 123
00000126 6FC0              A   434    	LD.SW	R0,-4(R14)
00000128 AC00              A   435    	CLR.B	(R0)
                           A   436    ;  124	
                           A   437    ;  125		*args = c;
                           A   438    .line 125
0000012A 6FE0              A   439    	LD.SW	R0,-2(R14)
0000012C 6FC1              A   440    	LD.SW	R1,-4(R14)
0000012E 0F10              A   441    	LD.W	(R0),R1
                           A   442    ;  126	
                           A   443    ;  127		return 0;
                           A   444    .line 127
00000130 3000              A   445    	LD	R0,#0
                           A   446    ;  128	}
00000132                   A   447    _3_L_25:
                           A   448    .line 128
00000132 0001              A   449    	UNLINK	
00000134 FFFC              A   450    	RET	
                           A   451    
                           A   452    
                           A   453    ;**************************** _cli_strip_quotes ***************************
                           A   454    ;Name                         Addr/Register   Size   Type
                           A   455    ;_strchr                             IMPORT  -----   function
                           A   456    ;c                                    R14-4      2   variable
                           A   457    ;args                                 R14-2      2   parameter
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  10


PC     Object              I  Line    Source cli.src
                           A   458    
                           A   459    
                           A   460    ; Aggregate Stack Size: -4 (words)
                           A   461    
                           A   462    
                           A   463    .endfunc "cli_strip_quotes",128,"_cli_strip_quotes"
                           A   464    ;  129	
                           A   465    ;  130	int cli_strip_word(char **args) 
                           A   466    ;  131	{
00000136                   A   467    _cli_strip_word:
                           A   468    .define "_cli_strip_word"
                           A   469    .value _cli_strip_word
                           A   470    .class 2
                           A   471    .type 69
                           A   472    .type 0
                           A   473    .endef
                           A   474    .begfunc "cli_strip_word",131,"_cli_strip_word"
00000136 0804              A   475    	LINK	#4
                           A   476    .line 131
00000138 57E1              A   477    	LD.W	-2(R14),R1
                           A   478    .define "args"
                           A   479    .class 9
                           A   480    .value -2
                           A   481    .type 1164
                           A   482    .type 0
                           A   483    .endef
                           A   484    .define "c"
                           A   485    .class 1
                           A   486    .value -4
                           A   487    .type 140
                           A   488    .type 0
                           A   489    .endef
                           A   490    ;  132		char *c;
                           A   491    ;  133	
                           A   492    ;  134		c = *args;
                           A   493    .line 134
0000013A 6FE0              A   494    	LD.SW	R0,-2(R14)
0000013C 1E00              A   495    	LD.SW	R0,(R0)
0000013E 57C0              A   496    	LD.W	-4(R14),R0
                           A   497    ;  135		while(isalpha(*c)) {
00000140                   A   498    _4_L_26:
                           A   499    .line 135
00000140 6FC0              A   500    	LD.SW	R0,-4(R14)
00000142 1801              A   501    	LD.UB	R1,(R0)
00000144 F1 FFFF5C         A   502    	CALL	_isalpha
00000148 9000              A   503    	CP	R0,#0
0000014A E6 03             A   504    	JP	EQ,_4_L_29
                           A   505    ;  136			++c;
                           A   506    .line 136
0000014C ADEE 7FFC         A   507    	INC.W	-4(R14)
                           A   508    ;  137		}
                           A   509    .line 137
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  11


PC     Object              I  Line    Source cli.src
00000150 CFF7              A   510    	JP	_4_L_26
00000152                   A   511    _4_L_29:
                           A   512    ;  138	
                           A   513    ;  139		if(*c == '\0') {
                           A   514    .line 139
00000152 6FC0              A   515    	LD.SW	R0,-4(R14)
00000154 AC10              A   516    	CPZ.B	(R0)
00000156 EE 02             A   517    	JP	NE,_4_L_30
                           A   518    ;  140			return 1;
                           A   519    .line 140
00000158 3001              A   520    	LD	R0,#1
0000015A C006              A   521    	JP	_4_L_31
                           A   522    ;  141		}
0000015C                   A   523    _4_L_30:
                           A   524    .line 141
                           A   525    ;  142		*c = '\0';
                           A   526    .line 142
0000015C 6FC0              A   527    	LD.SW	R0,-4(R14)
0000015E AC00              A   528    	CLR.B	(R0)
                           A   529    ;  143	
                           A   530    ;  144		*args = c;
                           A   531    .line 144
00000160 6FE0              A   532    	LD.SW	R0,-2(R14)
00000162 6FC1              A   533    	LD.SW	R1,-4(R14)
00000164 0F10              A   534    	LD.W	(R0),R1
                           A   535    ;  145	
                           A   536    ;  146		return 0;
                           A   537    .line 146
00000166 3000              A   538    	LD	R0,#0
                           A   539    ;  147	}
00000168                   A   540    _4_L_31:
                           A   541    .line 147
00000168 0001              A   542    	UNLINK	
0000016A FFFC              A   543    	RET	
                           A   544    
                           A   545    
                           A   546    ;**************************** _cli_strip_word ***************************
                           A   547    ;Name                         Addr/Register   Size   Type
                           A   548    ;_isalpha                            IMPORT  -----   function
                           A   549    ;c                                    R14-4      2   variable
                           A   550    ;args                                 R14-2      2   parameter
                           A   551    
                           A   552    
                           A   553    ; Aggregate Stack Size: -4 (words)
                           A   554    
                           A   555    
                           A   556    .endfunc "cli_strip_word",147,"_cli_strip_word"
                           A   557    ;  148	
                           A   558    ;  149	int cli_strip_decimal_number(char **args)
                           A   559    ;  150	{
0000016C                   A   560    _cli_strip_decimal_number:
                           A   561    .define "_cli_strip_decimal_number"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  12


PC     Object              I  Line    Source cli.src
                           A   562    .value _cli_strip_decimal_number
                           A   563    .class 2
                           A   564    .type 69
                           A   565    .type 0
                           A   566    .endef
                           A   567    .begfunc "cli_strip_decimal_number",150,"_cli_strip_decimal_number"
0000016C 0804              A   568    	LINK	#4
                           A   569    .line 150
0000016E 57E1              A   570    	LD.W	-2(R14),R1
                           A   571    .define "args"
                           A   572    .class 9
                           A   573    .value -2
                           A   574    .type 1164
                           A   575    .type 0
                           A   576    .endef
                           A   577    .define "c"
                           A   578    .class 1
                           A   579    .value -4
                           A   580    .type 140
                           A   581    .type 0
                           A   582    .endef
                           A   583    ;  151		char *c;
                           A   584    ;  152	
                           A   585    ;  153		c = *args;
                           A   586    .line 153
00000170 6FE0              A   587    	LD.SW	R0,-2(R14)
00000172 1E00              A   588    	LD.SW	R0,(R0)
00000174 57C0              A   589    	LD.W	-4(R14),R0
                           A   590    ;  154		while(isdigit(*c)) {
00000176                   A   591    _5_L_32:
                           A   592    .line 154
00000176 6FC0              A   593    	LD.SW	R0,-4(R14)
00000178 1801              A   594    	LD.UB	R1,(R0)
0000017A F1 FFFF41         A   595    	CALL	_isdigit
0000017E 9000              A   596    	CP	R0,#0
00000180 E6 03             A   597    	JP	EQ,_5_L_34
                           A   598    ;  155			++c;
                           A   599    .line 155
00000182 ADEE 7FFC         A   600    	INC.W	-4(R14)
                           A   601    ;  156		}
                           A   602    .line 156
00000186 CFF7              A   603    	JP	_5_L_32
00000188                   A   604    _5_L_34:
                           A   605    ;  157		*c = '\0';
                           A   606    .line 157
00000188 6FC0              A   607    	LD.SW	R0,-4(R14)
0000018A AC00              A   608    	CLR.B	(R0)
                           A   609    ;  158	
                           A   610    ;  159		//is there a number at all
                           A   611    ;  160		if(*args == c) {
                           A   612    .line 160
0000018C 6FE0              A   613    	LD.SW	R0,-2(R14)
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  13


PC     Object              I  Line    Source cli.src
0000018E 6FC1              A   614    	LD.SW	R1,-4(R14)
00000190 7D10 C000         A   615    	CP.W	(R0),R1
00000194 EE 02             A   616    	JP	NE,_5_L_36
                           A   617    ;  161			return 1;
                           A   618    .line 161
00000196 3001              A   619    	LD	R0,#1
00000198 C004              A   620    	JP	_5_L_37
                           A   621    ;  162		}
0000019A                   A   622    _5_L_36:
                           A   623    .line 162
                           A   624    ;  163		*args = c;
                           A   625    .line 163
0000019A 6FE0              A   626    	LD.SW	R0,-2(R14)
0000019C 6FC1              A   627    	LD.SW	R1,-4(R14)
0000019E 0F10              A   628    	LD.W	(R0),R1
                           A   629    ;  164	
                           A   630    ;  165		return 0;
                           A   631    .line 165
000001A0 3000              A   632    	LD	R0,#0
                           A   633    ;  166	}
000001A2                   A   634    _5_L_37:
                           A   635    .line 166
000001A2 0001              A   636    	UNLINK	
000001A4 FFFC              A   637    	RET	
                           A   638    
                           A   639    
                           A   640    ;**************************** _cli_strip_decimal_number ***************************
                           A   641    ;Name                         Addr/Register   Size   Type
                           A   642    ;_isdigit                            IMPORT  -----   function
                           A   643    ;c                                    R14-4      2   variable
                           A   644    ;args                                 R14-2      2   parameter
                           A   645    
                           A   646    
                           A   647    ; Aggregate Stack Size: -4 (words)
                           A   648    
                           A   649    
                           A   650    .endfunc "cli_strip_decimal_number",166,"_cli_strip_decimal_number"
                           A   651    ;  167	
                           A   652    ;  168	void cli_strip_spaces(char **args)
                           A   653    ;  169	{
000001A6                   A   654    _cli_strip_spaces:
                           A   655    .define "_cli_strip_spaces"
                           A   656    .value _cli_strip_spaces
                           A   657    .class 2
                           A   658    .type 65
                           A   659    .type 0
                           A   660    .endef
                           A   661    .begfunc "cli_strip_spaces",169,"_cli_strip_spaces"
000001A6 0804              A   662    	LINK	#4
                           A   663    .line 169
000001A8 57E1              A   664    	LD.W	-2(R14),R1
                           A   665    .define "args"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  14


PC     Object              I  Line    Source cli.src
                           A   666    .class 9
                           A   667    .value -2
                           A   668    .type 1164
                           A   669    .type 0
                           A   670    .endef
                           A   671    .define "c"
                           A   672    .class 1
                           A   673    .value -4
                           A   674    .type 140
                           A   675    .type 0
                           A   676    .endef
                           A   677    ;  170		char *c;
                           A   678    ;  171	
                           A   679    ;  172		c = *args;
                           A   680    .line 172
000001AA 6FE0              A   681    	LD.SW	R0,-2(R14)
000001AC 1E00              A   682    	LD.SW	R0,(R0)
000001AE 57C0              A   683    	LD.W	-4(R14),R0
                           A   684    ;  173		while(isspace(*c)) {
000001B0                   A   685    _6_L_38:
                           A   686    .line 173
000001B0 6FC0              A   687    	LD.SW	R0,-4(R14)
000001B2 1801              A   688    	LD.UB	R1,(R0)
000001B4 F1 FFFF24         A   689    	CALL	_isspace
000001B8 9000              A   690    	CP	R0,#0
000001BA E6 03             A   691    	JP	EQ,_6_L_40
                           A   692    ;  174			++c;
                           A   693    .line 174
000001BC ADEE 7FFC         A   694    	INC.W	-4(R14)
                           A   695    ;  175		}
                           A   696    .line 175
000001C0 CFF7              A   697    	JP	_6_L_38
000001C2                   A   698    _6_L_40:
                           A   699    ;  176	
                           A   700    ;  177		*args = c;
                           A   701    .line 177
000001C2 6FE0              A   702    	LD.SW	R0,-2(R14)
000001C4 6FC1              A   703    	LD.SW	R1,-4(R14)
000001C6 0F10              A   704    	LD.W	(R0),R1
                           A   705    ;  178	}
                           A   706    .line 178
000001C8 0001              A   707    	UNLINK	
000001CA FFFC              A   708    	RET	
                           A   709    
                           A   710    
                           A   711    ;**************************** _cli_strip_spaces ***************************
                           A   712    ;Name                         Addr/Register   Size   Type
                           A   713    ;_isspace                            IMPORT  -----   function
                           A   714    ;c                                    R14-4      2   variable
                           A   715    ;args                                 R14-2      2   parameter
                           A   716    
                           A   717    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  15


PC     Object              I  Line    Source cli.src
                           A   718    ; Aggregate Stack Size: -4 (words)
                           A   719    
                           A   720    
                           A   721    .endfunc "cli_strip_spaces",178,"_cli_strip_spaces"
                           A   722    ;  179	
                           A   723    ;  180	void cli_set_prompt(const char *text)
                           A   724    ;  181	{
000001CC                   A   725    _cli_set_prompt:
                           A   726    .define "_cli_set_prompt"
                           A   727    .value _cli_set_prompt
                           A   728    .class 2
                           A   729    .type 65
                           A   730    .type 0
                           A   731    .endef
                           A   732    .begfunc "cli_set_prompt",181,"_cli_set_prompt"
000001CC 0806              A   733    	LINK	#6
                           A   734    .line 181
000001CE 57E1              A   735    	LD.W	-2(R14),R1
                           A   736    .define "text"
                           A   737    .class 9
                           A   738    .value -2
                           A   739    .type 140
                           A   740    .type 0
                           A   741    .endef
                           A   742    .define "prompt_len"
                           A   743    .class 1
                           A   744    .value -6
                           A   745    .type 15
                           A   746    .type 0
                           A   747    .endef
                           A   748    ;  182		size_t prompt_len;
                           A   749    ;  183		
                           A   750    ;  184		prompt_len = strlen(text) + 1;
                           A   751    .line 184
000001D0 6FE1              A   752    	LD.SW	R1,-2(R14)
000001D2 F1 FFFF15         A   753    	CALL	_strlen
000001D6 8001              A   754    	ADD	R0,#1
000001D8 5BA0              A   755    	LD	-6(R14),R0
                           A   756    ;  185		if(prompt_len >= CLI_BUFFER_SIZE) {
                           A   757    .line 185
000001DA 4500 0100         A   758    	LD	R0,#256
000001DE 7D0E FFFA         A   759    	CP	-6(R14),R0
000001E2 E7 01             A   760    	JP	C,_7_L_43
                           A   761    ;  186			prompt_len = CLI_BUFFER_SIZE;
                           A   762    .line 186
000001E4 5BA0              A   763    	LD	-6(R14),R0
                           A   764    ;  187		}
000001E6                   A   765    _7_L_43:
                           A   766    .line 187
                           A   767    ;  188		
                           A   768    ;  189		memcpy(cli_prompt, text, prompt_len);
                           A   769    .line 189
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  16


PC     Object              I  Line    Source cli.src
000001E6 4511 0000         A   770    	LD	R1,#_cli_prompt
000001EA 6FE2              A   771    	LD.SW	R2,-2(R14)
000001EC 5FA3              A   772    	LD	R3,-6(R14)
000001EE F1 FFFF07         A   773    	CALL	_memcpy
                           A   774    ;  190		cli_prompt[prompt_len-1] = '\0';
                           A   775    .line 190
000001F2 5FA0              A   776    	LD	R0,-6(R14)
000001F4 80FF              A   777    	ADD	R0,#-1
000001F6 4511 0000         A   778    	LD	R1,#_cli_prompt
000001FA A010              A   779    	ADD	R0,R1
000001FC AC00              A   780    	CLR.B	(R0)
                           A   781    ;  191	}
                           A   782    .line 191
000001FE 0001              A   783    	UNLINK	
00000200 FFFC              A   784    	RET	
                           A   785    
                           A   786    
                           A   787    ;**************************** _cli_set_prompt ***************************
                           A   788    ;Name                         Addr/Register   Size   Type
                           A   789    ;_cli_prompt                         STATIC    256   variable
                           A   790    ;_memcpy                             IMPORT  -----   function
                           A   791    ;_strlen                             IMPORT  -----   function
                           A   792    ;prompt_len                           R14-6      4   variable
                           A   793    ;text                                 R14-2      2   parameter
                           A   794    
                           A   795    
                           A   796    ; Aggregate Stack Size: -6 (words)
                           A   797    
                           A   798    
                           A   799    .endfunc "cli_set_prompt",191,"_cli_set_prompt"
                           A   800    	SEGMENT ROM_TEXT
0000003F                   A   801    L__31:
0000003F 696E666F          A   802    	DB	"info"
00000043 00                A   803    	DB	0
00000044                   A   804    L__33:
00000044 3F                A   805    	DB	"?"
00000045 00                A   806    	DB	0
00000046                   A   807    L__35:
00000046 6563686F          A   808    	DB	"echo"
0000004A 00                A   809    	DB	0
0000004B                   A   810    L__37:
0000004B 64697370 6C6179   A   811    	DB	"display"
00000052 00                A   812    	DB	0
00000053                   A   813    L__39:
00000053 736574            A   814    	DB	"set"
00000056 00                A   815    	DB	0
00000057                   A   816    L__41:
00000057 686578            A   817    	DB	"hex"
0000005A 00                A   818    	DB	0
0000005B                   A   819    L__43:
0000005B 73776974 6368     A   820    	DB	"switch"
00000061 00                A   821    	DB	0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  17


PC     Object              I  Line    Source cli.src
00000062                   A   822    L__45:
00000062 706F7274          A   823    	DB	"port"
00000066 00                A   824    	DB	0
00000067                   A   825    L__47:
00000067 74696D65 72       A   826    	DB	"timer"
0000006C 00                A   827    	DB	0
0000006D                   A   828    L__49:
0000006D 75617274 30       A   829    	DB	"uart0"
00000072 00                A   830    	DB	0
00000073                   A   831    L__51:
00000073 2D2D436F          A   832    	DB	"--Command:%s, not found. Enter \"?\" to see a list of available commands."
00000077 6D6D616E 
0000007B 643A2573 
0000007F 2C206E6F 
00000083 7420666F 
00000087 756E642E 
0000008B 20456E74 
0000008F 65722022 
00000093 3F222074 
00000097 6F207365 
0000009B 65206120 
0000009F 6C697374 
000000A3 206F6620 
000000A7 61766169 
000000AB 6C61626C 
000000AF 6520636F 
000000B3 6D6D616E 64732E 
000000BA 0A00              A   833    	DB	10,0
                           A   834    	SEGMENT CODE
                           A   835    ;  192	
                           A   836    ;  193	static void cli_process_command(char *command)
                           A   837    ;  194	{
00000202                   A   838    _cli_process_command:
                           A   839    .define "_cli_process_command"
                           A   840    .value _cli_process_command
                           A   841    .class 3
                           A   842    .type 65
                           A   843    .type 0
                           A   844    .endef
                           A   845    .begfunc "cli_process_command",194,"_cli_process_command"
00000202 0804              A   846    	LINK	#4
                           A   847    .line 194
00000204 57E1              A   848    	LD.W	-2(R14),R1
                           A   849    .define "command"
                           A   850    .class 9
                           A   851    .value -2
                           A   852    .type 140
                           A   853    .type 0
                           A   854    .endef
                           A   855    .define "args"
                           A   856    .class 1
                           A   857    .value -4
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  18


PC     Object              I  Line    Source cli.src
                           A   858    .type 140
                           A   859    .type 0
                           A   860    .endef
                           A   861    ;  195		char *args;
                           A   862    ;  196	
                           A   863    ;  197		//strip spaces and tabs
                           A   864    ;  198		cli_strip_spaces(&command);
                           A   865    .line 198
00000206 4FE1              A   866    	LEA	R1,-2(R14)
00000208 DFCE              A   867    	CALL	_cli_strip_spaces
                           A   868    ;  199	
                           A   869    ;  200		args = command;
                           A   870    .line 200
0000020A 6FE0              A   871    	LD.SW	R0,-2(R14)
0000020C 57C0              A   872    	LD.W	-4(R14),R0
                           A   873    ;  201		while(isgraph(*args) && *args != '\t') {	//bug with isgraph, returns true on \t and 
0000020E                   A   874    _8_L_46:
                           A   875    .line 201
0000020E 6FC0              A   876    	LD.SW	R0,-4(R14)
00000210 1801              A   877    	LD.UB	R1,(R0)
00000212 F1 FFFEF5         A   878    	CALL	_isgraph
00000216 9000              A   879    	CP	R0,#0
00000218 E6 07             A   880    	JP	EQ,_8_L_69
0000021A 6FC0              A   881    	LD.SW	R0,-4(R14)
0000021C 1800              A   882    	LD.UB	R0,(R0)
0000021E 9009              A   883    	CP	R0,#9
00000220 E6 03             A   884    	JP	EQ,_8_L_69
                           A   885    ;  202			++args;
                           A   886    .line 202
00000222 ADEE 7FFC         A   887    	INC.W	-4(R14)
                           A   888    ;  203		}
                           A   889    .line 203
00000226 CFF3              A   890    	JP	_8_L_46
00000228                   A   891    _8_L_69:
                           A   892    ;  204	
                           A   893    ;  205		if(args != command) {
                           A   894    .line 205
00000228 6FE0              A   895    	LD.SW	R0,-2(R14)
0000022A 7D0E DFFC         A   896    	CP.W	-4(R14),R0
0000022E E6 6D             A   897    	JP	EQ,_8_L_70
                           A   898    ;  206			*args = '\0';
                           A   899    .line 206
00000230 6FC0              A   900    	LD.SW	R0,-4(R14)
00000232 AC00              A   901    	CLR.B	(R0)
                           A   902    ;  207	
                           A   903    ;  208			++args;
                           A   904    .line 208
00000234 ADEE 7FFC         A   905    	INC.W	-4(R14)
                           A   906    ;  209			if(strcmp(command, "info") == 0) {
                           A   907    .line 209
00000238 6FE1              A   908    	LD.SW	R1,-2(R14)
0000023A 4502 003F         A   909    	LD	R2,#L__31
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  19


PC     Object              I  Line    Source cli.src
0000023E F1 FFFEDF         A   910    	CALL	_strcmp
00000242 9000              A   911    	CP	R0,#0
00000244 EE 02             A   912    	JP	NE,_8_L_67
                           A   913    ;  210				cli_command_info();
                           A   914    .line 210
00000246 D0CF              A   915    	CALL	_cli_command_info
                           A   916    ;  211			}
                           A   917    ;  212			else if(strcmp(command, "?") == 0) {
                           A   918    .line 212
00000248 C060              A   919    	JP	_8_L_70
0000024A                   A   920    _8_L_67:
0000024A 6FE1              A   921    	LD.SW	R1,-2(R14)
0000024C 4502 0044         A   922    	LD	R2,#L__33
00000250 F1 FFFED6         A   923    	CALL	_strcmp
00000254 9000              A   924    	CP	R0,#0
00000256 EE 02             A   925    	JP	NE,_8_L_65
                           A   926    ;  213				cli_command_question();
                           A   927    .line 213
00000258 D05A              A   928    	CALL	_cli_command_question
                           A   929    ;  214			}
                           A   930    ;  215			else if(strcmp(command, "echo") == 0) {
                           A   931    .line 215
0000025A C057              A   932    	JP	_8_L_70
0000025C                   A   933    _8_L_65:
0000025C 6FE1              A   934    	LD.SW	R1,-2(R14)
0000025E 4502 0046         A   935    	LD	R2,#L__35
00000262 F1 FFFECD         A   936    	CALL	_strcmp
00000266 9000              A   937    	CP	R0,#0
00000268 EE 03             A   938    	JP	NE,_8_L_63
                           A   939    ;  216				cli_command_echo(args);
                           A   940    .line 216
0000026A 6FC1              A   941    	LD.SW	R1,-4(R14)
0000026C D0C1              A   942    	CALL	_cli_command_echo
                           A   943    ;  217			}
                           A   944    ;  218			else if(strcmp(command, "display") == 0) {
                           A   945    .line 218
0000026E C04D              A   946    	JP	_8_L_70
00000270                   A   947    _8_L_63:
00000270 6FE1              A   948    	LD.SW	R1,-2(R14)
00000272 4502 004B         A   949    	LD	R2,#L__37
00000276 F1 FFFEC3         A   950    	CALL	_strcmp
0000027A 9000              A   951    	CP	R0,#0
0000027C EE 03             A   952    	JP	NE,_8_L_61
                           A   953    ;  219				cli_command_display(args);
                           A   954    .line 219
0000027E 6FC1              A   955    	LD.SW	R1,-4(R14)
00000280 D0D2              A   956    	CALL	_cli_command_display
                           A   957    ;  220			}
                           A   958    ;  221			else if(strcmp(command, "set") == 0) {
                           A   959    .line 221
00000282 C043              A   960    	JP	_8_L_70
00000284                   A   961    _8_L_61:
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  20


PC     Object              I  Line    Source cli.src
00000284 6FE1              A   962    	LD.SW	R1,-2(R14)
00000286 4502 0053         A   963    	LD	R2,#L__39
0000028A F1 FFFEB9         A   964    	CALL	_strcmp
0000028E 9000              A   965    	CP	R0,#0
00000290 EE 03             A   966    	JP	NE,_8_L_59
                           A   967    ;  222				cli_command_set(args);
                           A   968    .line 222
00000292 6FC1              A   969    	LD.SW	R1,-4(R14)
00000294 D0F8              A   970    	CALL	_cli_command_set
                           A   971    ;  223			}
                           A   972    ;  224			else if(strcmp(command, "hex") == 0) {
                           A   973    .line 224
00000296 C039              A   974    	JP	_8_L_70
00000298                   A   975    _8_L_59:
00000298 6FE1              A   976    	LD.SW	R1,-2(R14)
0000029A 4502 0057         A   977    	LD	R2,#L__41
0000029E F1 FFFEAF         A   978    	CALL	_strcmp
000002A2 9000              A   979    	CP	R0,#0
000002A4 EE 03             A   980    	JP	NE,_8_L_57
                           A   981    ;  225				cli_command_hex(args);
                           A   982    .line 225
000002A6 6FC1              A   983    	LD.SW	R1,-4(R14)
000002A8 D0D5              A   984    	CALL	_cli_command_hex
                           A   985    ;  226			}
                           A   986    ;  227			else if(strcmp(command, "switch") == 0) {
                           A   987    .line 227
000002AA C02F              A   988    	JP	_8_L_70
000002AC                   A   989    _8_L_57:
000002AC 6FE1              A   990    	LD.SW	R1,-2(R14)
000002AE 4502 005B         A   991    	LD	R2,#L__43
000002B2 F1 FFFEA5         A   992    	CALL	_strcmp
000002B6 9000              A   993    	CP	R0,#0
000002B8 EE 03             A   994    	JP	NE,_8_L_55
                           A   995    ;  228				cli_command_switch(args);
                           A   996    .line 228
000002BA 6FC1              A   997    	LD.SW	R1,-4(R14)
000002BC D117              A   998    	CALL	_cli_command_switch
                           A   999    ;  229			}
                           A  1000    ;  230			else if(strcmp(command, "port") == 0) {
                           A  1001    .line 230
000002BE C025              A  1002    	JP	_8_L_70
000002C0                   A  1003    _8_L_55:
000002C0 6FE1              A  1004    	LD.SW	R1,-2(R14)
000002C2 4502 0062         A  1005    	LD	R2,#L__45
000002C6 F1 FFFE9B         A  1006    	CALL	_strcmp
000002CA 9000              A  1007    	CP	R0,#0
000002CC EE 03             A  1008    	JP	NE,_8_L_53
                           A  1009    ;  231				cli_command_port(args);
                           A  1010    .line 231
000002CE 6FC1              A  1011    	LD.SW	R1,-4(R14)
000002D0 D146              A  1012    	CALL	_cli_command_port
                           A  1013    ;  232			}
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  21


PC     Object              I  Line    Source cli.src
                           A  1014    ;  233			else if(strcmp(command, "timer") == 0) {
                           A  1015    .line 233
000002D2 C01B              A  1016    	JP	_8_L_70
000002D4                   A  1017    _8_L_53:
000002D4 6FE1              A  1018    	LD.SW	R1,-2(R14)
000002D6 4502 0067         A  1019    	LD	R2,#L__47
000002DA F1 FFFE91         A  1020    	CALL	_strcmp
000002DE 9000              A  1021    	CP	R0,#0
000002E0 EE 03             A  1022    	JP	NE,_8_L_51
                           A  1023    ;  234				cli_command_timer(args);
                           A  1024    .line 234
000002E2 6FC1              A  1025    	LD.SW	R1,-4(R14)
000002E4 D151              A  1026    	CALL	_cli_command_timer
                           A  1027    ;  235			}
                           A  1028    ;  236			else if(strcmp(command, "uart0") == 0) {
                           A  1029    .line 236
000002E6 C011              A  1030    	JP	_8_L_70
000002E8                   A  1031    _8_L_51:
000002E8 6FE1              A  1032    	LD.SW	R1,-2(R14)
000002EA 4502 006D         A  1033    	LD	R2,#L__49
000002EE F1 FFFE87         A  1034    	CALL	_strcmp
000002F2 9000              A  1035    	CP	R0,#0
000002F4 EE 03             A  1036    	JP	NE,_8_L_49
                           A  1037    ;  237				cli_command_uart0(args);
                           A  1038    .line 237
000002F6 6FC1              A  1039    	LD.SW	R1,-4(R14)
000002F8 D15C              A  1040    	CALL	_cli_command_uart0
                           A  1041    ;  238			}
                           A  1042    ;  239			else {
                           A  1043    .line 239
000002FA C007              A  1044    	JP	_8_L_70
000002FC                   A  1045    _8_L_49:
                           A  1046    ;  240				uart_printf("--Command:%s, not found. Enter \"?\" to see a list of available co
                           A  1047    .line 240
000002FC 6FE0              A  1048    	LD.SW	R0,-2(R14)
000002FE 160F              A  1049    	PUSH.W	R0
00000300 098F 0073         A  1050    	PUSH.W	#L__51
00000304 F1 FFFE7C         A  1051    	CALL	_uart_printf
00000308 8F04              A  1052    	ADD	R15,#4
                           A  1053    ;  241			}
                           A  1054    ;  242		}
                           A  1055    ;  243	}
0000030A                   A  1056    _8_L_70:
                           A  1057    .line 243
0000030A 0001              A  1058    	UNLINK	
0000030C FFFC              A  1059    	RET	
                           A  1060    
                           A  1061    
                           A  1062    ;**************************** _cli_process_command ***************************
                           A  1063    ;Name                         Addr/Register   Size   Type
                           A  1064    ;_uart_printf                        IMPORT  -----   function
                           A  1065    ;_cli_command_uart0                  STATIC  -----   function
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  22


PC     Object              I  Line    Source cli.src
                           A  1066    ;_cli_command_timer                  STATIC  -----   function
                           A  1067    ;_cli_command_port                   STATIC  -----   function
                           A  1068    ;_cli_command_switch                 STATIC  -----   function
                           A  1069    ;_cli_command_hex                    STATIC  -----   function
                           A  1070    ;_cli_command_set                    STATIC  -----   function
                           A  1071    ;_cli_command_display                STATIC  -----   function
                           A  1072    ;_cli_command_echo                   STATIC  -----   function
                           A  1073    ;_cli_command_question               STATIC  -----   function
                           A  1074    ;_cli_command_info                   STATIC  -----   function
                           A  1075    ;_strcmp                             IMPORT  -----   function
                           A  1076    ;_isgraph                            IMPORT  -----   function
                           A  1077    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1078    ;args                                 R14-4      2   variable
                           A  1079    ;command                              R14-2      2   parameter
                           A  1080    
                           A  1081    
                           A  1082    ; Aggregate Stack Size: -4 (words)
                           A  1083    
                           A  1084    
                           A  1085    .endfunc "cli_process_command",243,"_cli_process_command"
                           A  1086    	SEGMENT ROM_TEXT
000000BC                   A  1087    L__53:
000000BC 0A                A  1088    	DB	10
000000BD 41766169          A  1089    	DB	"Available Commands:"
000000C1 6C61626C 
000000C5 6520436F 
000000C9 6D6D616E 64733A 
000000D0 0A0A00            A  1090    	DB	10,10,0
000000D3                   A  1091    L__54:
000000D3 6563686F          A  1092    	DB	"echo [\"text\"]"
000000D7 205B2274 
000000DB 65787422 5D 
000000E0 0A00              A  1093    	DB	10,0
000000E2                   A  1094    L__55:
000000E2 202D4563          A  1095    	DB	" -Echos text back to the serial port."
000000E6 686F7320 
000000EA 74657874 
000000EE 20626163 
000000F2 6B20746F 
000000F6 20746865 
000000FA 20736572 
000000FE 69616C20 
00000102 706F7274 2E 
00000107 0A00              A  1096    	DB	10,0
00000109                   A  1097    L__56:
00000109 64697370          A  1098    	DB	"display [\"text\"]"
0000010D 6C617920 
00000111 5B227465 
00000115 7874225D 
00000119 0A00              A  1099    	DB	10,0
0000011B                   A  1100    L__57:
0000011B 202D4469          A  1101    	DB	" -Display text on the LEDs."
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  23


PC     Object              I  Line    Source cli.src
0000011F 73706C61 
00000123 79207465 
00000127 7874206F 
0000012B 6E207468 
0000012F 65204C45 44732E 
00000136 0A00              A  1102    	DB	10,0
00000138                   A  1103    L__58:
00000138 73657420          A  1104    	DB	"set prompt [\"text\"]"
0000013C 70726F6D 
00000140 7074205B 
00000144 22746578 74225D 
0000014B 0A00              A  1105    	DB	10,0
0000014D                   A  1106    L__59:
0000014D 202D5365          A  1107    	DB	" -Set the CLI prompt to text."
00000151 74207468 
00000155 6520434C 
00000159 49207072 
0000015D 6F6D7074 
00000161 20746F20 
00000165 74657874 2E 
0000016A 0A00              A  1108    	DB	10,0
0000016C                   A  1109    L__60:
0000016C 68657820          A  1110    	DB	"hex [decimal number]"
00000170 5B646563 
00000174 696D616C 
00000178 206E756D 
0000017C 6265725D 
00000180 0A00              A  1111    	DB	10,0
00000182                   A  1112    L__61:
00000182 202D4469          A  1113    	DB	" -Display a decimal number in hex on the LEDs."
00000186 73706C61 
0000018A 79206120 
0000018E 64656369 
00000192 6D616C20 
00000196 6E756D62 
0000019A 65722069 
0000019E 6E206865 
000001A2 78206F6E 
000001A6 20746865 
000001AA 204C4544 732E 
000001B0 0A00              A  1114    	DB	10,0
000001B2                   A  1115    L__62:
000001B2 73776974          A  1116    	DB	"switch [0-2] [\"text\"]"
000001B6 6368205B 
000001BA 302D325D 
000001BE 205B2274 
000001C2 65787422 5D 
000001C7 0A00              A  1117    	DB	10,0
000001C9                   A  1118    L__63:
000001C9 202D4173          A  1119    	DB	" -Assigns the text macro to a button."
000001CD 7369676E 
000001D1 73207468 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  24


PC     Object              I  Line    Source cli.src
000001D5 65207465 
000001D9 7874206D 
000001DD 6163726F 
000001E1 20746F20 
000001E5 61206275 
000001E9 74746F6E 2E 
000001EE 0A00              A  1120    	DB	10,0
000001F0                   A  1121    L__64:
000001F0 706F7274          A  1122    	DB	"port [A-K]"
000001F4 205B412D 4B5D 
000001FA 0A00              A  1123    	DB	10,0
000001FC                   A  1124    L__65:
000001FC 202D4469          A  1125    	DB	" -Display the current state of the port."
00000200 73706C61 
00000204 79207468 
00000208 65206375 
0000020C 7272656E 
00000210 74207374 
00000214 61746520 
00000218 6F662074 
0000021C 68652070 
00000220 6F72742E 
00000224 0A00              A  1126    	DB	10,0
00000226                   A  1127    L__66:
00000226 74696D65          A  1128    	DB	"timer [0-2]"
0000022A 72205B30 2D325D 
00000231 0A00              A  1129    	DB	10,0
00000233                   A  1130    L__67:
00000233 202D4469          A  1131    	DB	" -Display the current state of the timer."
00000237 73706C61 
0000023B 79207468 
0000023F 65206375 
00000243 7272656E 
00000247 74207374 
0000024B 61746520 
0000024F 6F662074 
00000253 68652074 
00000257 696D6572 2E 
0000025C 0A00              A  1132    	DB	10,0
0000025E                   A  1133    L__68:
0000025E 75617274          A  1134    	DB	"uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
00000262 30205B73 
00000266 70656564 
0000026A 205B6261 
0000026E 75647261 
00000272 74655D5D 
00000276 205B7061 
0000027A 72697479 
0000027E 205B6576 
00000282 656E7C6F 
00000286 64647C6E 
0000028A 6F6E655D 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  25


PC     Object              I  Line    Source cli.src
0000028E 5D205B62 
00000292 69747320 
00000296 5B377C38 5D5D 
0000029C 0A00              A  1135    	DB	10,0
0000029E                   A  1136    L__69:
0000029E 202D5365          A  1137    	DB	" -Set the uart0 settings."
000002A2 74207468 
000002A6 65207561 
000002AA 72743020 
000002AE 73657474 
000002B2 696E6773 2E 
000002B7 0A00              A  1138    	DB	10,0
000002B9                   A  1139    L__70:
000002B9 696E666F          A  1140    	DB	"info"
000002BD 0A00              A  1141    	DB	10,0
000002BF                   A  1142    L__71:
000002BF 202D4469          A  1143    	DB	" -Displays various system information."
000002C3 73706C61 
000002C7 79732076 
000002CB 6172696F 
000002CF 75732073 
000002D3 79737465 
000002D7 6D20696E 
000002DB 666F726D 
000002DF 6174696F 6E2E 
000002E5 0A00              A  1144    	DB	10,0
000002E7                   A  1145    L__72:
000002E7 3F                A  1146    	DB	"?"
000002E8 0A00              A  1147    	DB	10,0
000002EA                   A  1148    L__73:
000002EA 202D4469          A  1149    	DB	" -Displays a menu of CLI commands."
000002EE 73706C61 
000002F2 79732061 
000002F6 206D656E 
000002FA 75206F66 
000002FE 20434C49 
00000302 20636F6D 
00000306 6D616E64 732E 
0000030C 0A00              A  1150    	DB	10,0
                           A  1151    	SEGMENT CODE
                           A  1152    ;  244	
                           A  1153    ;  245	static void cli_command_question(void)
                           A  1154    ;  246	{
0000030E                   A  1155    _cli_command_question:
                           A  1156    .define "_cli_command_question"
                           A  1157    .value _cli_command_question
                           A  1158    .class 3
                           A  1159    .type 65
                           A  1160    .type 0
                           A  1161    .endef
                           A  1162    .begfunc "cli_command_question",246,"_cli_command_question"
0000030E 0800              A  1163    	LINK	#0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  26


PC     Object              I  Line    Source cli.src
                           A  1164    ;  247		uart_printf("\nAvailable Commands:\n\n");
                           A  1165    .line 247
00000310 098F 00BC         A  1166    	PUSH.W	#L__53
00000314 F1 FFFE74         A  1167    	CALL	_uart_printf
00000318 8F02              A  1168    	ADD	R15,#2
                           A  1169    ;  248	
                           A  1170    ;  249		uart_printf("echo [\"text\"]\n");
                           A  1171    .line 249
0000031A 098F 00D3         A  1172    	PUSH.W	#L__54
0000031E F1 FFFE6F         A  1173    	CALL	_uart_printf
00000322 8F02              A  1174    	ADD	R15,#2
                           A  1175    ;  250		uart_printf(" -Echos text back to the serial port.\n");
                           A  1176    .line 250
00000324 098F 00E2         A  1177    	PUSH.W	#L__55
00000328 F1 FFFE6A         A  1178    	CALL	_uart_printf
0000032C 8F02              A  1179    	ADD	R15,#2
                           A  1180    ;  251	
                           A  1181    ;  252		uart_printf("display [\"text\"]\n");
                           A  1182    .line 252
0000032E 098F 0109         A  1183    	PUSH.W	#L__56
00000332 F1 FFFE65         A  1184    	CALL	_uart_printf
00000336 8F02              A  1185    	ADD	R15,#2
                           A  1186    ;  253		uart_printf(" -Display text on the LEDs.\n");
                           A  1187    .line 253
00000338 098F 011B         A  1188    	PUSH.W	#L__57
0000033C F1 FFFE60         A  1189    	CALL	_uart_printf
00000340 8F02              A  1190    	ADD	R15,#2
                           A  1191    ;  254	
                           A  1192    ;  255		uart_printf("set prompt [\"text\"]\n");
                           A  1193    .line 255
00000342 098F 0138         A  1194    	PUSH.W	#L__58
00000346 F1 FFFE5B         A  1195    	CALL	_uart_printf
0000034A 8F02              A  1196    	ADD	R15,#2
                           A  1197    ;  256		uart_printf(" -Set the CLI prompt to text.\n");
                           A  1198    .line 256
0000034C 098F 014D         A  1199    	PUSH.W	#L__59
00000350 F1 FFFE56         A  1200    	CALL	_uart_printf
00000354 8F02              A  1201    	ADD	R15,#2
                           A  1202    ;  257	
                           A  1203    ;  258		uart_printf("hex [decimal number]\n");
                           A  1204    .line 258
00000356 098F 016C         A  1205    	PUSH.W	#L__60
0000035A F1 FFFE51         A  1206    	CALL	_uart_printf
0000035E 8F02              A  1207    	ADD	R15,#2
                           A  1208    ;  259		uart_printf(" -Display a decimal number in hex on the LEDs.\n");
                           A  1209    .line 259
00000360 098F 0182         A  1210    	PUSH.W	#L__61
00000364 F1 FFFE4C         A  1211    	CALL	_uart_printf
00000368 8F02              A  1212    	ADD	R15,#2
                           A  1213    ;  260	
                           A  1214    ;  261		uart_printf("switch [0-2] [\"text\"]\n");
                           A  1215    .line 261
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  27


PC     Object              I  Line    Source cli.src
0000036A 098F 01B2         A  1216    	PUSH.W	#L__62
0000036E F1 FFFE47         A  1217    	CALL	_uart_printf
00000372 8F02              A  1218    	ADD	R15,#2
                           A  1219    ;  262		uart_printf(" -Assigns the text macro to a button.\n");
                           A  1220    .line 262
00000374 098F 01C9         A  1221    	PUSH.W	#L__63
00000378 F1 FFFE42         A  1222    	CALL	_uart_printf
0000037C 8F02              A  1223    	ADD	R15,#2
                           A  1224    ;  263	
                           A  1225    ;  264		uart_printf("port [A-K]\n");
                           A  1226    .line 264
0000037E 098F 01F0         A  1227    	PUSH.W	#L__64
00000382 F1 FFFE3D         A  1228    	CALL	_uart_printf
00000386 8F02              A  1229    	ADD	R15,#2
                           A  1230    ;  265		uart_printf(" -Display the current state of the port.\n");
                           A  1231    .line 265
00000388 098F 01FC         A  1232    	PUSH.W	#L__65
0000038C F1 FFFE38         A  1233    	CALL	_uart_printf
00000390 8F02              A  1234    	ADD	R15,#2
                           A  1235    ;  266	
                           A  1236    ;  267		uart_printf("timer [0-2]\n");
                           A  1237    .line 267
00000392 098F 0226         A  1238    	PUSH.W	#L__66
00000396 F1 FFFE33         A  1239    	CALL	_uart_printf
0000039A 8F02              A  1240    	ADD	R15,#2
                           A  1241    ;  268		uart_printf(" -Display the current state of the timer.\n");
                           A  1242    .line 268
0000039C 098F 0233         A  1243    	PUSH.W	#L__67
000003A0 F1 FFFE2E         A  1244    	CALL	_uart_printf
000003A4 8F02              A  1245    	ADD	R15,#2
                           A  1246    ;  269	
                           A  1247    ;  270		uart_printf("uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]\n");
                           A  1248    .line 270
000003A6 098F 025E         A  1249    	PUSH.W	#L__68
000003AA F1 FFFE29         A  1250    	CALL	_uart_printf
000003AE 8F02              A  1251    	ADD	R15,#2
                           A  1252    ;  271		uart_printf(" -Set the uart0 settings.\n");
                           A  1253    .line 271
000003B0 098F 029E         A  1254    	PUSH.W	#L__69
000003B4 F1 FFFE24         A  1255    	CALL	_uart_printf
000003B8 8F02              A  1256    	ADD	R15,#2
                           A  1257    ;  272	
                           A  1258    ;  273		uart_printf("info\n");
                           A  1259    .line 273
000003BA 098F 02B9         A  1260    	PUSH.W	#L__70
000003BE F1 FFFE1F         A  1261    	CALL	_uart_printf
000003C2 8F02              A  1262    	ADD	R15,#2
                           A  1263    ;  274		uart_printf(" -Displays various system information.\n");
                           A  1264    .line 274
000003C4 098F 02BF         A  1265    	PUSH.W	#L__71
000003C8 F1 FFFE1A         A  1266    	CALL	_uart_printf
000003CC 8F02              A  1267    	ADD	R15,#2
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  28


PC     Object              I  Line    Source cli.src
                           A  1268    ;  275	
                           A  1269    ;  276		uart_printf("?\n");
                           A  1270    .line 276
000003CE 098F 02E7         A  1271    	PUSH.W	#L__72
000003D2 F1 FFFE15         A  1272    	CALL	_uart_printf
000003D6 8F02              A  1273    	ADD	R15,#2
                           A  1274    ;  277		uart_printf(" -Displays a menu of CLI commands.\n");
                           A  1275    .line 277
000003D8 098F 02EA         A  1276    	PUSH.W	#L__73
000003DC F1 FFFE10         A  1277    	CALL	_uart_printf
000003E0 8F02              A  1278    	ADD	R15,#2
                           A  1279    ;  278	}
                           A  1280    .line 278
000003E2 0001              A  1281    	UNLINK	
000003E4 FFFC              A  1282    	RET	
                           A  1283    
                           A  1284    
                           A  1285    ;**************************** _cli_command_question ***************************
                           A  1286    ;Name                         Addr/Register   Size   Type
                           A  1287    ;_uart_printf                        IMPORT  -----   function
                           A  1288    
                           A  1289    
                           A  1290    ; Aggregate Stack Size: 0 (words)
                           A  1291    
                           A  1292    
                           A  1293    .endfunc "cli_command_question",278,"_cli_command_question"
                           A  1294    ;  279	
                           A  1295    ;  280	static void cli_command_info(void)
                           A  1296    ;  281	{
000003E6                   A  1297    _cli_command_info:
                           A  1298    .define "_cli_command_info"
                           A  1299    .value _cli_command_info
                           A  1300    .class 3
                           A  1301    .type 65
                           A  1302    .type 0
                           A  1303    .endef
                           A  1304    .begfunc "cli_command_info",281,"_cli_command_info"
000003E6 0800              A  1305    	LINK	#0
                           A  1306    ;  282		info_display();
                           A  1307    .line 282
000003E8 F1 FFFE0A         A  1308    	CALL	_info_display
                           A  1309    ;  283	}
                           A  1310    .line 283
000003EC 0001              A  1311    	UNLINK	
000003EE FFFC              A  1312    	RET	
                           A  1313    
                           A  1314    
                           A  1315    ;**************************** _cli_command_info ***************************
                           A  1316    ;Name                         Addr/Register   Size   Type
                           A  1317    ;_info_display                       IMPORT  -----   function
                           A  1318    
                           A  1319    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  29


PC     Object              I  Line    Source cli.src
                           A  1320    ; Aggregate Stack Size: 0 (words)
                           A  1321    
                           A  1322    
                           A  1323    .endfunc "cli_command_info",283,"_cli_command_info"
                           A  1324    	SEGMENT ROM_TEXT
0000030E                   A  1325    L__77:
0000030E 496E636F          A  1326    	DB	"Incorrect format, echo [\"text\"]"
00000312 72726563 
00000316 7420666F 
0000031A 726D6174 
0000031E 2C206563 
00000322 686F205B 
00000326 22746578 74225D 
0000032D 0A00              A  1327    	DB	10,0
0000032F                   A  1328    L__78:
0000032F 2573              A  1329    	DB	"%s"
00000331 0A00              A  1330    	DB	10,0
                           A  1331    	SEGMENT CODE
                           A  1332    ;  284	
                           A  1333    ;  285	static void cli_command_echo(char *args)
                           A  1334    ;  286	{
000003F0                   A  1335    _cli_command_echo:
                           A  1336    .define "_cli_command_echo"
                           A  1337    .value _cli_command_echo
                           A  1338    .class 3
                           A  1339    .type 65
                           A  1340    .type 0
                           A  1341    .endef
                           A  1342    .begfunc "cli_command_echo",286,"_cli_command_echo"
000003F0 0804              A  1343    	LINK	#4
                           A  1344    .line 286
000003F2 57E1              A  1345    	LD.W	-2(R14),R1
                           A  1346    .define "args"
                           A  1347    .class 9
                           A  1348    .value -2
                           A  1349    .type 140
                           A  1350    .type 0
                           A  1351    .endef
                           A  1352    .define "token"
                           A  1353    .class 1
                           A  1354    .value -4
                           A  1355    .type 140
                           A  1356    .type 0
                           A  1357    .endef
                           A  1358    ;  287		char *token;
                           A  1359    ;  288	
                           A  1360    ;  289		cli_strip_spaces(&args);
                           A  1361    .line 289
000003F4 4FE1              A  1362    	LEA	R1,-2(R14)
000003F6 DED7              A  1363    	CALL	_cli_strip_spaces
                           A  1364    ;  290	
                           A  1365    ;  291		token = args;
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  30


PC     Object              I  Line    Source cli.src
                           A  1366    .line 291
000003F8 6FE0              A  1367    	LD.SW	R0,-2(R14)
000003FA 57C0              A  1368    	LD.W	-4(R14),R0
                           A  1369    ;  292		if(cli_strip_quotes(&args)) {
                           A  1370    .line 292
000003FC 4FE1              A  1371    	LEA	R1,-2(R14)
000003FE DE7C              A  1372    	CALL	_cli_strip_quotes
00000400 9000              A  1373    	CP	R0,#0
00000402 E6 06             A  1374    	JP	EQ,_11_L_74
                           A  1375    ;  293			uart_printf("Incorrect format, echo [\"text\"]\n");
                           A  1376    .line 293
00000404 098F 030E         A  1377    	PUSH.W	#L__77
00000408 F1 FFFDFA         A  1378    	CALL	_uart_printf
0000040C 8F02              A  1379    	ADD	R15,#2
                           A  1380    ;  294			return;
                           A  1381    .line 294
0000040E C009              A  1382    	JP	_11_L_75
                           A  1383    ;  295		}
00000410                   A  1384    _11_L_74:
                           A  1385    .line 295
                           A  1386    ;  296	
                           A  1387    ;  297		uart_printf("%s\n", ++token);
                           A  1388    .line 297
00000410 ADEE 7FFC         A  1389    	INC.W	-4(R14)
00000414 6FC0              A  1390    	LD.SW	R0,-4(R14)
00000416 160F              A  1391    	PUSH.W	R0
00000418 098F 032F         A  1392    	PUSH.W	#L__78
0000041C F1 FFFDF0         A  1393    	CALL	_uart_printf
00000420 8F04              A  1394    	ADD	R15,#4
                           A  1395    ;  298	}
00000422                   A  1396    _11_L_75:
                           A  1397    .line 298
00000422 0001              A  1398    	UNLINK	
00000424 FFFC              A  1399    	RET	
                           A  1400    
                           A  1401    
                           A  1402    ;**************************** _cli_command_echo ***************************
                           A  1403    ;Name                         Addr/Register   Size   Type
                           A  1404    ;_uart_printf                        IMPORT  -----   function
                           A  1405    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1406    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1407    ;token                                R14-4      2   variable
                           A  1408    ;args                                 R14-2      2   parameter
                           A  1409    
                           A  1410    
                           A  1411    ; Aggregate Stack Size: -4 (words)
                           A  1412    
                           A  1413    
                           A  1414    .endfunc "cli_command_echo",298,"_cli_command_echo"
                           A  1415    	SEGMENT ROM_TEXT
00000333                   A  1416    L__81:
00000333 496E636F          A  1417    	DB	"Incorrect format, display [\"text\"]"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  31


PC     Object              I  Line    Source cli.src
00000337 72726563 
0000033B 7420666F 
0000033F 726D6174 
00000343 2C206469 
00000347 73706C61 
0000034B 79205B22 
0000034F 74657874 225D 
00000355 0A00              A  1418    	DB	10,0
                           A  1419    	SEGMENT CODE
                           A  1420    ;  299	
                           A  1421    ;  300	static void cli_command_display(char *args)
                           A  1422    ;  301	{
00000426                   A  1423    _cli_command_display:
                           A  1424    .define "_cli_command_display"
                           A  1425    .value _cli_command_display
                           A  1426    .class 3
                           A  1427    .type 65
                           A  1428    .type 0
                           A  1429    .endef
                           A  1430    .begfunc "cli_command_display",301,"_cli_command_display"
00000426 0804              A  1431    	LINK	#4
                           A  1432    .line 301
00000428 57E1              A  1433    	LD.W	-2(R14),R1
                           A  1434    .define "args"
                           A  1435    .class 9
                           A  1436    .value -2
                           A  1437    .type 140
                           A  1438    .type 0
                           A  1439    .endef
                           A  1440    .define "token"
                           A  1441    .class 1
                           A  1442    .value -4
                           A  1443    .type 140
                           A  1444    .type 0
                           A  1445    .endef
                           A  1446    ;  302		char *token;
                           A  1447    ;  303	
                           A  1448    ;  304		cli_strip_spaces(&args);
                           A  1449    .line 304
0000042A 4FE1              A  1450    	LEA	R1,-2(R14)
0000042C DEBC              A  1451    	CALL	_cli_strip_spaces
                           A  1452    ;  305	
                           A  1453    ;  306		token = args;
                           A  1454    .line 306
0000042E 6FE0              A  1455    	LD.SW	R0,-2(R14)
00000430 57C0              A  1456    	LD.W	-4(R14),R0
                           A  1457    ;  307		if(cli_strip_quotes(&args)) {
                           A  1458    .line 307
00000432 4FE1              A  1459    	LEA	R1,-2(R14)
00000434 DE61              A  1460    	CALL	_cli_strip_quotes
00000436 9000              A  1461    	CP	R0,#0
00000438 E6 06             A  1462    	JP	EQ,_12_L_77
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  32


PC     Object              I  Line    Source cli.src
                           A  1463    ;  308			uart_printf("Incorrect format, display [\"text\"]\n");
                           A  1464    .line 308
0000043A 098F 0333         A  1465    	PUSH.W	#L__81
0000043E F1 FFFDDF         A  1466    	CALL	_uart_printf
00000442 8F02              A  1467    	ADD	R15,#2
                           A  1468    ;  309			return;
                           A  1469    .line 309
00000444 C005              A  1470    	JP	_12_L_78
                           A  1471    ;  310		}
00000446                   A  1472    _12_L_77:
                           A  1473    .line 310
                           A  1474    ;  311	
                           A  1475    ;  312		led_display_text(++token);
                           A  1476    .line 312
00000446 ADEE 7FFC         A  1477    	INC.W	-4(R14)
0000044A 6FC1              A  1478    	LD.SW	R1,-4(R14)
0000044C F1 FFFDD8         A  1479    	CALL	_led_display_text
                           A  1480    ;  313	}
00000450                   A  1481    _12_L_78:
                           A  1482    .line 313
00000450 0001              A  1483    	UNLINK	
00000452 FFFC              A  1484    	RET	
                           A  1485    
                           A  1486    
                           A  1487    ;**************************** _cli_command_display ***************************
                           A  1488    ;Name                         Addr/Register   Size   Type
                           A  1489    ;_led_display_text                   IMPORT  -----   function
                           A  1490    ;_uart_printf                        IMPORT  -----   function
                           A  1491    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1492    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1493    ;token                                R14-4      2   variable
                           A  1494    ;args                                 R14-2      2   parameter
                           A  1495    
                           A  1496    
                           A  1497    ; Aggregate Stack Size: -4 (words)
                           A  1498    
                           A  1499    
                           A  1500    .endfunc "cli_command_display",313,"_cli_command_display"
                           A  1501    	SEGMENT ROM_TEXT
00000357                   A  1502    L__84:
00000357 3120496E          A  1503    	DB	"1 Incorrect format, hex [decimal number]"
0000035B 636F7272 
0000035F 65637420 
00000363 666F726D 
00000367 61742C20 
0000036B 68657820 
0000036F 5B646563 
00000373 696D616C 
00000377 206E756D 
0000037B 6265725D 
0000037F 0A00              A  1504    	DB	10,0
                           A  1505    	SEGMENT CODE
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  33


PC     Object              I  Line    Source cli.src
                           A  1506    ;  314	
                           A  1507    ;  315	static void cli_command_hex(char *args)
                           A  1508    ;  316	{
00000454                   A  1509    _cli_command_hex:
                           A  1510    .define "_cli_command_hex"
                           A  1511    .value _cli_command_hex
                           A  1512    .class 3
                           A  1513    .type 65
                           A  1514    .type 0
                           A  1515    .endef
                           A  1516    .begfunc "cli_command_hex",316,"_cli_command_hex"
00000454 0808              A  1517    	LINK	#8
                           A  1518    .line 316
00000456 57E1              A  1519    	LD.W	-2(R14),R1
                           A  1520    .define "args"
                           A  1521    .class 9
                           A  1522    .value -2
                           A  1523    .type 140
                           A  1524    .type 0
                           A  1525    .endef
                           A  1526    .define "token"
                           A  1527    .class 1
                           A  1528    .value -4
                           A  1529    .type 140
                           A  1530    .type 0
                           A  1531    .endef
                           A  1532    .define "value"
                           A  1533    .class 1
                           A  1534    .value -8
                           A  1535    .type 5
                           A  1536    .type 0
                           A  1537    .endef
                           A  1538    ;  317		char *token;
                           A  1539    ;  318		int value;
                           A  1540    ;  319	
                           A  1541    ;  320		cli_strip_spaces(&args);
                           A  1542    .line 320
00000458 4FE1              A  1543    	LEA	R1,-2(R14)
0000045A DEA5              A  1544    	CALL	_cli_strip_spaces
                           A  1545    ;  321	
                           A  1546    ;  322		token = args;
                           A  1547    .line 322
0000045C 6FE0              A  1548    	LD.SW	R0,-2(R14)
0000045E 57C0              A  1549    	LD.W	-4(R14),R0
                           A  1550    ;  323		if(cli_strip_decimal_number(&args)) {
                           A  1551    .line 323
00000460 4FE1              A  1552    	LEA	R1,-2(R14)
00000462 DE84              A  1553    	CALL	_cli_strip_decimal_number
00000464 9000              A  1554    	CP	R0,#0
00000466 E6 06             A  1555    	JP	EQ,_13_L_80
                           A  1556    ;  324			uart_printf("1 Incorrect format, hex [decimal number]\n");
                           A  1557    .line 324
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  34


PC     Object              I  Line    Source cli.src
00000468 098F 0357         A  1558    	PUSH.W	#L__84
0000046C F1 FFFDC8         A  1559    	CALL	_uart_printf
00000470 8F02              A  1560    	ADD	R15,#2
                           A  1561    ;  325			return;
                           A  1562    .line 325
00000472 C007              A  1563    	JP	_13_L_81
                           A  1564    ;  326		}
00000474                   A  1565    _13_L_80:
                           A  1566    .line 326
                           A  1567    ;  327	
                           A  1568    ;  328		value = atoi(token);
                           A  1569    .line 328
00000474 6FC1              A  1570    	LD.SW	R1,-4(R14)
00000476 F1 FFFDC3         A  1571    	CALL	_atoi
0000047A 5B80              A  1572    	LD	-8(R14),R0
                           A  1573    ;  329		led_display_int_hex(value);
                           A  1574    .line 329
0000047C 5F81              A  1575    	LD	R1,-8(R14)
0000047E F1 FFFDBF         A  1576    	CALL	_led_display_int_hex
                           A  1577    ;  330	}
00000482                   A  1578    _13_L_81:
                           A  1579    .line 330
00000482 0001              A  1580    	UNLINK	
00000484 FFFC              A  1581    	RET	
                           A  1582    
                           A  1583    
                           A  1584    ;**************************** _cli_command_hex ***************************
                           A  1585    ;Name                         Addr/Register   Size   Type
                           A  1586    ;_led_display_int_hex                IMPORT  -----   function
                           A  1587    ;_atoi                               IMPORT  -----   function
                           A  1588    ;_uart_printf                        IMPORT  -----   function
                           A  1589    ;_cli_strip_decimal_number           IMPORT  -----   function
                           A  1590    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1591    ;value                                R14-8      4   variable
                           A  1592    ;token                                R14-4      2   variable
                           A  1593    ;args                                 R14-2      2   parameter
                           A  1594    
                           A  1595    
                           A  1596    ; Aggregate Stack Size: -8 (words)
                           A  1597    
                           A  1598    
                           A  1599    .endfunc "cli_command_hex",330,"_cli_command_hex"
                           A  1600    	SEGMENT ROM_TEXT
00000381                   A  1601    L__87:
00000381 3120496E          A  1602    	DB	"1 Incorrect format, set prompt [\"text\"]"
00000385 636F7272 
00000389 65637420 
0000038D 666F726D 
00000391 61742C20 
00000395 73657420 
00000399 70726F6D 
0000039D 7074205B 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  35


PC     Object              I  Line    Source cli.src
000003A1 22746578 74225D 
000003A8 0A00              A  1603    	DB	10,0
000003AA                   A  1604    L__88:
000003AA 70726F6D 7074     A  1605    	DB	"prompt"
000003B0 00                A  1606    	DB	0
000003B1                   A  1607    L__91:
000003B1 3220496E          A  1608    	DB	"2 Incorrect format, set prompt [\"text\"]"
000003B5 636F7272 
000003B9 65637420 
000003BD 666F726D 
000003C1 61742C20 
000003C5 73657420 
000003C9 70726F6D 
000003CD 7074205B 
000003D1 22746578 74225D 
000003D8 0A00              A  1609    	DB	10,0
000003DA                   A  1610    L__92:
000003DA 3320496E          A  1611    	DB	"3 Incorrect format, set prompt [\"text\"]"
000003DE 636F7272 
000003E2 65637420 
000003E6 666F726D 
000003EA 61742C20 
000003EE 73657420 
000003F2 70726F6D 
000003F6 7074205B 
000003FA 22746578 74225D 
00000401 0A00              A  1612    	DB	10,0
                           A  1613    	SEGMENT CODE
                           A  1614    ;  331	
                           A  1615    ;  332	static void cli_command_set(char *args)
                           A  1616    ;  333	{
00000486                   A  1617    _cli_command_set:
                           A  1618    .define "_cli_command_set"
                           A  1619    .value _cli_command_set
                           A  1620    .class 3
                           A  1621    .type 65
                           A  1622    .type 0
                           A  1623    .endef
                           A  1624    .begfunc "cli_command_set",333,"_cli_command_set"
00000486 0804              A  1625    	LINK	#4
                           A  1626    .line 333
00000488 57E1              A  1627    	LD.W	-2(R14),R1
                           A  1628    .define "args"
                           A  1629    .class 9
                           A  1630    .value -2
                           A  1631    .type 140
                           A  1632    .type 0
                           A  1633    .endef
                           A  1634    .define "token"
                           A  1635    .class 1
                           A  1636    .value -4
                           A  1637    .type 140
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  36


PC     Object              I  Line    Source cli.src
                           A  1638    .type 0
                           A  1639    .endef
                           A  1640    ;  334		char *token;
                           A  1641    ;  335	
                           A  1642    ;  336		cli_strip_spaces(&args);
                           A  1643    .line 336
0000048A 4FE1              A  1644    	LEA	R1,-2(R14)
0000048C DE8C              A  1645    	CALL	_cli_strip_spaces
                           A  1646    ;  337	
                           A  1647    ;  338		token = args;
                           A  1648    .line 338
0000048E 6FE0              A  1649    	LD.SW	R0,-2(R14)
00000490 57C0              A  1650    	LD.W	-4(R14),R0
                           A  1651    ;  339		if(cli_strip_word(&args)) {
                           A  1652    .line 339
00000492 4FE1              A  1653    	LEA	R1,-2(R14)
00000494 DE50              A  1654    	CALL	_cli_strip_word
00000496 9000              A  1655    	CP	R0,#0
00000498 E6 06             A  1656    	JP	EQ,_14_L_87
                           A  1657    ;  340			uart_printf("1 Incorrect format, set prompt [\"text\"]\n");
                           A  1658    .line 340
0000049A 098F 0381         A  1659    	PUSH.W	#L__87
0000049E F1 FFFDAF         A  1660    	CALL	_uart_printf
000004A2 8F02              A  1661    	ADD	R15,#2
                           A  1662    ;  341			return;
                           A  1663    .line 341
000004A4 C021              A  1664    	JP	_14_L_88
                           A  1665    ;  342		}
000004A6                   A  1666    _14_L_87:
                           A  1667    .line 342
                           A  1668    ;  343	
                           A  1669    ;  344		if(strcmp(token, "prompt") == 0) {
                           A  1670    .line 344
000004A6 6FC1              A  1671    	LD.SW	R1,-4(R14)
000004A8 4502 03AA         A  1672    	LD	R2,#L__88
000004AC F1 FFFDA8         A  1673    	CALL	_strcmp
000004B0 9000              A  1674    	CP	R0,#0
000004B2 EE 15             A  1675    	JP	NE,_14_L_86
                           A  1676    ;  345			++args;
                           A  1677    .line 345
000004B4 ADEE 7FFE         A  1678    	INC.W	-2(R14)
                           A  1679    ;  346			cli_strip_spaces(&args);
                           A  1680    .line 346
000004B8 4FE1              A  1681    	LEA	R1,-2(R14)
000004BA DE75              A  1682    	CALL	_cli_strip_spaces
                           A  1683    ;  347	
                           A  1684    ;  348			token = args;
                           A  1685    .line 348
000004BC 6FE0              A  1686    	LD.SW	R0,-2(R14)
000004BE 57C0              A  1687    	LD.W	-4(R14),R0
                           A  1688    ;  349			if(cli_strip_quotes(&args)) {
                           A  1689    .line 349
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  37


PC     Object              I  Line    Source cli.src
000004C0 4FE1              A  1690    	LEA	R1,-2(R14)
000004C2 DE1A              A  1691    	CALL	_cli_strip_quotes
000004C4 9000              A  1692    	CP	R0,#0
000004C6 E6 06             A  1693    	JP	EQ,_14_L_84
                           A  1694    ;  350				uart_printf("2 Incorrect format, set prompt [\"text\"]\n");
                           A  1695    .line 350
000004C8 098F 03B1         A  1696    	PUSH.W	#L__91
000004CC F1 FFFD98         A  1697    	CALL	_uart_printf
000004D0 8F02              A  1698    	ADD	R15,#2
                           A  1699    ;  351				return;
                           A  1700    .line 351
000004D2 C00A              A  1701    	JP	_14_L_88
                           A  1702    ;  352			}
000004D4                   A  1703    _14_L_84:
                           A  1704    .line 352
                           A  1705    ;  353	
                           A  1706    ;  354			++token;
                           A  1707    .line 354
000004D4 ADEE 7FFC         A  1708    	INC.W	-4(R14)
                           A  1709    ;  355			cli_set_prompt(token);
                           A  1710    .line 355
000004D8 6FC1              A  1711    	LD.SW	R1,-4(R14)
000004DA DE78              A  1712    	CALL	_cli_set_prompt
                           A  1713    ;  356		}
                           A  1714    ;  357		else {
                           A  1715    .line 357
000004DC C005              A  1716    	JP	_14_L_88
000004DE                   A  1717    _14_L_86:
                           A  1718    ;  358			uart_printf("3 Incorrect format, set prompt [\"text\"]\n");
                           A  1719    .line 358
000004DE 098F 03DA         A  1720    	PUSH.W	#L__92
000004E2 F1 FFFD8D         A  1721    	CALL	_uart_printf
000004E6 8F02              A  1722    	ADD	R15,#2
                           A  1723    ;  359			return;
                           A  1724    ;  360		}
                           A  1725    ;  361	}
000004E8                   A  1726    _14_L_88:
                           A  1727    .line 361
000004E8 0001              A  1728    	UNLINK	
000004EA FFFC              A  1729    	RET	
                           A  1730    
                           A  1731    
                           A  1732    ;**************************** _cli_command_set ***************************
                           A  1733    ;Name                         Addr/Register   Size   Type
                           A  1734    ;_cli_set_prompt                     IMPORT  -----   function
                           A  1735    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1736    ;_strcmp                             IMPORT  -----   function
                           A  1737    ;_uart_printf                        IMPORT  -----   function
                           A  1738    ;_cli_strip_word                     IMPORT  -----   function
                           A  1739    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1740    ;token                                R14-4      2   variable
                           A  1741    ;args                                 R14-2      2   parameter
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  38


PC     Object              I  Line    Source cli.src
                           A  1742    
                           A  1743    
                           A  1744    ; Aggregate Stack Size: -4 (words)
                           A  1745    
                           A  1746    
                           A  1747    .endfunc "cli_command_set",361,"_cli_command_set"
                           A  1748    	SEGMENT ROM_TEXT
00000403                   A  1749    L__95:
00000403 3120496E          A  1750    	DB	"1 Incorrect format, switch [n] [\"text\"]"
00000407 636F7272 
0000040B 65637420 
0000040F 666F726D 
00000413 61742C20 
00000417 73776974 
0000041B 6368205B 
0000041F 6E5D205B 
00000423 22746578 74225D 
0000042A 0A00              A  1751    	DB	10,0
0000042C                   A  1752    L__98:
0000042C 3220496E          A  1753    	DB	"2 Incorrect format, switch [n] [\"text\"]"
00000430 636F7272 
00000434 65637420 
00000438 666F726D 
0000043C 61742C20 
00000440 73776974 
00000444 6368205B 
00000448 6E5D205B 
0000044C 22746578 74225D 
00000453 0A00              A  1754    	DB	10,0
00000455                   A  1755    L__100:
00000455 3320496E          A  1756    	DB	"3 Incorrect format, switch [n] [\"text\"]"
00000459 636F7272 
0000045D 65637420 
00000461 666F726D 
00000465 61742C20 
00000469 73776974 
0000046D 6368205B 
00000471 6E5D205B 
00000475 22746578 74225D 
0000047C 0A00              A  1757    	DB	10,0
                           A  1758    	SEGMENT CODE
                           A  1759    ;  362	
                           A  1760    ;  363	static void cli_command_switch(char *args)
                           A  1761    ;  364	{
000004EC                   A  1762    _cli_command_switch:
                           A  1763    .define "_cli_command_switch"
                           A  1764    .value _cli_command_switch
                           A  1765    .class 3
                           A  1766    .type 65
                           A  1767    .type 0
                           A  1768    .endef
                           A  1769    .begfunc "cli_command_switch",364,"_cli_command_switch"
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  39


PC     Object              I  Line    Source cli.src
000004EC 0808              A  1770    	LINK	#8
                           A  1771    .line 364
000004EE 57E1              A  1772    	LD.W	-2(R14),R1
                           A  1773    .define "args"
                           A  1774    .class 9
                           A  1775    .value -2
                           A  1776    .type 140
                           A  1777    .type 0
                           A  1778    .endef
                           A  1779    .define "token"
                           A  1780    .class 1
                           A  1781    .value -4
                           A  1782    .type 140
                           A  1783    .type 0
                           A  1784    .endef
                           A  1785    .define "value"
                           A  1786    .class 1
                           A  1787    .value -8
                           A  1788    .type 5
                           A  1789    .type 0
                           A  1790    .endef
                           A  1791    ;  365		char *token;
                           A  1792    ;  366		int value;
                           A  1793    ;  367	
                           A  1794    ;  368		cli_strip_spaces(&args);
                           A  1795    .line 368
000004F0 4FE1              A  1796    	LEA	R1,-2(R14)
000004F2 DE59              A  1797    	CALL	_cli_strip_spaces
                           A  1798    ;  369	
                           A  1799    ;  370		token = args;
                           A  1800    .line 370
000004F4 6FE0              A  1801    	LD.SW	R0,-2(R14)
000004F6 57C0              A  1802    	LD.W	-4(R14),R0
                           A  1803    ;  371		if(cli_strip_decimal_number(&args)) {
                           A  1804    .line 371
000004F8 4FE1              A  1805    	LEA	R1,-2(R14)
000004FA DE38              A  1806    	CALL	_cli_strip_decimal_number
000004FC 9000              A  1807    	CP	R0,#0
000004FE E6 06             A  1808    	JP	EQ,_15_L_90
                           A  1809    ;  372			uart_printf("1 Incorrect format, switch [n] [\"text\"]\n");
                           A  1810    .line 372
00000500 098F 0403         A  1811    	PUSH.W	#L__95
00000504 F1 FFFD7C         A  1812    	CALL	_uart_printf
00000508 8F02              A  1813    	ADD	R15,#2
                           A  1814    ;  373			return;
                           A  1815    .line 373
0000050A C027              A  1816    	JP	_15_L_96
                           A  1817    ;  374		}
0000050C                   A  1818    _15_L_90:
                           A  1819    .line 374
                           A  1820    ;  375		value = atoi(token);
                           A  1821    .line 375
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  40


PC     Object              I  Line    Source cli.src
0000050C 6FC1              A  1822    	LD.SW	R1,-4(R14)
0000050E F1 FFFD77         A  1823    	CALL	_atoi
00000512 5B80              A  1824    	LD	-8(R14),R0
                           A  1825    ;  376	
                           A  1826    ;  377		if(value < 0 || value >= MACRO_MAX) {
                           A  1827    .line 377
00000514 ADDE BFF8         A  1828    	CPZ	-8(R14)
00000518 E1 04             A  1829    	JP	LT,_15_L_92
0000051A 3003              A  1830    	LD	R0,#3
0000051C 7D0E FFF8         A  1831    	CP	-8(R14),R0
00000520 E1 06             A  1832    	JP	LT,_15_L_93
00000522                   A  1833    _15_L_92:
                           A  1834    ;  378			uart_printf("2 Incorrect format, switch [n] [\"text\"]\n");
                           A  1835    .line 378
00000522 098F 042C         A  1836    	PUSH.W	#L__98
00000526 F1 FFFD6B         A  1837    	CALL	_uart_printf
0000052A 8F02              A  1838    	ADD	R15,#2
                           A  1839    ;  379			return;
                           A  1840    .line 379
0000052C C016              A  1841    	JP	_15_L_96
                           A  1842    ;  380		}
0000052E                   A  1843    _15_L_93:
                           A  1844    .line 380
                           A  1845    ;  381	
                           A  1846    ;  382		++args;
                           A  1847    .line 382
0000052E ADEE 7FFE         A  1848    	INC.W	-2(R14)
                           A  1849    ;  383		cli_strip_spaces(&args);
                           A  1850    .line 383
00000532 4FE1              A  1851    	LEA	R1,-2(R14)
00000534 DE38              A  1852    	CALL	_cli_strip_spaces
                           A  1853    ;  384	
                           A  1854    ;  385		token = args;
                           A  1855    .line 385
00000536 6FE0              A  1856    	LD.SW	R0,-2(R14)
00000538 57C0              A  1857    	LD.W	-4(R14),R0
                           A  1858    ;  386		if(cli_strip_quotes(&args)) {
                           A  1859    .line 386
0000053A 4FE1              A  1860    	LEA	R1,-2(R14)
0000053C DDDD              A  1861    	CALL	_cli_strip_quotes
0000053E 9000              A  1862    	CP	R0,#0
00000540 E6 06             A  1863    	JP	EQ,_15_L_95
                           A  1864    ;  387			uart_printf("3 Incorrect format, switch [n] [\"text\"]\n");
                           A  1865    .line 387
00000542 098F 0455         A  1866    	PUSH.W	#L__100
00000546 F1 FFFD5B         A  1867    	CALL	_uart_printf
0000054A 8F02              A  1868    	ADD	R15,#2
                           A  1869    ;  388			return;
                           A  1870    .line 388
0000054C C006              A  1871    	JP	_15_L_96
                           A  1872    ;  389		}
0000054E                   A  1873    _15_L_95:
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  41


PC     Object              I  Line    Source cli.src
                           A  1874    .line 389
                           A  1875    ;  390	
                           A  1876    ;  391		macro_set(value, ++token);
                           A  1877    .line 391
0000054E ADEE 7FFC         A  1878    	INC.W	-4(R14)
00000552 5F81              A  1879    	LD	R1,-8(R14)
00000554 6FC2              A  1880    	LD.SW	R2,-4(R14)
00000556 F1 FFFD53         A  1881    	CALL	_macro_set
                           A  1882    ;  392	}
0000055A                   A  1883    _15_L_96:
                           A  1884    .line 392
0000055A 0001              A  1885    	UNLINK	
0000055C FFFC              A  1886    	RET	
                           A  1887    
                           A  1888    
                           A  1889    ;**************************** _cli_command_switch ***************************
                           A  1890    ;Name                         Addr/Register   Size   Type
                           A  1891    ;_macro_set                          IMPORT  -----   function
                           A  1892    ;_cli_strip_quotes                   IMPORT  -----   function
                           A  1893    ;_atoi                               IMPORT  -----   function
                           A  1894    ;_uart_printf                        IMPORT  -----   function
                           A  1895    ;_cli_strip_decimal_number           IMPORT  -----   function
                           A  1896    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1897    ;value                                R14-8      4   variable
                           A  1898    ;token                                R14-4      2   variable
                           A  1899    ;args                                 R14-2      2   parameter
                           A  1900    
                           A  1901    
                           A  1902    ; Aggregate Stack Size: -8 (words)
                           A  1903    
                           A  1904    
                           A  1905    .endfunc "cli_command_switch",392,"_cli_command_switch"
                           A  1906    	SEGMENT ROM_TEXT
0000047E                   A  1907    L__103:
0000047E 496E636F          A  1908    	DB	"Incorrect format, port [A-K]"
00000482 72726563 
00000486 7420666F 
0000048A 726D6174 
0000048E 2C20706F 
00000492 7274205B 
00000496 412D4B5D 
0000049A 0A00              A  1909    	DB	10,0
                           A  1910    	SEGMENT CODE
                           A  1911    ;  393	
                           A  1912    ;  394	static void cli_command_port(char *args)
                           A  1913    ;  395	{
0000055E                   A  1914    _cli_command_port:
                           A  1915    .define "_cli_command_port"
                           A  1916    .value _cli_command_port
                           A  1917    .class 3
                           A  1918    .type 65
                           A  1919    .type 0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  42


PC     Object              I  Line    Source cli.src
                           A  1920    .endef
                           A  1921    .begfunc "cli_command_port",395,"_cli_command_port"
0000055E 0804              A  1922    	LINK	#4
                           A  1923    .line 395
00000560 57E1              A  1924    	LD.W	-2(R14),R1
                           A  1925    .define "args"
                           A  1926    .class 9
                           A  1927    .value -2
                           A  1928    .type 140
                           A  1929    .type 0
                           A  1930    .endef
                           A  1931    .define "token"
                           A  1932    .class 1
                           A  1933    .value -4
                           A  1934    .type 140
                           A  1935    .type 0
                           A  1936    .endef
                           A  1937    ;  396		char *token;
                           A  1938    ;  397	
                           A  1939    ;  398		cli_strip_spaces(&args);
                           A  1940    .line 398
00000562 4FE1              A  1941    	LEA	R1,-2(R14)
00000564 DE20              A  1942    	CALL	_cli_strip_spaces
                           A  1943    ;  399	
                           A  1944    ;  400		token = args;
                           A  1945    .line 400
00000566 6FE0              A  1946    	LD.SW	R0,-2(R14)
00000568 57C0              A  1947    	LD.W	-4(R14),R0
                           A  1948    ;  401		if(cli_strip_word(&args)) {
                           A  1949    .line 401
0000056A 4FE1              A  1950    	LEA	R1,-2(R14)
0000056C DDE4              A  1951    	CALL	_cli_strip_word
0000056E 9000              A  1952    	CP	R0,#0
00000570 E6 06             A  1953    	JP	EQ,_16_L_98
                           A  1954    ;  402			uart_printf("Incorrect format, port [A-K]\n");
                           A  1955    .line 402
00000572 098F 047E         A  1956    	PUSH.W	#L__103
00000576 F1 FFFD43         A  1957    	CALL	_uart_printf
0000057A 8F02              A  1958    	ADD	R15,#2
                           A  1959    ;  403			return;
                           A  1960    .line 403
0000057C C003              A  1961    	JP	_16_L_99
                           A  1962    ;  404		}
0000057E                   A  1963    _16_L_98:
                           A  1964    .line 404
                           A  1965    ;  405	
                           A  1966    ;  406		ports_print_config(token);
                           A  1967    .line 406
0000057E 6FC1              A  1968    	LD.SW	R1,-4(R14)
00000580 F1 FFFD3E         A  1969    	CALL	_ports_print_config
                           A  1970    ;  407	}
00000584                   A  1971    _16_L_99:
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  43


PC     Object              I  Line    Source cli.src
                           A  1972    .line 407
00000584 0001              A  1973    	UNLINK	
00000586 FFFC              A  1974    	RET	
                           A  1975    
                           A  1976    
                           A  1977    ;**************************** _cli_command_port ***************************
                           A  1978    ;Name                         Addr/Register   Size   Type
                           A  1979    ;_ports_print_config                 IMPORT  -----   function
                           A  1980    ;_uart_printf                        IMPORT  -----   function
                           A  1981    ;_cli_strip_word                     IMPORT  -----   function
                           A  1982    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  1983    ;token                                R14-4      2   variable
                           A  1984    ;args                                 R14-2      2   parameter
                           A  1985    
                           A  1986    
                           A  1987    ; Aggregate Stack Size: -4 (words)
                           A  1988    
                           A  1989    
                           A  1990    .endfunc "cli_command_port",407,"_cli_command_port"
                           A  1991    	SEGMENT ROM_TEXT
0000049C                   A  1992    L__106:
0000049C 496E636F          A  1993    	DB	"Incorrect format, timer [0-2]"
000004A0 72726563 
000004A4 7420666F 
000004A8 726D6174 
000004AC 2C207469 
000004B0 6D657220 
000004B4 5B302D32 5D 
000004B9 0A00              A  1994    	DB	10,0
                           A  1995    	SEGMENT CODE
                           A  1996    ;  408	
                           A  1997    ;  409	static void cli_command_timer(char *args)
                           A  1998    ;  410	{
00000588                   A  1999    _cli_command_timer:
                           A  2000    .define "_cli_command_timer"
                           A  2001    .value _cli_command_timer
                           A  2002    .class 3
                           A  2003    .type 65
                           A  2004    .type 0
                           A  2005    .endef
                           A  2006    .begfunc "cli_command_timer",410,"_cli_command_timer"
00000588 0804              A  2007    	LINK	#4
                           A  2008    .line 410
0000058A 57E1              A  2009    	LD.W	-2(R14),R1
                           A  2010    .define "args"
                           A  2011    .class 9
                           A  2012    .value -2
                           A  2013    .type 140
                           A  2014    .type 0
                           A  2015    .endef
                           A  2016    .define "token"
                           A  2017    .class 1
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  44


PC     Object              I  Line    Source cli.src
                           A  2018    .value -4
                           A  2019    .type 140
                           A  2020    .type 0
                           A  2021    .endef
                           A  2022    ;  411		char *token;
                           A  2023    ;  412	
                           A  2024    ;  413		cli_strip_spaces(&args);
                           A  2025    .line 413
0000058C 4FE1              A  2026    	LEA	R1,-2(R14)
0000058E DE0B              A  2027    	CALL	_cli_strip_spaces
                           A  2028    ;  414	
                           A  2029    ;  415		token = args;
                           A  2030    .line 415
00000590 6FE0              A  2031    	LD.SW	R0,-2(R14)
00000592 57C0              A  2032    	LD.W	-4(R14),R0
                           A  2033    ;  416		if(cli_strip_decimal_number(&args)) {
                           A  2034    .line 416
00000594 4FE1              A  2035    	LEA	R1,-2(R14)
00000596 DDEA              A  2036    	CALL	_cli_strip_decimal_number
00000598 9000              A  2037    	CP	R0,#0
0000059A E6 06             A  2038    	JP	EQ,_17_L_101
                           A  2039    ;  417			uart_printf("Incorrect format, timer [0-2]\n");
                           A  2040    .line 417
0000059C 098F 049C         A  2041    	PUSH.W	#L__106
000005A0 F1 FFFD2E         A  2042    	CALL	_uart_printf
000005A4 8F02              A  2043    	ADD	R15,#2
                           A  2044    ;  418			return;
                           A  2045    .line 418
000005A6 C003              A  2046    	JP	_17_L_102
                           A  2047    ;  419		}
000005A8                   A  2048    _17_L_101:
                           A  2049    .line 419
                           A  2050    ;  420	
                           A  2051    ;  421		timers_print_config(token);
                           A  2052    .line 421
000005A8 6FC1              A  2053    	LD.SW	R1,-4(R14)
000005AA F1 FFFD29         A  2054    	CALL	_timers_print_config
                           A  2055    ;  422	}
000005AE                   A  2056    _17_L_102:
                           A  2057    .line 422
000005AE 0001              A  2058    	UNLINK	
000005B0 FFFC              A  2059    	RET	
                           A  2060    
                           A  2061    
                           A  2062    ;**************************** _cli_command_timer ***************************
                           A  2063    ;Name                         Addr/Register   Size   Type
                           A  2064    ;_timers_print_config                IMPORT  -----   function
                           A  2065    ;_uart_printf                        IMPORT  -----   function
                           A  2066    ;_cli_strip_decimal_number           IMPORT  -----   function
                           A  2067    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  2068    ;token                                R14-4      2   variable
                           A  2069    ;args                                 R14-2      2   parameter
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  45


PC     Object              I  Line    Source cli.src
                           A  2070    
                           A  2071    
                           A  2072    ; Aggregate Stack Size: -4 (words)
                           A  2073    
                           A  2074    
                           A  2075    .endfunc "cli_command_timer",422,"_cli_command_timer"
                           A  2076    	SEGMENT ROM_TEXT
000004BB                   A  2077    L__109:
000004BB 3120496E          A  2078    	DB	"1 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
000004BF 636F7272 
000004C3 65637420 
000004C7 666F726D 
000004CB 61742C20 
000004CF 75617274 
000004D3 30205B73 
000004D7 70656564 
000004DB 205B6261 
000004DF 75647261 
000004E3 74655D5D 
000004E7 205B7061 
000004EB 72697479 
000004EF 205B6576 
000004F3 656E7C6F 
000004F7 64647C6E 
000004FB 6F6E655D 
000004FF 5D205B62 
00000503 69747320 
00000507 5B377C38 5D5D 
0000050D 0A00              A  2079    	DB	10,0
0000050F                   A  2080    L__110:
0000050F 73706565 64       A  2081    	DB	"speed"
00000514 00                A  2082    	DB	0
00000515                   A  2083    L__113:
00000515 3220496E          A  2084    	DB	"2 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
00000519 636F7272 
0000051D 65637420 
00000521 666F726D 
00000525 61742C20 
00000529 75617274 
0000052D 30205B73 
00000531 70656564 
00000535 205B6261 
00000539 75647261 
0000053D 74655D5D 
00000541 205B7061 
00000545 72697479 
00000549 205B6576 
0000054D 656E7C6F 
00000551 64647C6E 
00000555 6F6E655D 
00000559 5D205B62 
0000055D 69747320 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  46


PC     Object              I  Line    Source cli.src
00000561 5B377C38 5D5D 
00000567 0A00              A  2085    	DB	10,0
00000569                   A  2086    L__114:
00000569 70617269 7479     A  2087    	DB	"parity"
0000056F 00                A  2088    	DB	0
00000570                   A  2089    L__117:
00000570 3320496E          A  2090    	DB	"3 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
00000574 636F7272 
00000578 65637420 
0000057C 666F726D 
00000580 61742C20 
00000584 75617274 
00000588 30205B73 
0000058C 70656564 
00000590 205B6261 
00000594 75647261 
00000598 74655D5D 
0000059C 205B7061 
000005A0 72697479 
000005A4 205B6576 
000005A8 656E7C6F 
000005AC 64647C6E 
000005B0 6F6E655D 
000005B4 5D205B62 
000005B8 69747320 
000005BC 5B377C38 5D5D 
000005C2 0A00              A  2091    	DB	10,0
000005C4                   A  2092    L__118:
000005C4 62697473          A  2093    	DB	"bits"
000005C8 00                A  2094    	DB	0
000005C9                   A  2095    L__121:
000005C9 3420496E          A  2096    	DB	"4 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|none]] [bits [7|8]]"
000005CD 636F7272 
000005D1 65637420 
000005D5 666F726D 
000005D9 61742C20 
000005DD 75617274 
000005E1 30205B73 
000005E5 70656564 
000005E9 205B6261 
000005ED 75647261 
000005F1 74655D5D 
000005F5 205B7061 
000005F9 72697479 
000005FD 205B6576 
00000601 656E7C6F 
00000605 64647C6E 
00000609 6F6E655D 
0000060D 5D205B62 
00000611 69747320 
00000615 5B377C38 5D5D 
0000061B 0A00              A  2097    	DB	10,0
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  47


PC     Object              I  Line    Source cli.src
                           A  2098    	SEGMENT CODE
                           A  2099    ;  423	
                           A  2100    ;  424	static void cli_command_uart0(char *args)
                           A  2101    ;  425	{
000005B2                   A  2102    _cli_command_uart0:
                           A  2103    .define "_cli_command_uart0"
                           A  2104    .value _cli_command_uart0
                           A  2105    .class 3
                           A  2106    .type 65
                           A  2107    .type 0
                           A  2108    .endef
                           A  2109    .begfunc "cli_command_uart0",425,"_cli_command_uart0"
000005B2 0808              A  2110    	LINK	#8
                           A  2111    .line 425
000005B4 57E1              A  2112    	LD.W	-2(R14),R1
                           A  2113    .define "args"
                           A  2114    .class 9
                           A  2115    .value -2
                           A  2116    .type 140
                           A  2117    .type 0
                           A  2118    .endef
                           A  2119    .define "token"
                           A  2120    .class 1
                           A  2121    .value -4
                           A  2122    .type 140
                           A  2123    .type 0
                           A  2124    .endef
                           A  2125    .define "value"
                           A  2126    .class 1
                           A  2127    .value -8
                           A  2128    .type 5
                           A  2129    .type 0
                           A  2130    .endef
                           A  2131    ;  426		char *token;
                           A  2132    ;  427		int value;
                           A  2133    ;  428	
                           A  2134    ;  429		cli_strip_spaces(&args);
                           A  2135    .line 429
000005B6 4FE1              A  2136    	LEA	R1,-2(R14)
000005B8 DDF6              A  2137    	CALL	_cli_strip_spaces
                           A  2138    ;  430	
                           A  2139    ;  431		token = args;
                           A  2140    .line 431
000005BA 6FE0              A  2141    	LD.SW	R0,-2(R14)
000005BC 57C0              A  2142    	LD.W	-4(R14),R0
                           A  2143    ;  432		if(cli_strip_word(&args)) {
                           A  2144    .line 432
000005BE 4FE1              A  2145    	LEA	R1,-2(R14)
000005C0 DDBA              A  2146    	CALL	_cli_strip_word
000005C2 9000              A  2147    	CP	R0,#0
000005C4 E6 06             A  2148    	JP	EQ,_18_L_107
                           A  2149    ;  433			uart_printf("1 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|none]] 
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  48


PC     Object              I  Line    Source cli.src
                           A  2150    .line 433
000005C6 098F 04BB         A  2151    	PUSH.W	#L__109
000005CA F1 FFFD19         A  2152    	CALL	_uart_printf
000005CE 8F02              A  2153    	ADD	R15,#2
                           A  2154    ;  434			return;
                           A  2155    .line 434
000005D0 C062              A  2156    	JP	_18_L_116
                           A  2157    ;  435		}
000005D2                   A  2158    _18_L_107:
                           A  2159    .line 435
                           A  2160    ;  436	
                           A  2161    ;  437		if(strcmp(token, "speed") == 0) {
                           A  2162    .line 437
000005D2 6FC1              A  2163    	LD.SW	R1,-4(R14)
000005D4 4502 050F         A  2164    	LD	R2,#L__110
000005D8 F1 FFFD12         A  2165    	CALL	_strcmp
000005DC 9000              A  2166    	CP	R0,#0
000005DE EE 1F             A  2167    	JP	NE,_18_L_111
                           A  2168    ;  438			++args;
                           A  2169    .line 438
000005E0 ADEE 7FFE         A  2170    	INC.W	-2(R14)
                           A  2171    ;  439			
                           A  2172    ;  440			cli_strip_spaces(&args);		
                           A  2173    .line 440
000005E4 4FE1              A  2174    	LEA	R1,-2(R14)
000005E6 DDDF              A  2175    	CALL	_cli_strip_spaces
                           A  2176    ;  441		
                           A  2177    ;  442			token = args;
                           A  2178    .line 442
000005E8 6FE0              A  2179    	LD.SW	R0,-2(R14)
000005EA 57C0              A  2180    	LD.W	-4(R14),R0
                           A  2181    ;  443			if(cli_strip_decimal_number(&args)) {
                           A  2182    .line 443
000005EC 4FE1              A  2183    	LEA	R1,-2(R14)
000005EE DDBE              A  2184    	CALL	_cli_strip_decimal_number
000005F0 9000              A  2185    	CP	R0,#0
000005F2 E6 06             A  2186    	JP	EQ,_18_L_105
                           A  2187    ;  444				uart_printf("2 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|non
                           A  2188    .line 444
000005F4 098F 0515         A  2189    	PUSH.W	#L__113
000005F8 F1 FFFD02         A  2190    	CALL	_uart_printf
000005FC 8F02              A  2191    	ADD	R15,#2
                           A  2192    ;  445				return;
                           A  2193    .line 445
000005FE C04B              A  2194    	JP	_18_L_116
                           A  2195    ;  446			}
00000600                   A  2196    _18_L_105:
                           A  2197    .line 446
                           A  2198    ;  447			value = atoi(token);
                           A  2199    .line 447
00000600 6FC1              A  2200    	LD.SW	R1,-4(R14)
00000602 F1 FFFCFD         A  2201    	CALL	_atoi
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  49


PC     Object              I  Line    Source cli.src
00000606 5B80              A  2202    	LD	-8(R14),R0
                           A  2203    ;  448	
                           A  2204    ;  449			uart_set_baudrate(value);
                           A  2205    .line 449
00000608 5F81              A  2206    	LD	R1,-8(R14)
0000060A F1 FFFCF9         A  2207    	CALL	_uart_set_baudrate
                           A  2208    ;  450	
                           A  2209    ;  451			++args;
                           A  2210    .line 451
0000060E ADEE 7FFE         A  2211    	INC.W	-2(R14)
                           A  2212    ;  452			cli_strip_spaces(&args);
                           A  2213    .line 452
00000612 4FE1              A  2214    	LEA	R1,-2(R14)
00000614 DDC8              A  2215    	CALL	_cli_strip_spaces
                           A  2216    ;  453	
                           A  2217    ;  454			token = args;
                           A  2218    .line 454
00000616 6FE0              A  2219    	LD.SW	R0,-2(R14)
00000618 57C0              A  2220    	LD.W	-4(R14),R0
                           A  2221    ;  455			cli_strip_word(&args);
                           A  2222    .line 455
0000061A 4FE1              A  2223    	LEA	R1,-2(R14)
0000061C DD8C              A  2224    	CALL	_cli_strip_word
                           A  2225    ;  456		}
0000061E                   A  2226    _18_L_111:
                           A  2227    .line 456
                           A  2228    ;  457		if(strcmp(token, "parity") == 0) {
                           A  2229    .line 457
0000061E 6FC1              A  2230    	LD.SW	R1,-4(R14)
00000620 4502 0569         A  2231    	LD	R2,#L__114
00000624 F1 FFFCEC         A  2232    	CALL	_strcmp
00000628 9000              A  2233    	CP	R0,#0
0000062A EE 1B             A  2234    	JP	NE,_18_L_115
                           A  2235    ;  458			++args;
                           A  2236    .line 458
0000062C ADEE 7FFE         A  2237    	INC.W	-2(R14)
                           A  2238    ;  459	
                           A  2239    ;  460			cli_strip_spaces(&args);
                           A  2240    .line 460
00000630 4FE1              A  2241    	LEA	R1,-2(R14)
00000632 DDB9              A  2242    	CALL	_cli_strip_spaces
                           A  2243    ;  461	
                           A  2244    ;  462			token = args;
                           A  2245    .line 462
00000634 6FE0              A  2246    	LD.SW	R0,-2(R14)
00000636 57C0              A  2247    	LD.W	-4(R14),R0
                           A  2248    ;  463			if(cli_strip_word(&args)) {
                           A  2249    .line 463
00000638 4FE1              A  2250    	LEA	R1,-2(R14)
0000063A DD7D              A  2251    	CALL	_cli_strip_word
0000063C 9000              A  2252    	CP	R0,#0
0000063E E6 06             A  2253    	JP	EQ,_18_L_109
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  50


PC     Object              I  Line    Source cli.src
                           A  2254    ;  464				uart_printf("3 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|non
                           A  2255    .line 464
00000640 098F 0570         A  2256    	PUSH.W	#L__117
00000644 F1 FFFCDC         A  2257    	CALL	_uart_printf
00000648 8F02              A  2258    	ADD	R15,#2
                           A  2259    ;  465				return;
                           A  2260    .line 465
0000064A C025              A  2261    	JP	_18_L_116
                           A  2262    ;  466			}
0000064C                   A  2263    _18_L_109:
                           A  2264    .line 466
                           A  2265    ;  467	
                           A  2266    ;  468			uart_set_parity(token);
                           A  2267    .line 468
0000064C 6FC1              A  2268    	LD.SW	R1,-4(R14)
0000064E F1 FFFCD7         A  2269    	CALL	_uart_set_parity
                           A  2270    ;  469	
                           A  2271    ;  470			++args;
                           A  2272    .line 470
00000652 ADEE 7FFE         A  2273    	INC.W	-2(R14)
                           A  2274    ;  471			cli_strip_spaces(&args);
                           A  2275    .line 471
00000656 4FE1              A  2276    	LEA	R1,-2(R14)
00000658 DDA6              A  2277    	CALL	_cli_strip_spaces
                           A  2278    ;  472	
                           A  2279    ;  473			token = args;
                           A  2280    .line 473
0000065A 6FE0              A  2281    	LD.SW	R0,-2(R14)
0000065C 57C0              A  2282    	LD.W	-4(R14),R0
                           A  2283    ;  474			cli_strip_word(&args);
                           A  2284    .line 474
0000065E 4FE1              A  2285    	LEA	R1,-2(R14)
00000660 DD6A              A  2286    	CALL	_cli_strip_word
                           A  2287    ;  475		}
00000662                   A  2288    _18_L_115:
                           A  2289    .line 475
                           A  2290    ;  476		if(strcmp(token, "bits") == 0) {
                           A  2291    .line 476
00000662 6FC1              A  2292    	LD.SW	R1,-4(R14)
00000664 4502 05C4         A  2293    	LD	R2,#L__118
00000668 F1 FFFCCA         A  2294    	CALL	_strcmp
0000066C 9000              A  2295    	CP	R0,#0
0000066E EE 13             A  2296    	JP	NE,_18_L_116
                           A  2297    ;  477			++args;
                           A  2298    .line 477
00000670 ADEE 7FFE         A  2299    	INC.W	-2(R14)
                           A  2300    ;  478	
                           A  2301    ;  479			cli_strip_spaces(&args);
                           A  2302    .line 479
00000674 4FE1              A  2303    	LEA	R1,-2(R14)
00000676 DD97              A  2304    	CALL	_cli_strip_spaces
                           A  2305    ;  480	
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  51


PC     Object              I  Line    Source cli.src
                           A  2306    ;  481			token = args;
                           A  2307    .line 481
00000678 6FE0              A  2308    	LD.SW	R0,-2(R14)
0000067A 57C0              A  2309    	LD.W	-4(R14),R0
                           A  2310    ;  482			if(cli_strip_decimal_number(&args)) {
                           A  2311    .line 482
0000067C 4FE1              A  2312    	LEA	R1,-2(R14)
0000067E DD76              A  2313    	CALL	_cli_strip_decimal_number
00000680 9000              A  2314    	CP	R0,#0
00000682 E6 06             A  2315    	JP	EQ,_18_L_113
                           A  2316    ;  483				uart_printf("4 Incorrect format, uart0 [speed [baudrate]] [parity [even|odd|non
                           A  2317    .line 483
00000684 098F 05C9         A  2318    	PUSH.W	#L__121
00000688 F1 FFFCBA         A  2319    	CALL	_uart_printf
0000068C 8F02              A  2320    	ADD	R15,#2
                           A  2321    ;  484				return;
                           A  2322    .line 484
0000068E C003              A  2323    	JP	_18_L_116
                           A  2324    ;  485			}
00000690                   A  2325    _18_L_113:
                           A  2326    .line 485
                           A  2327    ;  486	
                           A  2328    ;  487			uart_set_bits(token);
                           A  2329    .line 487
00000690 6FC1              A  2330    	LD.SW	R1,-4(R14)
00000692 F1 FFFCB5         A  2331    	CALL	_uart_set_bits
                           A  2332    ;  488		}
00000696                   A  2333    _18_L_116:
                           A  2334    .line 489
00000696 0001              A  2335    	UNLINK	
00000698 FFFC              A  2336    	RET	
                           A  2337    
                           A  2338    
                           A  2339    ;**************************** _cli_command_uart0 ***************************
                           A  2340    ;Name                         Addr/Register   Size   Type
                           A  2341    ;_uart_set_bits                      IMPORT  -----   function
                           A  2342    ;_uart_set_parity                    IMPORT  -----   function
                           A  2343    ;_uart_set_baudrate                  IMPORT  -----   function
                           A  2344    ;_atoi                               IMPORT  -----   function
                           A  2345    ;_cli_strip_decimal_number           IMPORT  -----   function
                           A  2346    ;_strcmp                             IMPORT  -----   function
                           A  2347    ;_uart_printf                        IMPORT  -----   function
                           A  2348    ;_cli_strip_word                     IMPORT  -----   function
                           A  2349    ;_cli_strip_spaces                   IMPORT  -----   function
                           A  2350    ;value                                R14-8      4   variable
                           A  2351    ;token                                R14-4      2   variable
                           A  2352    ;args                                 R14-2      2   parameter
                           A  2353    
                           A  2354    
                           A  2355    ; Aggregate Stack Size: -8 (words)
                           A  2356    
                           A  2357    
ZiLOG ZNEO Macro Assembler Version 1.10 (07022203)                                               01-Mar-11     23:16:23     page:  52


PC     Object              I  Line    Source cli.src
                           A  2358    .endfunc "cli_command_uart0",489,"_cli_command_uart0"
                           A  2359    	XREF _timers_print_config:EROM
                           A  2360    	XREF _isspace:EROM
                           A  2361    	XREF _isgraph:EROM
                           A  2362    	XREF _isdigit:EROM
                           A  2363    	XREF _isalpha:EROM
                           A  2364    	XREF _memset:EROM
                           A  2365    	XREF _memcpy:EROM
                           A  2366    	XREF _strlen:EROM
                           A  2367    	XREF _strchr:EROM
                           A  2368    	XREF _strcmp:EROM
                           A  2369    	XREF _atoi:EROM
                           A  2370    	XREF _ports_print_config:EROM
                           A  2371    	XREF _macro_set:EROM
                           A  2372    	XREF _info_display:EROM
                           A  2373    	XREF _init_info:EROM
                           A  2374    	XREF _uart_set_bits:EROM
                           A  2375    	XREF _uart_set_parity:EROM
                           A  2376    	XREF _uart_set_baudrate:EROM
                           A  2377    	XREF _uart_printf:EROM
                           A  2378    	XREF _uart_getchar:EROM
                           A  2379    	XREF _init_uart:EROM
                           A  2380    	XREF _led_display_int_hex:EROM
                           A  2381    	XREF _led_display_text:EROM
                           A  2382    	XREF _init_leds:EROM
                           A  2383    	XDEF _cli_set_prompt
                           A  2384    	XDEF _cli_strip_spaces
                           A  2385    	XDEF _cli_strip_decimal_number
                           A  2386    	XDEF _cli_strip_word
                           A  2387    	XDEF _cli_strip_quotes
                           A  2388    	XDEF _cli_loop
                           A  2389    	XDEF _init_cli
                           A  2390    	END


Errors: 0
Warnings: 0
Lines Assembled: 2391
