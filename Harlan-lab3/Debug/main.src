; ZiLOG ZNEO ANSI C Compiler Release 1.11
; -nolocalcse -optsize -model=S -nomodsect -noregvar
; -reduceopt -debug -peephole -const=ROM -alias -fastcall
	FILE	"..\MAIN.C"
.debug "C"
	SEGMENT CODE
.begrec "fmt_type",16
.define "status"
.value 0
.class 8
.type 12
.type 0
.endef
.define "flags"
.value 1
.class 8
.type 12
.type 0
.endef
.define "size"
.value 2
.class 8
.type 12
.type 0
.endef
.define "chr"
.value 3
.class 8
.type 12
.type 0
.endef
.define "type"
.value 4
.class 8
.type 12
.type 0
.endef
.define "field_width"
.value 5
.class 8
.type 2
.type 0
.endef
.define "precision"
.value 6
.class 8
.type 2
.type 0
.endef
.define "set_begin"
.value 7
.class 8
.type 140
.type 0
.endef
.define "set_end"
.value 9
.class 8
.type 140
.type 0
.endef
.define "pad_whole"
.value 11
.class 8
.type 12
.type 0
.endef
.define "pad_pre_fract"
.value 12
.class 8
.type 12
.type 0
.endef
.define "pad_post_fract"
.value 13
.class 8
.type 12
.type 0
.endef
.define "pad_at"
.value 14
.class 8
.type 140
.type 0
.endef
.endrec "fmt_type"
.begrec "flt_info",12
.define "flags"
.value 0
.class 8
.type 12
.type 0
.endef
.define "exp"
.value 1
.class 8
.type 2
.type 0
.endef
.define "digits"
.value 2
.class 8
.dim 10
.type 108
.type 0
.endef
.endrec "flt_info"
;    1	/*
;    2		Author: Matthew Harlan
;    3		Email:  mharlan@gwmail.gwu.edu
;    4		Class:  CSCI-4415
;    5		Date: 	March 1st, 2011
;    6		Lab:    3
;    7		
;    8		Description: This program is a command line interface that communicates via
;    9		a serial port. Run the program and enter "?" to see a list of available commands.
;   10	
;   11		Other files: buttons.c buttons.h cli.c cli.h info.c info.h LED.c LED.h LED_ascii.h
;   12		macro.c macro.h oscillator.c oscillator.h ports.c ports.h timer.c timer.h uart.c uart.h
;   13	
;   14		Compile: Set the user include path to the include directory.
;   15		
;   16		Problems: I could not get access to ports J or K.
;   17	
;   18		Comments: None.
;   19	
;   20		Enhancements: Transfers and receives over the UART using interrupts and buffers.
;   21	 */
;   22	
;   23	#include "LED.h"
;   24	#include "oscillator.h"
;   25	#include "buttons.h"
;   26	#include "timer.h"
;   27	#include "cli.h"
;   28	#include "macro.h"
;   29	
;   30	#include <zneo.h>
;   31	#include <stdio.h>
;   32	
;   33	/*
;   34		Intializes the LED, sets the default value, and loops.
;   35	 */
;   36	void main(void)
;   37	{
_main:
.define "_main"
.value _main
.class 2
.type 65
.type 0
.endef
.begfunc "main",37,"_main"
	LINK	#0
;   38		//initialize the oscillator and global timer
;   39		init_oscillator(OSC_5_52MHZ);
.line 39
	LD	R1,#1
	CALL	_init_oscillator
;   40		init_timer(TIMER_2MS);
.line 40
	LD	R1,#2
	CALL	_init_timer
;   41	
;   42		//initialize the command line interface
;   43		init_cli();
.line 43
	CALL	_init_cli
;   44	
;   45		//initialize button functionality
;   46		init_buttons();
.line 46
	CALL	_init_buttons
;   47	
;   48		//enable interrupts
;   49		EI();
.line 49
	EI
;   50	
;   51		cli_loop();
.line 51
	CALL	_cli_loop
.line 52
	UNLINK	
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_cli_loop                           IMPORT  -----   function
;_EI                                 IMPORT  -----   function
;_init_buttons                       IMPORT  -----   function
;_init_cli                           IMPORT  -----   function
;_init_timer                         IMPORT  -----   function
;_init_oscillator                    IMPORT  -----   function


; Aggregate Stack Size: 0 (words)


.endfunc "main",52,"_main"
	XREF _cli_loop:EROM
	XREF _init_cli:EROM
	XREF _init_timer:EROM
	XREF _init_buttons:EROM
	XREF _init_oscillator:EROM
	XDEF _main
	END
