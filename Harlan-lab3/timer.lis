ZiLOG ZNeo ANSI C Compiler Version 1.10	Feb 27 2011	00:45:40	page: 1
Local	Global	File: C:\USERS\MATT\DOCUMENTS\CSCI-4415-LABS\HARLAN-LAB3\TIMER.C

     1	    1	#include "timer.h"
     2	   80	#include "oscillator.h"
     3	  101	#include "LED.h"
     4	  146	#include "buttons.h"
     5	  161	
     6	  162	#include <zneo.h>
     7	  688	
     8	  689	#define INTERVAL_1MS_INT 1
     9	  690	#define INTERVAL_2MS_INT 2
    10	  691	#define INTERVAL_4MS_INT 4
    11	  692	
    12	  693	#define INTERVAL_1MS_FLOAT 0.001f
    13	  694	#define INTERVAL_2MS_FLOAT 0.002f
    14	  695	#define INTERVAL_4MS_FLOAT 0.004f
    15	  696	
    16	  697	static int timer_state;
    17	  698	
    18	  699	/*
    19	  700		Interrupt for timer events.
    20	  701	
    21	  702		Used for updating the LED, polling the buttons, and responding
    22	  703		to note change events for the speaker..
    23	  704	 */
    24	  705	void interrupt timer_isr(void)
    25	  706	{
    26	  707		//enable interrupts for speaker interrupt
    27	  708		EI();
    28	  709	
    29	  710		led_update();
    30	  711		button_events();
    31	  712	}
    32	  713	
    33	  714	void init_timer(int mode)
    34	  715	{
    35	  716		timer_state = mode;
    36	  717	
    37	  718		T0CTL1 |= TIMER_DISABLE;
    38	  719	    T0CTL1 = TIMER_MODE_CONTINUOUS + TIMER_PRESCALE_128;
    39	  720	
    40	  721	    // Initial counter value
    41	  722	    T0HL = 0x00;
    42	  723	
    43	  724		if(timer_state == TIMER_4MS) {
    44	  725			// Timer reload
    45	  726	    	//   reload = clock / prescale * timeout  
    46	  727	   	 	T0R = (get_osc_clock() / 128) * INTERVAL_4MS_FLOAT;
    47	  728		}
    48	  729		else if(timer_state == TIMER_1MS) {
    49	  730			T0R = (get_osc_clock() / 128) * INTERVAL_1MS_FLOAT;
    50	  731		}
    51	  732		//default timer is 2ms
    52	  733		else {
    53	  734			T0R = (get_osc_clock() / 128) * INTERVAL_2MS_FLOAT;
    54	  735		}
    55	  736	
ZiLOG ZNeo ANSI C Compiler Version 1.10	Feb 27 2011	00:45:40	page: 2
Local	Global	File: C:\USERS\MATT\DOCUMENTS\CSCI-4415-LABS\HARLAN-LAB3\TIMER.C

    56	  737		// Enable Timer0 interrupt
    57	  738	    IRQ0EN |= IRQ_Timer0;
    58	  739	
    59	  740		T0CTL1 |= TIMER_ENABLE;
    60	  741	
    61	  742		SET_VECTOR(TIMER0, timer_isr);
    62	  743	}
    63	  744	
    64	  745	int timer_interval_int(void)
    65	  746	{
    66	  747		if(timer_state == TIMER_1MS) {
    67	  748			return INTERVAL_1MS_INT;
    68	  749		}
    69	  750		else if(timer_state == TIMER_2MS) {
    70	  751			return INTERVAL_2MS_INT;
    71	  752		}
    72	  753		else {
    73	  754			return INTERVAL_4MS_INT;
    74	  755		}
    75	  756	}
    76	  757	
    77	  758	float timer_interval_float(void)
    78	  759	{
    79	  760		if(timer_state == TIMER_1MS) {
    80	  761			return INTERVAL_1MS_FLOAT;
    81	  762		}
    82	  763		else if(timer_state == TIMER_2MS) {
    83	  764			return INTERVAL_2MS_FLOAT;
    84	  765		}
    85	  766		else {
    86	  767			return INTERVAL_4MS_FLOAT;
    87	  768		}
    88	  769	}ÿ
